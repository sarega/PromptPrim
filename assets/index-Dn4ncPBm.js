(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=n(a);fetch(a.href,r)}})();const ie="AIChatbotDB_Project_",S="chatSessions",T="projectMetadata",be="projectInfo",B={"agent-name-input":"name","agent-icon-input":"icon","agent-model-select":"model","agent-system-prompt":"systemPrompt","agent-use-markdown":"useMarkdown","agent-temperature":"temperature","agent-topP":"topP","agent-topK":"topK","agent-presence-penalty":"presence_penalty","agent-frequency-penalty":"frequency_penalty","agent-max-tokens":"max_tokens","agent-seed":"seed","agent-stop-sequences":"stop_sequences"},ve={Standard:`You are a professional summarizer. Your task is to create a dense, context-rich summary of a conversation. Include all key entities, character names, locations, critical events, and important emotional states. The summary should be detailed enough for another AI to pick up the conversation and understand all necessary context.

Here is the summary of the conversation so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new messages that have occurred since that summary:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive summary that integrates the key points from the new messages into the previous one. Respond with ONLY the new, complete summary text.`,"Literary Analyst":`You are a meticulous literary analyst tasked with creating a detailed narrative digest. Your primary goal is to preserve the story's integrity, character development, and emotional nuances. Do NOT sacrifice important details for the sake of brevity.

Your digest must include:
- Plot Progression: Every significant event and the causal links between them.
- Character Arcs: Any changes in a character's state of mind, motivation, decisions, or relationships.
- Key Dialogue: Capture the essence and subtext of crucial conversations.
- Atmosphere & Setting: Mention key descriptions of the environment if they contribute to the mood or plot.
- New Elements: Note the introduction of any new characters, significant objects, or unresolved questions (foreshadowing).

Here is the narrative digest so far:
--- PREVIOUS DIGEST ---
\${previousSummary}
--- END PREVIOUS DIGEST ---

Now, here are the new scenes and dialogues that have occurred:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive narrative digest that seamlessly integrates the key points from the new messages into the previous one. Write in a third-person, past-tense narrative style. Respond with ONLY the new, complete digest text.`,"Continuity Editor":`You are a continuity editor for a novel series. Your job is to create a 'Previously On...' document that ensures no plot points are ever lost. The output must be extremely detailed, acting as a perfect memory for another AI to continue the story without missing a single beat.

The document must retain:
- All character actions and their immediate consequences.
- The full names of any character or location mentioned.
- The specifics of any plans made or secrets revealed.
- Emotional state of each character at the end of the scene.
- Any objects that were acquired, lost, or noted as important.

The goal is maximum information retention, not summarization. Think of this as expanding upon the previous summary with new, detailed information.

Here is the continuity document so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new events to be added:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide the updated, complete continuity document, integrating the new events chronologically. Your response should be a single block of text containing only the updated document.`},ee={model:"openai/gpt-4o-mini",systemPrompt:"You are a highly efficient assistant that processes user requests and responds in a structured JSON format when required. You are objective and precise.",summarizationPrompt:ve.Standard,temperature:.2,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:2048,seed:-1,stop_sequences:""},Ne=[{name:"Code Assistant",content:"You are an expert programmer."},{name:"Creative Writer",content:"You are a creative writing assistant."}],Se={icon:"🤖",model:"",systemPrompt:"You are a helpful assistant.",useMarkdown:!0,temperature:1,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:4096,seed:-1,stop_sequences:""},b={currentProject:{},allProviderModels:[],isLoading:!1,isDirtyForAutoSave:!1,abortController:null,editingAgentName:null,editingGroupName:null,pendingFileToOpen:null,pendingActionAfterSave:null},M={events:{},subscribe(e,t){return this.events[e]=this.events[e]||[],this.events[e].push(t),()=>{this.events[e]=this.events[e].filter(n=>t!==n)}},publish(e,t){this.events[e]&&this.events[e].forEach(n=>n(t))}},o={getState:()=>b,getProject:()=>b.currentProject,isLoading:()=>b.isLoading,isUserDirty:()=>b.currentProject?.isDirtyForUser||!1,isAutoSaveDirty:()=>b.isDirtyForAutoSave,setState:(e,t)=>{b[e]=t},setProject:e=>{b.currentProject=e,M.publish("project:stateChanged",b.currentProject)},setLoading:e=>{b.isLoading!==e&&(b.isLoading=e,M.publish("loading:changed",e))},setUserDirty:e=>{b.currentProject&&b.currentProject.isDirtyForUser!==e&&(b.currentProject.isDirtyForUser=e,M.publish("userDirty:changed",e))},setAutoSaveDirty:e=>{b.isDirtyForAutoSave!==e&&(b.isDirtyForAutoSave=e,e&&M.publish("autosave:required"))},updateAndPersistState:()=>{o.setUserDirty(!0),o.setAutoSaveDirty(!0)},setAllModels:e=>{b.allProviderModels=e.sort((t,n)=>t.name.localeCompare(n.name)),b.currentProject&&b.currentProject.globalSettings&&(b.currentProject.globalSettings.allModels=b.allProviderModels),M.publish("models:loaded",b.allProviderModels)},newAbortController:()=>(b.abortController=new AbortController,b.abortController),abort:()=>{b.abortController&&(b.abortController.abort(),b.abortController=null)},bus:M};async function qe(e){const t=await fetch("https://openrouter.ai/api/v1/models",{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error("Could not fetch models from OpenRouter");return(await t.json()).data.map(s=>({id:s.id,name:s.name||s.id,provider:"openrouter"}))}async function Ue(e){try{const t=await fetch(`${e}/api/tags`);if(!t.ok)throw new Error(`Could not connect to Ollama (HTTP ${t.status})`);return(await t.json()).models.map(s=>({id:s.name,name:s.name,provider:"ollama"}))}catch(t){throw t instanceof TypeError?new Error("Could not connect to Ollama. Check URL, server status, and CORS settings."):t}}async function Ee(){o.bus.publish("status:update",{message:"Loading models...",state:"loading"});let e=o.getProject();if(!e||!e.globalSettings){o.bus.publish("status:update",{message:"Project not loaded",state:"error"});return}const t=e.globalSettings.apiKey?.trim()||"",n=e.globalSettings.ollamaBaseUrl?.trim()||"";let s={message:"No models found. Please check API settings.",state:"warning"};const a=[];t&&a.push(qe(t).catch(r=>(console.error("OpenRouter fetch failed:",r),[]))),n&&a.push(Ue(n).catch(r=>(console.error("Ollama fetch failed:",r),[])));try{if(a.length===0){o.setAllModels([]),s={message:"Ready",state:"connected"},o.bus.publish("status:update",s);return}const i=(await Promise.all(a)).flat();if(i.length>0){const c="google/gemma-3-27b-it",d=i.some(u=>u.id===c);let l=!1;if(d){const u=["openai/gpt-4o-mini","google/gemma-2-27b-it"];(!e.globalSettings.systemUtilityAgent.model||u.includes(e.globalSettings.systemUtilityAgent.model))&&(e.globalSettings.systemUtilityAgent.model=c,l=!0);const m=e.agentPresets["Default Agent"];m&&!m.model&&(m.model=c,l=!0)}l&&o.setProject(e),o.setAllModels(i),l&&await o.updateAndPersistState(),s={message:`Loaded ${i.length} models successfully.`,state:"connected"}}}catch(r){s={message:`Error loading models: ${r.message}`,state:"error"}}o.bus.publish("status:update",s),o.bus.publish("project:loaded",{projectData:o.getProject()})}async function O(e,t){const s=o.getState().allProviderModels.find(p=>p.id===e.model);if(!s)throw new Error("Model data not found for the agent.");const a=o.getProject(),r=s.provider,i={model:e.model,messages:t,stream:!1},c={temperature:parseFloat(e.temperature),top_p:parseFloat(e.topP),top_k:parseInt(e.topK,10),presence_penalty:parseFloat(e.presence_penalty),frequency_penalty:parseFloat(e.frequency_penalty),max_tokens:parseInt(e.max_tokens,10),seed:parseInt(e.seed,10)};e.stop_sequences&&(c.stop=e.stop_sequences.split(",").map(p=>p.trim()));let d,l;r==="openrouter"?(d="https://openrouter.ai/api/v1/chat/completions",l={Authorization:`Bearer ${a.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(i,c)):(d=`${a.globalSettings.ollamaBaseUrl}/api/chat`,l={"Content-Type":"application/json"},i.options=c);const u=await fetch(d,{method:"POST",headers:l,body:JSON.stringify(i),signal:o.getState().abortController?.signal});if(!u.ok){const p=await u.text();throw new Error(`API Error: ${p}`)}const m=await u.json();if(r==="openrouter"&&m.choices&&m.choices.length>0)return m.choices[0].message.content;if(r==="ollama"&&m.message)return m.message.content;throw new Error("Invalid API response structure.")}async function te(e,t,n,s=null){const r=o.getState().allProviderModels.find(w=>w.id===t.model);if(!r)throw new Error("Model data not found for active agent.");const i=o.getProject(),c=r.provider,d={model:t.model,messages:n,stream:!0},l={temperature:parseFloat(t.temperature),top_p:parseFloat(t.topP),top_k:parseInt(t.topK,10),presence_penalty:parseFloat(t.presence_penalty),frequency_penalty:parseFloat(t.frequency_penalty),max_tokens:parseInt(t.max_tokens,10),seed:parseInt(t.seed,10)};t.stop_sequences&&(l.stop=t.stop_sequences.split(",").map(w=>w.trim()));let u,m;c==="openrouter"?(u="https://openrouter.ai/api/v1/chat/completions",m={Authorization:`Bearer ${i.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(d,l)):(u=`${i.globalSettings.ollamaBaseUrl}/api/chat`,m={"Content-Type":"application/json"},d.options=l);const p=await fetch(u,{method:"POST",headers:m,body:JSON.stringify(d),signal:o.getState().abortController?.signal});if(!p.ok){const w=await p.text();throw new Error(`API Error: ${w}`)}const g=p.body.getReader(),v=new TextDecoder;let h="",E="";const f=e.querySelector(".streaming-content");if(!f){e.innerHTML+=" Error: UI render target not found.";return}for(f.innerHTML="";!o.getState().abortController?.signal.aborted;){const{done:w,value:I}=await g.read();if(w)break;E+=v.decode(I,{stream:!0});const k=E.split(`
`);E=k.pop();for(const x of k){if(x.trim()==="")continue;let N="";try{if(c==="openrouter"){if(x.startsWith("data: ")){const A=x.substring(6);if(A.trim()==="[DONE]")break;N=JSON.parse(A).choices[0]?.delta?.content||""}}else{const A=JSON.parse(x);if(N=A.message?.content||"",A.done)break}}catch(A){console.warn("Error parsing stream chunk:",A)}N&&(h+=N,t.useMarkdown?f.innerHTML=marked.parse(h):f.textContent=h)}}return o.bus.publish("ui:enhanceCodeBlocks",e),h}async function Re(e){try{const t=o.getProject();if(t.activeEntity.type!=="agent")return;const n=t.activeEntity.name,s=t.agentPresets[n];if(!s||!s.model)return;const r=[{role:"user",content:'Based on the conversation, generate a concise title (3-5 words) and a single relevant emoji. Respond with a JSON object like {"title": "your title", "emoji": "👍"}.'}],i=await O({...s,temperature:.2},r);let c={};try{c=JSON.parse(i.match(/{.*}/s)[0])}catch{console.error("Failed to parse title JSON:",i),c={title:i.replace(/"/g,"").substring(0,30),emoji:"💬"}}const d=`${c.emoji||"💬"} ${c.title||"Untitled"}`;d&&o.bus.publish("session:autoRename",{sessionId:t.activeSessionId,newName:d})}catch(t){console.error("Auto-rename failed:",t)}}function ce(){document.getElementById("settings-panel").classList.toggle("open")}function Fe(){const e=o.getProject();document.getElementById("project-name-input").value=e.name==="Untitled Project"?"":e.name,document.getElementById("save-project-modal").style.display="flex"}function ze(){document.getElementById("save-project-modal").style.display="none"}function we(){document.getElementById("unsaved-changes-modal").style.display="flex"}function _e(){document.getElementById("unsaved-changes-modal").style.display="none"}function y(e,t="Notification"){document.getElementById("alert-modal-title").textContent=t,document.getElementById("alert-modal-message").textContent=e,document.getElementById("alert-modal").style.display="flex"}function Ge(){document.getElementById("alert-modal").style.display="none"}function Q(){document.querySelector(".sidebar").classList.toggle("open"),document.getElementById("mobile-overlay").classList.toggle("active")}function He(){document.querySelector(".app-wrapper").classList.toggle("sidebar-collapsed")}function D(e){e.stopPropagation();const t=e.currentTarget.closest(".dropdown"),n=e.currentTarget.closest(".item"),s=t.classList.contains("open");document.querySelectorAll(".dropdown.open").forEach(a=>{a.classList.remove("open");const r=a.closest(".item");r&&r.classList.remove("z-index-front")}),s||(t.classList.add("open"),n&&n.classList.add("z-index-front"))}function Ye(){const e=o.getProject();e?.globalSettings?.fontFamilySelect&&document.documentElement.style.setProperty("--main-font-family",e.globalSettings.fontFamilySelect)}function Je({message:e,state:t}){document.getElementById("statusText").textContent=e||"Ready";const n=document.getElementById("statusDot");n.className="status-dot",t==="connected"?n.classList.add("connected"):t==="error"&&n.classList.add("error")}function Ke(){const e=document.querySelector(".sidebar-resizer"),t=document.querySelector(".sidebar-horizontal-resizer"),n=document.querySelector(".sidebar"),s=document.querySelector(".sessions-frame"),a=document.querySelector(".memories-frame");if(!e||!t||!n||!s||!a){console.warn("Resizable sidebar elements not found. Resizing will be disabled.");return}let r=!1,i=!1;const c=h=>{if(!r)return;const E=h.touches?h.touches[0].clientY:h.clientY,f=document.querySelector(".sidebar-content");if(!f)return;const w=f.getBoundingClientRect();let I=E-w.top;const k=f.offsetHeight;I<100&&(I=100),I>k-100&&(I=k-100);const x=e.offsetHeight;s.style.flex=`0 1 ${I}px`,a.style.flex=`1 1 ${k-I-x}px`},d=h=>{h.preventDefault(),r=!0,document.body.style.cursor="ns-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",c),window.addEventListener("touchmove",c,{passive:!1}),window.addEventListener("mouseup",l),window.addEventListener("touchend",l)},l=()=>{r=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",c),window.removeEventListener("touchmove",c),window.removeEventListener("mouseup",l),window.removeEventListener("touchend",l),localStorage.setItem("sidebarSplitHeight",s.style.flex)};e.addEventListener("mousedown",d),e.addEventListener("touchstart",d,{passive:!1});const u=h=>{if(!i)return;let f=h.touches?h.touches[0].clientX:h.clientX;f<250&&(f=250),f>600&&(f=600),n.style.flexBasis=`${f}px`},m=h=>{h.preventDefault(),i=!0,document.body.style.cursor="ew-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",u),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("mouseup",p),window.addEventListener("touchend",p)},p=()=>{i=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",u),window.removeEventListener("touchmove",u),window.removeEventListener("mouseup",p),window.removeEventListener("touchend",p),localStorage.setItem("sidebarWidth",n.style.flexBasis)};t.addEventListener("mousedown",m),t.addEventListener("touchstart",m,{passive:!1});const g=localStorage.getItem("sidebarSplitHeight");g&&(s.style.flex=g);const v=localStorage.getItem("sidebarWidth");v&&(n.style.flexBasis=v)}function We(){o.bus.subscribe("ui:applyFontSettings",Ye),o.bus.subscribe("status:update",Je),document.querySelector("#settings-btn").addEventListener("click",ce),document.querySelector(".close-settings-btn").addEventListener("click",ce),document.getElementById("collapse-sidebar-btn").addEventListener("click",He);const e=document.getElementById("hamburger-btn");e&&e.addEventListener("click",Q);const t=document.getElementById("mobile-overlay");t&&t.addEventListener("click",Q);const n=document.querySelector("#alert-modal .btn");n&&n.addEventListener("click",Ge);const s=document.getElementById("unsaved-changes-modal");if(s){const a=s.querySelector(".btn:not(.btn-secondary):not(.btn-danger)");a&&a.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","save"));const r=s.querySelector(".btn-danger");r&&r.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","discard"));const i=s.querySelector(".btn-secondary");i&&i.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","cancel"))}Ke(),console.log("Core UI Initialized and Listeners Attached.")}function H(e){const t=document.getElementById("project-title");if(t){const n=o.isUserDirty(),s=e||o.getProject()?.name||"Untitled";t.textContent=n?`${s} *`:s}}function Ve(e){e&&e.stopPropagation(),document.getElementById("custom-entity-selector-wrapper").classList.toggle("open")}function Pe(e,t){let n;e==="agent"?n=document.querySelector(`.item[data-agent-name="${t}"]`):e==="group"&&(n=document.querySelector(`.item[data-group-name="${t}"]`)),n&&n.scrollIntoView({behavior:"smooth",block:"center"})}function Xe(e){const t=e.indexOf("_"),n=e.substring(0,t),s=e.substring(t+1);o.bus.publish("entity:select",{type:n,name:s}),document.getElementById("custom-entity-selector-wrapper").classList.remove("open")}function q(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=document.getElementById("entitySelector"),n=document.getElementById("custom-entity-selector-options"),s=document.getElementById("custom-entity-selector-icon"),a=document.getElementById("custom-entity-selector-text");t.innerHTML="",n.innerHTML="";const r=(d,l,u,m)=>{const p=`${d}_${l}`,g=document.createElement("div");g.className="custom-select-option",g.innerHTML=`<span class="item-icon">${u}</span> <span>${l}</span>`,g.addEventListener("click",()=>Xe(p)),m.appendChild(new Option(`${u} ${l}`,p)),n.appendChild(g)},i=e.agentPresets||{};if(Object.keys(i).length>0){const d=document.createElement("optgroup");d.label="Agent Presets",t.appendChild(d);const l=document.createElement("div");l.className="custom-select-group",l.textContent="Agent Presets",n.appendChild(l),Object.keys(i).forEach(u=>{r("agent",u,i[u].icon||"🤖",d)})}const c=e.agentGroups||{};if(Object.keys(c).length>0){const d=document.createElement("optgroup");d.label="Agent Groups",t.appendChild(d);const l=document.createElement("div");l.className="custom-select-group",l.textContent="Agent Groups",n.appendChild(l),Object.keys(c).forEach(u=>{r("group",u,"🤝",d)})}if(e.activeEntity){const{type:d,name:l}=e.activeEntity;t.value=`${d}_${l}`,d==="agent"&&i[l]?(s.textContent=i[l].icon||"🤖",a.textContent=l):d==="group"?(s.textContent="🤝",a.textContent=l):(s.textContent="❔",a.textContent="Select...")}}function Ze(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=document.getElementById("system-utility-summary-preset-select"),n=e.globalSettings.summarizationPromptPresets||{},s=document.getElementById("system-utility-summary-prompt").value;let a=null;t.innerHTML="";for(const r in n)t.add(new Option(r,r)),n[r].trim()===s.trim()&&(a=r);if(a)t.value=a;else{const r=new Option("--- Custom ---","custom",!0,!0);r.disabled=!0,t.add(r),t.value="custom"}}function Qe(){o.bus.subscribe("project:loaded",t=>{H(t.projectData.name),q()}),o.bus.subscribe("project:nameChanged",t=>H(t)),o.bus.subscribe("userDirty:changed",()=>{H()}),o.bus.subscribe("entity:selected",q),o.bus.subscribe("agent:listChanged",q),o.bus.subscribe("group:listChanged",q),o.bus.subscribe("ui:renderSummarizationSelector",Ze);const e=document.querySelector(".sidebar-bottom-row .dropdown");if(e){const t=e.querySelector("button");t&&t.addEventListener("click",D);const n=e.querySelector(".dropdown-content");if(n){const s=(a,r,i={})=>{const c=n.querySelector(a);c&&c.addEventListener("click",d=>{d.preventDefault(),o.bus.publish(r,i),e.classList.remove("open")})};s('a[data-action="newProject"]',"project:new"),s('a[data-action="openProject"]',"project:open"),s('a[data-action="saveProject"]',"project:save",!1),s('a[data-action="saveProjectAs"]',"project:save",!0),s('a[data-action="exportChat"]',"project:exportChat")}}document.getElementById("load-project-input").addEventListener("change",t=>o.bus.publish("project:fileSelectedForOpen",t)),document.getElementById("custom-entity-selector-trigger").addEventListener("click",Ve),console.log("Project UI Initialized.")}let P;function et(){return P}async function ne(e){return P&&P.name===`${ie}${e}`?Promise.resolve(P):(P&&(P.close(),P=null),new Promise((t,n)=>{const s=indexedDB.open(`${ie}${e}`,5);s.onupgradeneeded=a=>{const r=a.target.result;r.objectStoreNames.contains(S)||r.createObjectStore(S,{keyPath:"id"}),r.objectStoreNames.contains(T)||r.createObjectStore(T,{keyPath:"id"})},s.onsuccess=a=>{P=a.target.result,console.log(`IndexedDB '${P.name}' opened successfully.`),t(P)},s.onerror=a=>{console.error("IndexedDB error:",a.target.error),n(a.target.error)}}))}async function j(e,t,n,s){return new Promise((a,r)=>{if(!P)return console.error("dbRequest called before DB was opened."),r("Database is not open.");try{const d=P.transaction(e,t).objectStore(e)[n](s);d.onsuccess=l=>a(l.target.result||(n==="getAll"?[]:null)),d.onerror=l=>r(l.target.error)}catch(i){console.error(`Error performing dbRequest (${n} on ${e}):`,i),r(i)}})}async function je(e){return new Promise((t,n)=>{if(!P)return n("Database is not open.");try{const s=P.transaction(e,"readwrite");s.oncomplete=()=>{console.log(`Stores cleared: ${e.join(", ")}`),t()},s.onerror=a=>n(s.error),e.forEach(a=>{P.objectStoreNames.contains(a)&&s.objectStore(a).clear()})}catch(s){n(s)}})}async function _(){const e=o.getProject();if(!e||!e.activeEntity){y("Please create or select an agent first.","Error");return}const t={id:`sid_${Date.now()}_${Math.random().toString(36).substring(2,9)}`,name:"New Chat",history:[],createdAt:Date.now(),updatedAt:Date.now(),pinned:!1,archived:!1,linkedEntity:{...e.activeEntity},groupChatState:{isRunning:!1},summaryState:{activeSummaryId:null,summarizedUntilIndex:0}};try{await j(S,"readwrite","add",t),e.chatSessions||(e.chatSessions=[]),e.chatSessions.unshift(t),o.setProject(e),o.updateAndPersistState(),await $(t.id)}catch(n){console.error("Failed to create new session in DB:",n),y("Error creating new chat.","Error")}}async function $(e){if(o.isLoading())return;const t=o.getProject(),n=t.chatSessions.find(s=>s.id===e);if(n){if(t.activeSessionId=e,n.linkedEntity?.type==="agent"&&t.agentPresets[n.linkedEntity.name])t.activeEntity={...n.linkedEntity};else if(n.linkedEntity?.type==="group"&&t.agentGroups[n.linkedEntity.name])t.activeEntity={...n.linkedEntity};else if(Object.keys(t.agentPresets).length>0){const s=Object.keys(t.agentPresets)[0];t.activeEntity={type:"agent",name:s},n.linkedEntity={...t.activeEntity},o.updateAndPersistState()}else t.activeEntity=null;o.setProject(t),o.bus.publish("session:loaded",n),t.activeEntity&&(o.bus.publish("entity:selected",t.activeEntity),requestAnimationFrame(()=>{Pe(t.activeEntity.type,t.activeEntity.name)}))}}async function le(e,t,n=null){t&&t.stopPropagation();const s=o.getProject(),a=s.chatSessions.find(i=>i.id===e);if(!a)return;const r=n||prompt("Enter new name:",a.name);r&&r.trim()&&(a.name=r.trim(),a.updatedAt=Date.now(),o.setProject(s),o.updateAndPersistState(),o.bus.publish("session:changed"),e===s.activeSessionId&&o.bus.publish("session:titleChanged",r))}async function tt(e,t){if(t&&t.stopPropagation(),!confirm("Are you sure you want to delete this chat session?"))return;const n=o.getProject(),s=n.chatSessions.findIndex(a=>a.id===e);if(s!==-1)if(n.chatSessions.splice(s,1),await j(S,"readwrite","delete",e),o.updateAndPersistState(),n.activeSessionId===e){n.activeSessionId=null;const a=[...n.chatSessions].filter(r=>!r.archived).sort((r,i)=>i.updatedAt-r.updatedAt)[0];o.setProject(n),a?await $(a.id):await _()}else o.setProject(n),o.bus.publish("session:changed")}async function nt(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===e);s&&(s.pinned=!s.pinned,s.updatedAt=Date.now(),o.setProject(n),o.updateAndPersistState(),o.bus.publish("session:changed"))}async function st(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(r=>r.id===e);if(!s){y("Error: Could not find session to clone.","Error");return}const a=JSON.parse(JSON.stringify(s));a.id=`sid_${Date.now()}`,a.name=`${s.name} (Copy)`,a.createdAt=Date.now(),a.updatedAt=Date.now(),a.pinned=!1,a.archived=!1,n.chatSessions.unshift(a),await j(S,"readwrite","add",a),o.setProject(n),o.updateAndPersistState(),await $(a.id)}async function ot(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===e);if(s)if(s.archived=!s.archived,s.archived&&(s.pinned=!1),s.updatedAt=Date.now(),o.updateAndPersistState(),n.activeSessionId===e&&s.archived){n.activeSessionId=null;const a=n.chatSessions.find(r=>!r.archived);o.setProject(n),a?await $(a.id):await _()}else o.setProject(n),o.bus.publish("session:changed")}function at(e){const t=o.getProject(),n=e||t.activeSessionId;if(!n){y("No active chat session to export.");return}const s=t.chatSessions.find(l=>l.id===n);if(!s){y("Could not find session data to export.");return}const a=s.name||"Untitled_Chat";let r=`Chat Export - Session: ${a}
================

`;s.history.forEach(l=>{const u=l.speaker||l.role.charAt(0).toUpperCase()+l.role.slice(1);let m="";typeof l.content=="string"?m=l.content:Array.isArray(l.content)&&(m=l.content.find(p=>p.type==="text")?.text||"[Image]"),r+=`${u}: ${m}

`});const i=new Blob([r],{type:"text/plain;charset=utf-8"}),c=URL.createObjectURL(i),d=document.createElement("a");d.href=c,d.download=`chat-export-${a.replace(/\s+/g,"_")}_${new Date().toISOString().slice(0,10)}.txt`,d.click(),URL.revokeObjectURL(c)}async function Ie(e){const t=e||o.getProject()?.chatSessions;if(!t)return;const n=et();if(!n){console.error("[AutoSave] Cannot save sessions, DB not available.");return}const s=n.transaction(S,"readwrite"),a=s.objectStore(S);for(const r of t)a.put(r);return new Promise((r,i)=>{s.oncomplete=()=>{console.log(`[AutoSave] ${t.length} sessions saved to DB.`),r()},s.onerror=()=>{console.error("[AutoSave] Error saving sessions:",s.error),i(s.error)}})}function rt(){const e=`proj_${Date.now()}`,t="Default Agent";return{id:e,name:"Untitled Project",isDirtyForUser:!1,activeEntity:{type:"agent",name:t},agentPresets:{[t]:{...Se,model:"",activeMemories:[]}},agentGroups:{},memories:JSON.parse(JSON.stringify(Ne)),chatSessions:[],activeSessionId:null,summaryLogs:[],globalSettings:{fontFamilySelect:"'Sarabun', sans-serif",apiKey:"",ollamaBaseUrl:"http://localhost:11434",systemUtilityAgent:{...ee},summarizationPromptPresets:JSON.parse(JSON.stringify(ve))}}}async function F(){try{const e=rt();await ne(e.id),await je([S,T]),await se(e,!0)}catch(e){console.error("Failed to proceed with creating new project:",e),y("Could not create a new project. Please check console for errors.","Error")}}function it(){o.isUserDirty()?(o.setState("pendingActionAfterSave","new"),we()):F()}function ct(e){const t=e.target.files[0];t&&(o.setState("pendingFileToOpen",t),e.target.value="",o.isUserDirty()?(o.setState("pendingActionAfterSave","open"),we()):Ce())}function Ce(){try{const e=o.getState().pendingFileToOpen;if(!e)return;dt(e),o.setState("pendingFileToOpen",null)}catch(e){console.error("Failed to proceed with opening project:",e),y("Could not open the project file.","Error")}}async function Ae(e=!1){const t=o.getProject();e||t.name==="Untitled Project"?Fe():await Le(t.name)}async function Le(e){const t=e?.trim();if(!t)return y("Please enter a project name."),!1;const n=o.getProject();n.name=t,o.bus.publish("project:nameChanged",t),o.setUserDirty(!1);let s=JSON.parse(JSON.stringify(o.getProject()));s=Me(s);try{const a=JSON.stringify(s,null,2),r=new Blob([a],{type:"application/json"}),i=URL.createObjectURL(r),c=document.createElement("a");return c.href=i,c.download=`${t.replace(/\s+/g,"_")}.json`,document.body.appendChild(c),c.click(),URL.revokeObjectURL(i),document.body.removeChild(c),ze(),o.setAutoSaveDirty(!1),await oe(),o.getState().pendingActionAfterSave&&await ke(),!0}catch(a){return console.error("Failed to save project:",a),y("Failed to save project file.","Error"),o.setUserDirty(!0),!1}}async function lt(e){_e();try{switch(e){case"save":await Ae(!1);break;case"discard":o.setUserDirty(!1),await oe(),await ke();break;case"cancel":default:o.setState("pendingFileToOpen",null),o.setState("pendingActionAfterSave",null);break}}catch(t){console.error("Error handling unsaved changes choice:",t),y(`An error occurred while performing the action: ${t.message}`,"Error"),o.setState("pendingFileToOpen",null),o.setState("pendingActionAfterSave",null)}}async function ke(){const e=o.getState().pendingActionAfterSave;o.setState("pendingActionAfterSave",null),e==="open"?await Ce():e==="new"&&await F()}async function dt(e){const t=new FileReader;t.onload=async n=>{try{const s=JSON.parse(n.target.result);if(s&&s.id&&s.name&&s.agentPresets)await se(s,!0),y(`Project '${s.name}' loaded successfully!`,"Project Loaded");else throw new Error("Invalid project file format.")}catch(s){y(`Error loading project: ${s.message}`,"Error"),console.error(s)}},t.readAsText(e)}async function ut(e){if(!e)throw new Error("Cannot load last project: Project ID is missing.");await ne(e);const t=await j(T,"readonly","get",be);if(t&&t.data&&t.data.id===e){const n=t.data,s=await j(S,"readonly","getAll"),a={...n,chatSessions:s||[]};await se(a,!1),console.log("Successfully loaded the last active project from IndexedDB.")}else throw new Error("Project data in DB is invalid or mismatched with last known ID.")}async function se(e,t=!1){const n=Me(e);await ne(n.id),t&&(n.isDirtyForUser=!1,await mt(n)),o.setProject(n),await pt(),o.bus.publish("userDirty:changed",o.isUserDirty()),o.setAutoSaveDirty(!1),(n.globalSettings.apiKey||n.globalSettings.ollamaBaseUrl)&&await Ee();const s=(n.chatSessions||[]).filter(a=>!a.archived);if(s.length===0)await _();else{const a=n.activeSessionId,r=s.find(i=>i.id===a)||s.sort((i,c)=>c.updatedAt-i.updatedAt)[0];await $(r.id)}o.bus.publish("project:loaded",{projectData:n}),localStorage.setItem("lastActiveProjectId",n.id)}async function mt(e){await je([S,T]),await xe(e),await Ie(e.chatSessions),console.log("Database has been rewritten with new project data.")}async function xe(e){const t=e||o.getProject();if(!t||!t.id){console.warn("Cannot persist metadata: project or project ID is missing.");return}const n={...t};delete n.chatSessions,await j(T,"readwrite","put",{id:be,data:n})}async function oe(){const e=o.getProject();if(!e||!e.id)return!1;console.log("[AutoSave] Persisting project to IndexedDB...");try{return await xe(),await Ie(),console.log("[AutoSave] Project state successfully persisted."),!0}catch(t){return console.error("[AutoSave] Failed to persist project state:",t),!1}}async function pt(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=e.globalSettings;document.getElementById("apiKey").value=t.apiKey||"",document.getElementById("ollamaBaseUrl").value=t.ollamaBaseUrl||"",o.bus.publish("ui:applyFontSettings");const n=t.systemUtilityAgent||ee;document.getElementById("system-utility-model-select").value=n.model||"",document.getElementById("system-utility-prompt").value=n.systemPrompt||"",document.getElementById("system-utility-summary-prompt").value=n.summarizationPrompt||"",document.getElementById("system-utility-temperature").value=n.temperature??1,document.getElementById("system-utility-topP").value=n.topP??1,o.bus.publish("ui:renderSummarizationSelector")}function gt(e){const t=o.getProject();t.globalSettings.fontFamilySelect=e,o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:applyFontSettings")}function yt(e){const t=o.getProject();t.globalSettings.apiKey=e,o.setProject(t),o.updateAndPersistState()}function ht(e){const t=o.getProject();t.globalSettings.ollamaBaseUrl=e,o.setProject(t),o.updateAndPersistState()}function ft(){const e=o.getProject();if(!e.globalSettings)return;const t=e.globalSettings.systemUtilityAgent;t.model=document.getElementById("system-utility-model-select").value,t.systemPrompt=document.getElementById("system-utility-prompt").value,t.summarizationPrompt=document.getElementById("system-utility-summary-prompt").value,t.temperature=parseFloat(document.getElementById("system-utility-temperature").value),t.topP=parseFloat(document.getElementById("system-utility-topP").value),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderSummarizationSelector")}function Me(e){return typeof e.isDirtyForUser>"u"&&(e.isDirtyForUser=!0),e}async function bt(e,t){const n=o.getProject();n.activeEntity={type:e,name:t};const s=n.chatSessions.find(a=>a.id===n.activeSessionId);s&&(s.groupChatState&&(s.groupChatState.isRunning=!1),s.linkedEntity={...n.activeEntity},s.updatedAt=Date.now()),o.setProject(n),o.updateAndPersistState(),o.bus.publish("entity:selected",{type:e,name:t}),requestAnimationFrame(()=>{Pe(e,t)})}function Y(e){const t=o.getProject(),n=document.createElement("div");n.className="item session-item",e.id===t.activeSessionId&&n.classList.add("active"),e.pinned&&n.classList.add("pinned"),e.archived&&n.classList.add("archived"),n.dataset.sessionId=e.id,n.addEventListener("click",()=>{t.activeSessionId!==e.id&&o.bus.publish("session:load",{sessionId:e.id}),window.innerWidth<=1024&&Q()});const s=t.agentPresets||{};let a="❔";if(e.linkedEntity){const i=s[e.linkedEntity.name];a=e.linkedEntity?.type==="group"?"🤝":i?.icon||"🤖"}n.innerHTML=`
        <div class="item-header">
            <span class="item-name"><span class="item-icon">${a}</span>${e.pinned?"📌 ":""}${e.name}</span>
            <div class="item-actions dropdown align-right">
                <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                <div class="dropdown-content">
                    <a href="#" data-action="pin">${e.pinned?"Unpin":"Pin"}</a>
                    <a href="#" data-action="rename">Rename</a>
                    <a href="#" data-action="clone">Clone</a>
                    <a href="#" data-action="archive">${e.archived?"Unarchive":"Archive"}</a>
                    <a href="#" data-action="export">Download</a>
                    <hr>
                    <a href="#" data-action="delete">Delete</a>
                </div>
            </div>
        </div>
    `;const r=n.querySelector(".dropdown-content");return n.querySelector('[data-action="toggle-menu"]').addEventListener("click",D),r.querySelector('[data-action="pin"]').addEventListener("click",i=>o.bus.publish("session:pin",{sessionId:e.id,event:i})),r.querySelector('[data-action="rename"]').addEventListener("click",i=>o.bus.publish("session:rename",{sessionId:e.id,event:i})),r.querySelector('[data-action="clone"]').addEventListener("click",i=>o.bus.publish("session:clone",{sessionId:e.id,event:i})),r.querySelector('[data-action="archive"]').addEventListener("click",i=>o.bus.publish("session:archive",{sessionId:e.id,event:i})),r.querySelector('[data-action="export"]').addEventListener("click",i=>{i.preventDefault(),o.bus.publish("project:exportChat",{sessionId:e.id})}),r.querySelector('[data-action="delete"]').addEventListener("click",i=>o.bus.publish("session:delete",{sessionId:e.id,event:i})),n}function J(){const e=o.getProject();if(!e)return;const t=e.chatSessions||[],n=document.getElementById("pinnedSessionList"),s=document.getElementById("sessionListContainer"),a=document.getElementById("archivedSessionList"),r=document.getElementById("archivedSessionsSection");n.innerHTML="",s.innerHTML="",a.innerHTML="";const i=t.filter(l=>l.pinned&&!l.archived).sort((l,u)=>u.updatedAt-l.updatedAt),c=t.filter(l=>l.archived).sort((l,u)=>u.updatedAt-l.updatedAt),d=t.filter(l=>!l.pinned&&!l.archived).sort((l,u)=>u.updatedAt-l.updatedAt);i.forEach(l=>n.appendChild(Y(l))),d.forEach(l=>s.appendChild(Y(l))),c.forEach(l=>a.appendChild(Y(l))),r.classList.toggle("hidden",c.length===0)}function vt(){o.bus.subscribe("project:loaded",J),o.bus.subscribe("session:loaded",J),o.bus.subscribe("session:changed",J),document.getElementById("new-chat-btn").addEventListener("click",()=>{o.bus.publish("session:new")}),console.log("Session UI Initialized.")}function St(e,t){const s=o.getProject().activeEntity,a=document.createElement("div");return a.className="item",a.dataset.agentName=e,s&&s.type==="agent"&&s.name===e&&a.classList.add("active"),a.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">${t.icon||"🤖"}</span> ${e}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Agent">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Agent">&#128465;</button>
        </div>
    </div>`,a.addEventListener("click",r=>{r.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"agent",name:e})}),a.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("agent:edit",{agentName:e})),a.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("agent:delete",{agentName:e})),a}function K(){const e=o.getProject();if(!e||!e.agentPresets)return;const t=document.getElementById("agentPresetList");t.innerHTML="";const n=e.agentPresets;for(const s in n)t.appendChild(St(s,n[s]))}function Be(){const e=o.getState().allProviderModels||[],t=o.getProject(),n=[document.getElementById("agent-model-select"),document.getElementById("system-utility-model-select")];if(n.some(r=>!r)||!t.globalSettings)return;const s=document.createElement("optgroup");s.label="OpenRouter";const a=document.createElement("optgroup");a.label="Ollama",e.forEach(r=>{const i=new Option(r.name,r.id);(r.provider==="openrouter"?s:a).appendChild(i)}),n.forEach(r=>{const i=r.value;if(r.innerHTML='<option value="">-- Select a Model --</option>',s.childElementCount>0&&r.appendChild(s.cloneNode(!0)),a.childElementCount>0&&r.appendChild(a.cloneNode(!0)),r.id==="system-utility-model-select")r.value=t.globalSettings.systemUtilityAgent?.model||"";else if(r.id==="agent-model-select"){const c=o.getState().editingAgentName;c&&t.agentPresets[c]?r.value=t.agentPresets[c].model:r.value=i}})}function de(e=!1,t=null){o.setState("editingAgentName",e?t:null);const n=o.getProject(),s=o.getState().allProviderModels,a=n.globalSettings.systemUtilityAgent,r=s.find(i=>i.id===a.model);if(document.getElementById("agent-modal-title").textContent=e?`Edit Agent: ${t}`:"Create New Agent",document.getElementById("enhancer-model-name").textContent=r?.name||a.model||"Not Configured",e&&t){const i=n.agentPresets[t];if(!i){y("Agent not found.");return}document.getElementById("agent-name-input").value=t,Object.keys(B).forEach(c=>{const d=document.getElementById(c);if(d&&c!=="agent-name-input"){const l=i[B[c]];d[d.type==="checkbox"?"checked":"value"]=l!==void 0?l:""}})}else document.getElementById("agent-name-input").value="",Object.keys(B).forEach(i=>{const c=document.getElementById(i);if(c&&i!=="agent-name-input"){const d=Se[B[i]];c[c.type==="checkbox"?"checked":"value"]=d!==void 0?d:""}}),document.getElementById("enhancer-prompt-input").value="";Be(),document.getElementById("agent-editor-modal").style.display="flex"}function ue(){document.getElementById("agent-editor-modal").style.display="none",o.setState("editingAgentName",null)}function Et(){o.bus.subscribe("project:loaded",K),o.bus.subscribe("agent:listChanged",K),o.bus.subscribe("models:loaded",Be),o.bus.subscribe("agent:editorShouldClose",ue),o.bus.subscribe("entity:selected",K),o.bus.subscribe("agent:profileGenerated",t=>{document.getElementById("agent-name-input").value=t.agent_name||"",document.getElementById("agent-icon-input").value=t.agent_icon||"🤖",document.getElementById("agent-system-prompt").value=t.system_prompt||"",document.getElementById("agent-temperature").value=t.temperature??1,document.getElementById("agent-topP").value=t.top_p??1}),o.bus.subscribe("agent:enhancerStatus",({text:t,color:n})=>{const s=document.getElementById("enhancer-status");s.textContent=t,s.style.color=n||"var(--text-dark)"});const e=document.querySelector("#agentPresetList")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",D);const n=e.querySelector('a[data-action="createAgent"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("agent:create")})}document.getElementById("generate-agent-profile-btn").addEventListener("click",()=>o.bus.publish("agent:generateProfile")),document.querySelector("#agent-editor-modal .modal-actions .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("agent:save")),document.querySelector("#agent-editor-modal .btn-secondary").addEventListener("click",ue),console.log("Agent UI Initialized.")}async function wt(){const e=document.getElementById("enhancer-prompt-input").value.trim();if(!e){y("Please describe the agent you want to create.","Error");return}o.bus.publish("agent:enhancerStatus",{text:"Generating profile...",color:"var(--text-dark)"});const t=o.getProject().globalSettings.systemUtilityAgent;if(!t||!t.model){o.bus.publish("agent:enhancerStatus",{text:"Error: System Utility Model not configured.",color:"var(--error-color)"});return}const n=`You are an expert in designing LLM agent profiles. Based on the user's request, create a complete agent profile. Your response MUST be a single, valid JSON object with the following keys: "agent_name" (a creative and fitting name for the agent), "agent_icon" (a single, relevant emoji for the agent), "system_prompt" (string), "temperature" (number), "top_p" (number), "top_k" (number), "presence_penalty" (number), "frequency_penalty" (number). For the parameters, choose values that are optimal for the requested task (e.g., creative tasks need higher temperature). User's Request: "${e}"`;try{const a=(await O(t,[{role:"user",content:n}])).match(/{.*}/s);if(!a)throw new Error("LLM did not return a valid JSON object.");const r=JSON.parse(a[0]);o.bus.publish("agent:profileGenerated",r),o.bus.publish("agent:enhancerStatus",{text:"Profile generated successfully!",color:"var(--success-color)"})}catch(s){console.error("Agent Profile Generation Error:",s),o.bus.publish("agent:enhancerStatus",{text:`Error: ${s.message}`,color:"var(--error-color)"})}finally{setTimeout(()=>o.bus.publish("agent:enhancerStatus",{text:""}),5e3)}}function Pt(){const t=document.getElementById("agent-name-input").value.trim();if(!t){y("Please enter a name for the agent.","Error");return}const n=o.getProject(),s=o.getState().editingAgentName;if(s!==t&&n.agentPresets[t]){y(`An agent named '${t}' already exists.`,"Error");return}const a={};if(Object.keys(B).forEach(r=>{const i=B[r];if(i==="name")return;const c=document.getElementById(r);c&&(a[i]=c.type==="checkbox"?c.checked:c.type==="number"?parseFloat(c.value):c.value)}),a.icon||(a.icon="🤖"),s&&s!==t){const r=n.agentPresets[s];delete n.agentPresets[s],n.agentPresets[t]={...r,...a},n.chatSessions.forEach(i=>{i.linkedEntity?.type==="agent"&&i.linkedEntity.name===s&&(i.linkedEntity.name=t)}),Object.values(n.agentGroups).forEach(i=>{const c=i.members.indexOf(s);c>-1&&(i.members[c]=t),i.moderatorAgent===s&&(i.moderatorAgent=t)}),n.activeEntity.type==="agent"&&n.activeEntity.name===s&&(n.activeEntity.name=t)}else s?n.agentPresets[s]={...n.agentPresets[s],...a}:(a.activeMemories=[],n.agentPresets[t]=a,n.activeEntity={type:"agent",name:t});o.setProject(n),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("agent:editorShouldClose")}function jt(e){const t=o.getProject();if(!e||Object.keys(t.agentPresets).length<=1){y("Cannot delete the last agent.","Error");return}confirm(`Are you sure you want to delete the agent '${e}'? This action cannot be undone.`)&&(delete t.agentPresets[e],Object.values(t.agentGroups).forEach(n=>{n.members=n.members.filter(s=>s!==e),n.moderatorAgent===e&&(n.moderatorAgent=n.members[0]||"")}),t.chatSessions.forEach(n=>{n.linkedEntity?.type==="agent"&&n.linkedEntity.name===e&&(n.linkedEntity={type:"agent",name:Object.keys(t.agentPresets)[0]})}),t.activeEntity.type==="agent"&&t.activeEntity.name===e&&(t.activeEntity={type:"agent",name:Object.keys(t.agentPresets)[0]}),o.setProject(t),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",t.activeEntity))}function It(e){const n=o.getProject().activeEntity,s=document.createElement("div");return s.className="item group-item",s.dataset.groupName=e,n&&n.type==="group"&&n.name===e&&s.classList.add("active"),s.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">🤝</span> ${e}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Group">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Group">&#128465;</button>
        </div>
    </div>`,s.addEventListener("click",a=>{a.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"group",name:e})}),s.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("group:edit",{groupName:e})),s.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("group:delete",{groupName:e})),s}function U(){const e=o.getProject();if(!e||!e.agentGroups)return;const t=document.getElementById("agentGroupList");t.innerHTML="";const n=e.agentGroups;for(const s in n)t.appendChild(It(s))}function me(e=!1,t=null){o.setState("editingGroupName",e?t:null);const n=o.getProject(),s=e?n.agentGroups[t]:null;document.getElementById("agent-group-modal-title").textContent=e?`Edit Group: ${t}`:"Create New Agent Group",document.getElementById("group-name-input").value=e?t:"";const a=document.getElementById("group-member-list");a.innerHTML="";const r=s?s.members:[],i=Object.keys(n.agentPresets),c=s?[...s.members]:[];i.forEach(d=>{c.includes(d)||c.push(d)}),c.forEach(d=>{const l=r.includes(d),u=document.createElement("div");u.className="agent-sortable-item",u.dataset.agentName=d,u.dataset.id=d;const m=`agent-cb-${d.replace(/\s+/g,"-")}`;u.innerHTML=`
            <input type="checkbox" id="${m}" ${l?"checked":""}>
            <label for="${m}">${d}</label>
            <span class="drag-handle">&#x2630;</span>
        `,u.querySelector('input[type="checkbox"]').addEventListener("change",()=>ge(null)),a.appendChild(u)}),window.groupSortable&&window.groupSortable.destroy(),window.groupSortable=new Sortable(a,{animation:150,handle:".drag-handle"}),ge(s?.moderatorAgent),document.getElementById("group-flow-select").value=s?.flowType||"auto-moderator",document.getElementById("group-max-turns-input").value=s?.maxTurns||4,document.getElementById("group-summarization-threshold-input").value=s?.summarizationTokenThreshold??3e3,Te(),document.getElementById("agent-group-editor-modal").style.display="flex"}function pe(){window.groupSortable&&(window.groupSortable.destroy(),window.groupSortable=null),document.getElementById("agent-group-editor-modal").style.display="none",o.setState("editingGroupName",null)}function ge(e=null){const t=document.getElementById("group-moderator-select"),n=document.querySelectorAll("#group-member-list .agent-sortable-item"),s=Array.from(n).filter(r=>r.querySelector('input[type="checkbox"]').checked).map(r=>r.dataset.agentName),a=t.value;t.innerHTML='<option value="">-- Select Moderator --</option>',s.forEach(r=>{t.add(new Option(r,r))}),e&&s.includes(e)?t.value=e:s.includes(a)&&(t.value=a)}function Te(){const e=document.getElementById("group-flow-select"),t=document.getElementById("max-turns-group");t.style.display=e.value==="auto-moderator"?"none":"block"}function Ct(){o.bus.subscribe("project:loaded",U),o.bus.subscribe("group:listChanged",U),o.bus.subscribe("agent:listChanged",U),o.bus.subscribe("entity:selected",U),o.bus.subscribe("group:editorShouldClose",pe);const e=document.querySelector("#agentGroupList")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",D);const n=e.querySelector('a[data-action="createGroup"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("group:create")})}document.querySelector("#agent-group-editor-modal .btn-secondary").addEventListener("click",pe),document.querySelector("#agent-group-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("group:save")),document.getElementById("group-flow-select").addEventListener("change",Te),console.log("Group UI Initialized.")}function At(){const e=document.getElementById("group-name-input").value.trim(),t=o.getState().editingGroupName;if(!e){y("Please enter a name for the group.","Error");return}const n=o.getProject();if(e!==t&&n.agentGroups[e]){y("A group with this name already exists.","Error");return}const s=document.querySelectorAll("#group-member-list .agent-sortable-item"),a=Array.from(s).filter(c=>c.querySelector('input[type="checkbox"]').checked).map(c=>c.dataset.agentName);if(a.length===0){y("A group must have at least one member.","Error");return}const r=document.getElementById("group-moderator-select").value;if(!r||!a.includes(r)){y("Please select a valid moderator from the group members.","Error");return}const i={members:a,moderatorAgent:r,flowType:document.getElementById("group-flow-select").value,maxTurns:parseInt(document.getElementById("group-max-turns-input").value,10)||4,summarizationTokenThreshold:parseInt(document.getElementById("group-summarization-threshold-input").value,10)??3e3};t&&t!==e&&(delete n.agentGroups[t],n.chatSessions.forEach(c=>{c.linkedEntity?.type==="group"&&c.linkedEntity.name===t&&(c.linkedEntity.name=e)}),n.activeEntity.type==="group"&&n.activeEntity.name===t&&(n.activeEntity.name=e)),n.agentGroups[e]=i,o.setProject(n),o.updateAndPersistState(),o.bus.publish("group:listChanged"),n.activeEntity.type==="group"&&o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("group:editorShouldClose")}function Lt(e){if(e&&confirm(`Are you sure you want to delete the group '${e}'?`)){const t=o.getProject();delete t.agentGroups[e],t.chatSessions.forEach(n=>{n.linkedEntity?.type==="group"&&n.linkedEntity.name===e&&(n.linkedEntity={type:"agent",name:Object.keys(t.agentPresets)[0]})}),t.activeEntity.type==="group"&&t.activeEntity.name===e&&(t.activeEntity={type:"agent",name:Object.keys(t.agentPresets)[0]}),o.setProject(t),o.updateAndPersistState(),o.bus.publish("group:listChanged"),o.bus.publish("entity:selected",t.activeEntity)}}let W=null;function ye(e,t){const n=o.getProject(),s=document.createElement("div");s.className="item memory-item",t||s.classList.add("inactive"),s.dataset.name=e.name;const a=n.memories.findIndex(r=>r.name===e.name);return s.innerHTML=`
        <div class="item-header">
            <div class="memory-toggle ${t?"active":""}"></div>
            <span class="item-name">${e.name}</span>
            <div class="item-actions">
                <div class="dropdown align-right">
                    <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                    <div class="dropdown-content">
                        <a href="#" data-action="edit">&#9998; Edit</a>
                        <a href="#" data-action="delete">&#128465; Delete</a>
                    </div>
                </div>
            </div>
        </div>`,s.querySelector(".memory-toggle").addEventListener("click",r=>o.bus.publish("memory:toggle",{name:e.name,event:r})),s.querySelector('[data-action="toggle-menu"]').addEventListener("click",D),s.querySelector('[data-action="edit"]').addEventListener("click",r=>o.bus.publish("memory:edit",{index:a,event:r})),s.querySelector('[data-action="delete"]').addEventListener("click",r=>o.bus.publish("memory:delete",{index:a,event:r})),s}function R(){const e=o.getProject();if(!e)return;const t=document.getElementById("memories-container"),n=document.getElementById("activeMemoriesList"),s=document.getElementById("inactiveMemoriesList"),a=document.getElementById("inactiveMemoriesSection");n.innerHTML="",s.innerHTML="";let r=null;if(e.activeEntity?.type==="agent"&&e.agentPresets&&e.agentPresets[e.activeEntity.name])t.style.display="block",r=e.agentPresets[e.activeEntity.name];else{t.style.display="none";return}if(!r||!e.memories){t.style.display="none";return}const i=r.activeMemories||[],c=e.memories.map(u=>u.name),d=i.filter(u=>c.includes(u));d.length!==i.length&&(r.activeMemories=d);const l=c.filter(u=>!d.includes(u));d.forEach(u=>{const m=e.memories.find(p=>p.name===u);m&&n.appendChild(ye(m,!0))}),l.forEach(u=>{const m=e.memories.find(p=>p.name===u);m&&s.appendChild(ye(m,!1))}),a.classList.toggle("hidden",l.length===0),W&&W.destroy(),W=new Sortable(n,{animation:150,onEnd:u=>{const m=o.getProject().agentPresets[o.getProject().activeEntity.name];if(!m)return;const p=u.item.dataset.name;m.activeMemories.splice(u.oldDraggableIndex,1),m.activeMemories.splice(u.newDraggableIndex,0,p),o.updateAndPersistState(),R()}})}function he(e=null,t){t&&t.stopPropagation();const n=o.getProject(),s=document.getElementById("memory-editor-modal");if(e!==null&&n.memories[e]){const a=n.memories[e];document.getElementById("memory-modal-title").textContent="Edit Memory",document.getElementById("memory-name-input").value=a.name,document.getElementById("memory-content-input").value=a.content,document.getElementById("memory-edit-index").value=e}else document.getElementById("memory-modal-title").textContent="Create New Memory",document.getElementById("memory-name-input").value="",document.getElementById("memory-content-input").value="",document.getElementById("memory-edit-index").value="";s.style.display="flex"}function fe(){document.getElementById("memory-editor-modal").style.display="none"}function kt(){o.bus.subscribe("project:loaded",R),o.bus.subscribe("memory:listChanged",R),o.bus.subscribe("entity:selected",R),o.bus.subscribe("memory:editorShouldClose",fe);const e=document.querySelector("#memories-container")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",D);const n=e.querySelector(".dropdown-content");n&&(n.querySelector('a[data-action="createMemory"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:create")}),n.querySelector('a[data-action="exportMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:exportPackage")}),n.querySelector('a[data-action="importMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:importPackage")}))}document.getElementById("load-memory-package-input").addEventListener("change",t=>{o.bus.publish("memory:fileSelectedForImport",t)}),document.querySelector("#memory-editor-modal .btn-secondary").addEventListener("click",fe),document.querySelector("#memory-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>{o.bus.publish("memory:save")}),console.log("Memory UI Initialized.")}function xt(e,t){t&&t.stopPropagation();const n=o.getProject();if(n.activeEntity.type!=="agent")return;const s=n.agentPresets[n.activeEntity.name];if(!s)return;s.activeMemories=s.activeMemories||[];const a=s.activeMemories.indexOf(e);a>-1?s.activeMemories.splice(a,1):s.activeMemories.push(e),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}function Mt(){const e=document.getElementById("memory-name-input").value.trim(),t=document.getElementById("memory-content-input").value.trim(),n=document.getElementById("memory-edit-index").value;if(!e||!t){y("Please fill in all fields.");return}const s=o.getProject(),a=n!==""?parseInt(n,10):-1;if(s.memories.some((i,c)=>i.name===e&&c!==a)){y("A memory with this name already exists.");return}a!==-1?s.memories[a]={...s.memories[a],name:e,content:t}:s.memories.push({name:e,content:t}),o.setProject(s),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("memory:editorShouldClose")}function Bt(e,t){t&&t.stopPropagation();const n=o.getProject();if(n.memories[e]&&confirm(`Are you sure you want to delete the memory '${n.memories[e].name}'?`)){const s=n.memories[e].name;n.memories.splice(e,1),Object.values(n.agentPresets).forEach(a=>{if(a.activeMemories){const r=a.activeMemories.indexOf(s);r>-1&&a.activeMemories.splice(r,1)}}),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}}function Tt(){try{const e=o.getProject(),t={memories:e.memories,agentPresets:e.agentPresets},n=JSON.stringify(t,null,2),s=new Blob([n],{type:"application/json"}),a=URL.createObjectURL(s),r=document.createElement("a");r.style.display="none",r.href=a,r.download=`promptprim_agent_package_${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(a)}catch(e){y("Error saving agent package."),console.error(e)}}function Dt(e){const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=s=>{try{const a=JSON.parse(s.target.result);if(a&&Array.isArray(a.memories)&&typeof a.agentPresets=="object"){const r=o.getProject(),i=new Set(r.memories.map(d=>d.name)),c=a.memories.filter(d=>!i.has(d.name));r.memories.push(...c),Object.assign(r.agentPresets,a.agentPresets),o.setProject(r),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("agent:listChanged"),y("Agent package loaded successfully!")}else throw new Error("Invalid JSON format for agent package.")}catch(a){y(`Error loading agent package: ${a.message}`),console.error(a)}},n.readAsText(t),e.target.value=""}function $t(){const t=document.getElementById("system-utility-summary-preset-select").value;if(t==="custom")return;const s=o.getProject().globalSettings.summarizationPromptPresets;if(s&&s[t]){const a=s[t];document.getElementById("system-utility-summary-prompt").value=a,o.bus.publish("settings:systemAgentChanged")}}function Ot(){const e=document.getElementById("system-utility-summary-prompt").value.trim();if(!e){y("Prompt template cannot be empty.","Error");return}const t=prompt("Enter a name for this new preset:","");if(!t||!t.trim())return;const n=o.getProject(),s=t.trim();n.globalSettings.summarizationPromptPresets[s]&&!confirm(`A preset named '${s}' already exists. Do you want to overwrite it?`)||(n.globalSettings.summarizationPromptPresets[s]=e,o.setProject(n),o.updateAndPersistState().then(()=>{o.bus.publish("ui:renderSummarizationSelector"),document.getElementById("system-utility-summary-preset-select").value=s,y(`Preset '${s}' saved successfully!`,"Success")}))}async function Nt(e,t,n){t.groupChatState={isRunning:!0,currentTurn:0,nextMemberIndex:0},o.setLoading(!0),o.bus.publish("ui:showLoadingIndicator"),o.newAbortController();try{for(let s=0;s<n.maxTurns;s++){if(o.getState().abortController?.signal.aborted){console.log("Group chat stopped by user.");break}const a=n.members[t.groupChatState.nextMemberIndex],r=e.agentPresets[a];if(!r||!r.model){console.warn(`Skipping agent ${a} due to missing model.`),t.groupChatState.nextMemberIndex=(t.groupChatState.nextMemberIndex+1)%n.members.length;continue}const i=t.history.length;t.history.push({role:"assistant",content:"...",speaker:a});const c=G("assistant","",i,a,!0),d=ae(t.history.slice(0,-1),a,t),l=c.querySelector(".message-content"),u=await te(l,r,d,a);t.history[i]={role:"assistant",content:u,speaker:a},t.updatedAt=Date.now(),await j(S,"readwrite","put",t),t.groupChatState.currentTurn++,t.groupChatState.nextMemberIndex=(t.groupChatState.nextMemberIndex+1)%n.members.length}}catch(s){if(s.name!=="AbortError"){console.error("Error during group chat:",s);const a=t.history.length-1;t.history[a].content=`Error: ${s.message}`,o.bus.publish("ui:renderChatMessages")}}finally{t.groupChatState.isRunning=!1,L(),await j(S,"readwrite","put",t),o.bus.publish("project:persistRequired")}}async function qt(e,t,n){t.groupChatState={isRunning:!0,currentTurn:0},o.setLoading(!0),o.bus.publish("ui:showLoadingIndicator"),o.newAbortController();const s=e.agentPresets[n.moderatorAgent];if(!s||!s.model){y(`Moderator agent '${n.moderatorAgent}' is not configured correctly.`,"Error"),L();return}try{for(let a=0;a<n.maxTurns;a++){if(o.getState().abortController?.signal.aborted){console.log("Group chat stopped by user.");break}o.bus.publish("status:update",{message:`Moderator '${n.moderatorAgent}' is thinking...`,state:"loading"});const r=t.history.map(f=>`${f.speaker||f.role}: ${typeof f.content=="string"?f.content:"[multimodal content]"}`).join(`
`),d=[{role:"user",content:`You are the moderator of a group chat. Your role is to analyze the ongoing conversation and decide which agent should speak next to best advance the discussion towards the user's goal.

**Available Agents to choose from:**
${n.members.filter(f=>f!==n.moderatorAgent).join(", ")}

**Conversation History:**
${r}

**Your Task:**
Based on the history, determine the most suitable agent to contribute next. Your response MUST be a valid JSON object containing a single key, "next_speaker", with the name of one of the available agents as the value.

Example Response:
{"next_speaker": "Creative Writer"}`}],l=await O(s,d);let u;try{if(u=JSON.parse(l.match(/{.*}/s)[0]).next_speaker,!n.members.includes(u))throw new Error(`Moderator selected an invalid agent: ${u}`)}catch(f){console.error("Failed to parse moderator response:",f,"Falling back to random agent.");const w=n.members.filter(I=>I!==n.moderatorAgent);if(u=w[Math.floor(Math.random()*w.length)],!u){y("Moderator failed to select a valid agent. Stopping chat.","Error");break}}t.history.push({role:"system",content:`[Moderator selected ${u} to speak.]`}),o.bus.publish("ui:renderChatMessages");const m=e.agentPresets[u];if(!m||!m.model){console.warn(`Skipping agent ${u} due to missing model.`);continue}o.bus.publish("status:update",{message:`Agent '${u}' is responding...`,state:"loading"});const p=t.history.length;t.history.push({role:"assistant",content:"...",speaker:u});const g=G("assistant","",p,u,!0),v=ae(t.history.slice(0,-1),u,t),h=g.querySelector(".message-content"),E=await te(h,m,v,u);t.history[p]={role:"assistant",content:E,speaker:u},t.updatedAt=Date.now(),await j(S,"readwrite","put",t),t.groupChatState.currentTurn++}}catch(a){a.name!=="AbortError"&&(console.error("Error during auto-moderator group chat:",a),y(`An error occurred in the group chat: ${a.message}`,"Error"))}finally{t.groupChatState.isRunning=!1,L(),await j(S,"readwrite","put",t),o.bus.publish("project:persistRequired")}}let C=[];function V(e){return Math.ceil((e||"").length/3)}function De(e){const t=o.getProject();if(!t.agentPresets||!e)return"";const n=t.agentPresets[e];if(!n)return"";const s=n.systemPrompt||"",a=n.activeMemories||[],r=t.memories.filter(c=>a.includes(c.name)).map(c=>c.content).join(`
`);let i=s;return r&&(i+=`

--- Active Memories ---
`+r),i.trim()}function ae(e,t,n){const s=[],a=o.getProject(),r=o.getState().allProviderModels,i=De(t);i&&s.push({role:"system",content:i});let c=[...e];if(n?.summaryState?.activeSummaryId){const m=a.summaryLogs.find(p=>p.id===n.summaryState.activeSummaryId);if(m){const p=`[This is a loaded summary to provide context for the following conversation. SUMMARY CONTENT: ${m.content}]`;s.push({role:"system",content:p}),c=e.slice(n.summaryState.summarizedUntilIndex)}}const d=a.agentPresets[t];if(!d)return s;const l=r.find(m=>m.id===d.model),u=l?l.provider:null;return c.forEach(m=>{if(m.role==="system")return;let p={role:m.role};if(m.speaker&&m.role==="assistant"&&(p.name=m.speaker.replace(/\s+/g,"_")),typeof m.content=="string")p.content=m.content;else if(Array.isArray(m.content))if(u==="ollama"){const g=m.content.find(h=>h.type==="text"),v=m.content.find(h=>h.type==="image_url");g&&(p.content=g.text),v&&v.url&&(p.images=[v.url.split(",")[1]])}else p.content=m.content.map(g=>g.type==="image_url"?{type:"image_url",image_url:{url:g.url}}:g);s.push(p)}),s}async function re(e=!1){const t=o.getProject();if(!t.activeEntity){y("Please select an agent or group first.","Error");return}const{type:n}=t.activeEntity,s=t.chatSessions.find(a=>a.id===t.activeSessionId);if(s){if(s.groupChatState?.isRunning){L();return}if(!e){const a=document.getElementById("chatInput"),r=a.value.trim();if(!r&&C.length===0)return;let i=[];r&&i.push({type:"text",text:r}),C.forEach(c=>i.push({type:"image_url",url:c.data})),s.history.push({role:"user",content:i.length===1&&i[0].type==="text"?i[0].text:i}),a.value="",a.style.height="auto",C=[],o.bus.publish("ui:renderFilePreviews",C)}if(o.bus.publish("ui:renderChatMessages"),n==="group"){const a=t.agentGroups[t.activeEntity.name];a.flowType==="round-robin"?await Nt(t,s,a):a.flowType==="auto-moderator"?await qt(t,s,a):y(`Unknown group flow type: ${a.flowType}`,"Error")}else await Ut(e)}}async function Ut(e=!1){const t=o.getProject(),n=t.chatSessions.find(i=>i.id===t.activeSessionId);if(!n)return;const s=t.activeEntity.name,a=t.agentPresets[s];if(!a||!a.model){y("Please select an agent with a configured model.","Error");return}o.setLoading(!0),o.bus.publish("ui:showLoadingIndicator"),o.newAbortController();const r=n.history.length;n.history.push({role:"assistant",content:"...",speaker:s}),o.bus.publish("ui:addMessage",{role:"assistant",content:"",index:r,speakerName:s,isLoading:!0});try{const i=ae(n.history.slice(0,-1),s,n),c=document.querySelector(`.message[data-index='${r}'] .message-content`),d=await te(c,a,i,s);n.history[r]={role:"assistant",content:d,speaker:s},n.name==="New Chat"&&n.history.length<=2&&!e&&await Re(n.history)}catch(i){if(i.name!=="AbortError"){const c=`Error: ${i.message}`;n.history[r].content=c,y(c,"API Error")}else n.history.splice(r,1)}finally{L(),await j(S,"readwrite","put",n),o.bus.publish("ui:renderChatMessages"),o.bus.publish("project:persistRequired")}}function L(){const e=o.getProject(),t=e.chatSessions.find(n=>n.id===e.activeSessionId);t?.groupChatState&&(t.groupChatState.isRunning=!1),o.abort(),o.setLoading(!1),o.bus.publish("ui:hideLoadingIndicator"),o.bus.publish("status:update",{message:"Ready",state:"connected"})}function Rt(e){const t=e.target.files;if(t){for(const n of t){const s=`file_${Date.now()}_${Math.random()}`,a={id:s,name:n.name,type:n.type,data:null};C.push(a);const r=new FileReader;r.onload=i=>{const c=C.findIndex(d=>d.id===s);c!==-1&&(C[c].data=i.target.result,o.bus.publish("ui:renderFilePreviews",C))},r.readAsDataURL(n)}e.target.value=""}}async function Ft(e){o.bus.publish("status:update",{message:"Summarizing...",state:"loading"});const t=o.getProject(),n=t.globalSettings.systemUtilityAgent;if(!n||!n.model){y("System Utility Model for summarization is not configured in settings.","Error"),o.bus.publish("status:update",{message:"Summarization failed",state:"error"});return}const s=e.summaryState?.summarizedUntilIndex||0,a=e.history.slice(s);if(a.length<2){y("Not enough new messages to create a meaningful summary.","Info"),o.bus.publish("status:update",{message:"Ready",state:"connected"});return}try{o.bus.publish("status:update",{message:"Generating summary title...",state:"loading"});const r=`Based on the following conversation, create a very short, descriptive title (5-7 words). Respond with ONLY the title text, nothing else.

CONVERSATION:
${a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`)}`,i=await O(n,[{role:"user",content:r}]);o.bus.publish("status:update",{message:"Generating summary content...",state:"loading"});const c=e.summaryState?.activeSummaryId&&t.summaryLogs.find(g=>g.id===e.summaryState.activeSummaryId)?.content||"This is the beginning of the conversation.",d=n.summarizationPrompt||ee.summarizationPrompt,l=a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`),u=d.replace(/\$\{previousSummary\}/g,c).replace(/\$\{newMessages\}/g,l),m=await O(n,[{role:"user",content:u}]),p={id:`sum_${Date.now()}`,summary:i.trim().replace(/"/g,""),content:m,timestamp:Date.now(),sourceSessionId:e.id,summarizedUntilIndex:e.history.length};t.summaryLogs||(t.summaryLogs=[]),t.summaryLogs.push(p),e.summaryState={activeSummaryId:p.id,summarizedUntilIndex:p.summarizedUntilIndex},e.history.push({role:"system",content:`[ System: Conversation summarized under the title: "${p.summary}" ]`}),await j(S,"readwrite","put",e),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged"),y("Conversation summarized successfully!","Success")}catch(r){console.error("Failed to summarize history:",r),y(`Summarization Failed: ${r.message}`,"Error")}finally{o.bus.publish("status:update",{message:"Ready",state:"connected"})}}async function zt(){const e=o.getProject(),t=e.chatSessions.find(n=>n.id===e.activeSessionId);if(!t){y("No active session found.","Error");return}confirm("Do you want to use the System Utility Agent to summarize this conversation?")&&await Ft(t)}async function _t(e){const t=o.getProject(),n=t.chatSessions.find(r=>r.id===t.activeSessionId),s=t.summaryLogs.find(r=>r.id===e);if(!n||!s)return;n.summaryState.activeSummaryId=s.id,n.summaryState.summarizedUntilIndex=n.history.length;const a={role:"system",content:`[ System: Context loaded from summary: "${s.summary}" ]`};n.history.push(a),await j(S,"readwrite","put",n),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function Gt(){const e=o.getProject(),t=e.chatSessions.find(s=>s.id===e.activeSessionId);if(!t||!t.summaryState?.activeSummaryId)return;t.summaryState.activeSummaryId=null;const n={role:"system",content:"[ System: Summary context cleared. Conversation will now proceed using full history. ]"};t.history.push(n),await j(S,"readwrite","put",t),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function Ht(e){if(!confirm("Are you sure you want to permanently delete this summary log? This cannot be undone."))return;const t=o.getProject(),n=t.summaryLogs.findIndex(s=>s.id===e);n>-1&&(t.summaryLogs.splice(n,1),t.chatSessions.forEach(s=>{if(s.summaryState?.activeSummaryId===e&&(s.summaryState.activeSummaryId=null,s.id===t.activeSessionId)){const a={role:"system",content:"[ System: The active summary was deleted. Context has been cleared. ]"};s.history.push(a),o.bus.publish("ui:renderChatMessages")}}),o.setProject(t),await o.updateAndPersistState(),o.bus.publish("summary:listChanged"))}async function Yt(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);if(!s)return;const a=s.history[e];if(!a)return;let r="";typeof a.content=="string"?r=a.content:Array.isArray(a.content)&&(r=a.content.find(i=>i.type==="text")?.text||"");try{await navigator.clipboard.writeText(r),y("Copied to clipboard!")}catch(i){console.error("Failed to copy message:",i),y("Failed to copy message.","Error")}}async function Jt(e){const t=o.getProject(),n=t.chatSessions.find(d=>d.id===t.activeSessionId);if(!n)return;const s=n.history[e],a=document.querySelector(`.message[data-index='${e}']`);if(!a||s.role==="user"&&a.classList.contains("is-editing"))return;const r=a.querySelector(".message-content"),i=a.querySelector(".message-actions"),c=i?i.querySelector('button[title="Edit"], button[title="Save Changes"]'):null;if(s.role==="user"){r.style.display="none",a.classList.add("is-editing");const d=document.createElement("div");d.className="inline-edit-container";const l=document.createElement("textarea");l.className="inline-edit-textarea",l.value=typeof s.content=="string"?s.content:s.content.find(h=>h.type==="text")?.text||"";const u=document.createElement("div");u.className="inline-edit-actions";const m=document.createElement("button");m.textContent="Save & Submit",m.className="btn btn-small";const p=document.createElement("button");p.textContent="Cancel",p.className="btn btn-small btn-secondary",u.appendChild(p),u.appendChild(m),d.appendChild(l),d.appendChild(u),a.appendChild(d),l.focus(),l.style.height="auto",l.style.height=l.scrollHeight+"px";const g=()=>{d.remove(),r.style.display="block",a.classList.remove("is-editing")},v=()=>{const h=l.value.trim();n.history.splice(e),document.getElementById("chatInput").value=h,o.bus.publish("ui:renderChatMessages"),re()};m.onclick=v,p.onclick=g,l.onkeydown=h=>{h.key==="Enter"&&!h.shiftKey?(h.preventDefault(),v()):h.key==="Escape"&&g()}}else if(s.role==="assistant")if(r.isContentEditable){r.contentEditable=!1;const l=r.innerHTML;n.history[e].content=l;try{await j(S,"readwrite","put",n),o.bus.publish("ui:renderChatMessages")}catch(u){console.error("Failed to save assistant message:",u),y("Error saving changes. Please try again.","Save Failed"),r.contentEditable=!0}}else a.classList.add("is-editing"),r.contentEditable=!0,r.style.border="1px solid var(--primary-color)",r.style.padding="5px",r.style.borderRadius="5px",r.focus(),c&&(c.innerHTML="&#10003;",c.title="Save Changes"),r.onkeydown=async l=>{l.key==="Escape"&&(l.preventDefault(),r.contentEditable=!1,o.bus.publish("ui:renderChatMessages"))}}function Kt(e){const t=o.getProject(),n=t.chatSessions.find(a=>a.id===t.activeSessionId);if(!n||e>=n.history.length)return;L();let s=-1;for(let a=e;a>=0;a--)if(n.history[a].role==="user"){s=a;break}s!==-1&&(n.history.splice(s+1),o.bus.publish("ui:renderChatMessages"),re(!0))}function Wt(e){if(!confirm("Are you sure? This will delete this message and all subsequent messages in this chat."))return;const t=o.getProject(),n=t.chatSessions.find(s=>s.id===t.activeSessionId);n&&(n.history.splice(e),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"))}function $e(e){e.querySelectorAll("pre").forEach(n=>{if(n.parentNode.classList.contains("code-block-wrapper"))return;const s=document.createElement("div");s.className="code-block-wrapper",n.parentNode.insertBefore(s,n),s.appendChild(n);const a=document.createElement("button");a.className="copy-code-btn",a.textContent="Copy",s.appendChild(a),a.addEventListener("click",r=>{r.stopPropagation();const i=n.querySelector("code");i&&navigator.clipboard.writeText(i.textContent).then(()=>{a.textContent="Copied!",setTimeout(()=>{a.textContent="Copy"},2e3)})})})}function Vt(){const e=document.querySelector(".main-chat-area"),t=document.getElementById("chatMessages"),n=document.getElementById("status-panel");if(!e||!t||!n){console.warn("Mobile scroll behavior cannot be initialized: Elements not found.");return}let s=0;const a=10,r=40;t.dataset.scrollListenerAttached||(t.dataset.scrollListenerAttached="true",t.addEventListener("scroll",()=>{if(e.classList.contains("no-autohide"))return;if(window.innerWidth>768){e.classList.add("header-visible"),n.classList.remove("is-collapsed");return}let i=t.scrollTop;if(t.scrollHeight-i-t.clientHeight<r){e.classList.contains("header-visible")&&(e.classList.remove("header-visible"),n.classList.add("is-collapsed")),s=i;return}Math.abs(i-s)<=a||(i>s?(e.classList.remove("header-visible"),n.classList.add("is-collapsed")):(e.classList.add("header-visible"),n.classList.remove("is-collapsed")),s=i<=0?0:i)},{passive:!0}))}function X(){const e=o.getProject();if(!e||!e.chatSessions)return;const t=document.getElementById("chatMessages");t.innerHTML="";const n=e.chatSessions.find(a=>a.id===e.activeSessionId);n&&n.history.forEach((a,r)=>G(a.role,a.content,r,a.speaker)),z();const s=document.getElementById("clear-summary-btn");if(s){const a=n?.summaryState?.activeSummaryId;s.style.display=a?"block":"none"}setTimeout(()=>{const a=document.querySelector(".main-chat-area"),r=document.getElementById("status-panel");if(!a||!r)return;t.scrollHeight>t.clientHeight?(a.classList.remove("no-autohide"),t.scrollTop<10?(a.classList.add("header-visible"),r.classList.remove("is-collapsed")):(a.classList.remove("header-visible"),r.classList.add("is-collapsed"))):(a.classList.add("no-autohide"),a.classList.add("header-visible"),r.classList.remove("is-collapsed"))},0)}function G(e,t,n,s=null,a=!1){const r=o.getProject(),i=document.getElementById("chatMessages"),c=document.createElement("div");c.className=`message-turn-wrapper ${e}-turn`;const d=document.createElement("div");d.className=`message ${e}`,d.dataset.index=n;const l=document.createElement("div");l.className="message-content";const u=r.agentPresets?.[s],m=u?u.icon:e==="user"?"🧑":"🤖";if(e==="assistant"||e==="user"&&s){const g=document.createElement("div");g.className="speaker-label-wrapper",g.innerHTML=`<span class="speaker-label">${m} ${s||"User"}</span>`,c.appendChild(g)}const p=document.createElement("span");if(p.className="streaming-content",a)p.innerHTML='<div class="loading"><div class="loading-dot"></div><div class="loading-dot"></div><div class="loading-dot"></div></div>';else{const v=(r.activeEntity.type==="agent"?r.agentPresets[r.activeEntity.name]:r.agentPresets[s]||{})?.useMarkdown!==!1;(Array.isArray(t)?t:[{type:"text",text:t}]).forEach(E=>{if(E.type==="text")if(e==="assistant"&&v&&window.marked)p.innerHTML+=marked.parse(E.text||"");else{const f=document.createTextNode(E.text||"");p.appendChild(f)}else if(E.type==="image_url"&&E.url){const f=document.createElement("img");f.src=E.url,f.className="multimodal-image",p.appendChild(f)}})}if(l.appendChild(p),a||(l.querySelectorAll("pre code").forEach(g=>hljs.highlightElement(g)),$e(l)),d.appendChild(l),!a&&e!=="system"){const g=document.createElement("div");g.className="message-actions";const v=(h,E,f)=>{const w=document.createElement("button");return w.innerHTML=h,w.title=E,w.addEventListener("click",I=>{o.bus.publish(f,{index:n,event:I})}),w};g.appendChild(v("&#9998;","Edit","chat:editMessage")),g.appendChild(v("&#128203;","Copy","chat:copyMessage")),e==="assistant"&&g.appendChild(v("&#x21bb;","Regenerate","chat:regenerate")),g.appendChild(v("&#128465;","Delete","chat:deleteMessage")),d.appendChild(g)}return c.appendChild(d),i.appendChild(c),i.scrollTop=i.scrollHeight,d}function Oe(e){const t=document.getElementById("file-preview-container");if(t.innerHTML="",!e||e.length===0){t.style.display="none";return}t.style.display="grid",e.forEach((n,s)=>{const a=document.createElement("div");a.className="file-preview-item";let r="";n.type.startsWith("image/")?r=`<img src="${n.data||""}" class="file-preview-thumbnail" alt="${n.name}">`:r='<div class="file-preview-thumbnail file-icon">📄</div>',a.innerHTML=`${r}<span class="file-preview-name">${n.name}</span><button class="remove-file-btn">&times;</button>`,a.querySelector(".remove-file-btn").addEventListener("click",()=>{o.bus.publish("chat:removeFile",{index:s})}),t.appendChild(a)})}function z(e=!1){const t=o.getProject();if(!t||!t.activeEntity)return;const{type:n,name:s}=t.activeEntity;let a,r;if(n==="agent")r=s,a=t.agentPresets[s];else if(n==="group"){r=s+" (Group)";const p=t.agentGroups[s];a=t.agentPresets[p?.moderatorAgent]||{}}if(!a)return;const i=De(n==="agent"?s:t.agentGroups[s]?.moderatorAgent),c=V(i),d=t.chatSessions?.find(p=>p.id===t.activeSessionId);let l=0;d&&(l=V(JSON.stringify(d.history)));const u=V(document.getElementById("chatInput").value),m=c+l+u;document.getElementById("active-agent-status").textContent=`Active: ${a.icon||""} ${r}`,document.getElementById("token-count-status").textContent=`~${m.toLocaleString()} Tokens`,e&&(document.getElementById("inspector-agent-name").textContent=r,document.getElementById("inspector-agent-model").textContent=a.model||"N/A",document.getElementById("inspector-token-count").textContent=`~${m.toLocaleString()}`,document.getElementById("inspector-system-prompt").textContent=i||"(No system prompt or memories active)")}function Xt(){z(!0),document.getElementById("context-inspector-modal").style.display="flex"}function Zt(){document.getElementById("context-inspector-modal").style.display="none"}function Qt(){o.bus.subscribe("session:loaded",a=>{a&&a.name&&(document.getElementById("chat-title").textContent=a.name),X()}),o.bus.subscribe("session:titleChanged",a=>{document.getElementById("chat-title").textContent=a}),o.bus.subscribe("ui:renderChatMessages",X),o.bus.subscribe("ui:addMessage",a=>{G(a.role,a.content,a.index,a.speakerName,a.isLoading),X()}),o.bus.subscribe("ui:renderFilePreviews",Oe),o.bus.subscribe("ui:showLoadingIndicator",()=>{document.getElementById("sendBtn").classList.add("hidden"),document.getElementById("stopBtn").classList.remove("hidden")}),o.bus.subscribe("ui:hideLoadingIndicator",()=>{document.getElementById("sendBtn").classList.remove("hidden"),document.getElementById("stopBtn").classList.add("hidden")}),o.bus.subscribe("entity:selected",z),o.bus.subscribe("ui:enhanceCodeBlocks",$e);const e=document.getElementById("chatInput");e.addEventListener("keydown",a=>{a.key==="Enter"&&!a.shiftKey&&!(a.metaKey||a.ctrlKey)&&(a.preventDefault(),o.bus.publish("chat:sendMessage"))}),e.addEventListener("input",()=>{e.style.height="auto",e.style.height=e.scrollHeight+"px",z()}),document.getElementById("sendBtn").addEventListener("click",()=>o.bus.publish("chat:sendMessage")),document.getElementById("stopBtn").addEventListener("click",()=>o.bus.publish("chat:stopGeneration")),document.getElementById("context-inspector-trigger-btn").addEventListener("click",Xt),document.querySelector("#context-inspector-modal .btn-secondary").addEventListener("click",Zt);const t=document.getElementById("chat-actions-container");document.getElementById("chat-actions-btn").addEventListener("click",a=>{a.stopPropagation(),t.classList.toggle("open")});const s=(a,r)=>{const i=document.getElementById(a);i&&i.addEventListener("click",c=>{c.preventDefault(),c.stopPropagation(),r(c),t.classList.remove("open")})};s("manual-summarize-btn",()=>o.bus.publish("chat:summarize")),s("clear-summary-btn",()=>o.bus.publish("chat:clearSummary")),s("menu-upload-file-btn",()=>document.getElementById("file-input").click()),document.getElementById("file-input").addEventListener("change",a=>o.bus.publish("chat:fileUpload",a)),Vt(),console.log("Chat UI Initialized.")}function en(e){const t=document.createElement("div");t.className="summary-log-item",t.dataset.logId=e.id;const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);s&&s.summaryState?.activeSummaryId===e.id&&t.classList.add("active");const r=new Date(e.timestamp).toLocaleTimeString("th-TH",{hour:"2-digit",minute:"2-digit"});return t.innerHTML=`
        <div class="summary-log-item-header">
            <span class="summary-log-item-title" title="${e.summary}">${e.summary}</span>
            <div class="summary-log-item-actions">
                <button class="btn-icon btn-small" data-action="load" title="Load as context">&#11139;</button>
                <button class="btn-icon btn-small" data-action="view" title="View content">&#128269;</button>
                <button class="btn-icon btn-small danger" data-action="delete" title="Delete summary">&#128465;</button>
            </div>
        </div>
        <div class="summary-log-item-meta">
            <span>${r}</span>
        </div>
    `,t.querySelector('[data-action="load"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:load",{logId:e.id})}),t.querySelector('[data-action="view"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:view",{logId:e.id})}),t.querySelector('[data-action="delete"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:delete",{logId:e.id})}),t}function Z(){const e=o.getProject();if(!e||!e.summaryLogs)return;const t=document.getElementById("summaryLogList");t.innerHTML="";const n=e.summaryLogs.reduce((a,r)=>{const i=r.sourceSessionId,c=e.chatSessions.find(d=>d.id===i);return a[i]||(a[i]={name:c?c.name:"Unknown Session",logs:[]}),a[i].logs.push(r),a},{}),s=e.activeSessionId;if(Object.keys(n).length===0){t.innerHTML='<p class="no-logs-message">No summaries yet.</p>';return}for(const a in n){const r=n[a],i=r.logs.sort((l,u)=>u.timestamp-l.timestamp),c=document.createElement("details");c.className="summary-group";const d=document.createElement("summary");d.textContent=`For: ${r.name}`,c.appendChild(d),i.forEach(l=>{c.appendChild(en(l))}),a===s&&i.length>0&&(c.open=!0),t.appendChild(c)}}function tn(e){const n=o.getProject().summaryLogs.find(s=>s.id===e);n&&(document.getElementById("view-summary-title").textContent=n.summary,document.getElementById("view-summary-content").textContent=n.content,document.getElementById("view-summary-modal").style.display="flex")}function nn(){document.getElementById("view-summary-modal").style.display="none"}function sn(){o.bus.subscribe("project:loaded",Z),o.bus.subscribe("session:loaded",Z),o.bus.subscribe("summary:listChanged",Z),document.querySelector("#view-summary-modal .btn-secondary").addEventListener("click",nn),console.log("Summary UI Initialized.")}function on(){const e=o.bus,t=(a,r,i,c=d=>d.target.value)=>{const d=document.getElementById(a);d?d.addEventListener(r,l=>{e.publish(i,c(l))}):console.warn(`Settings element not found: #${a}`)};t("fontFamilySelect","change","settings:fontChanged");const n=document.getElementById("theme-switcher");n&&n.addEventListener("change",a=>{a.target.name}),t("apiKey","change","settings:apiKeyChanged"),t("ollamaBaseUrl","change","settings:ollamaUrlChanged"),t("load-models-btn","click","api:loadModels",()=>{}),["system-utility-model-select","system-utility-prompt","system-utility-summary-prompt","system-utility-temperature","system-utility-topP"].forEach(a=>{const r=document.getElementById(a);r&&r.addEventListener("change",()=>e.publish("settings:systemAgentChanged"))}),t("system-utility-summary-preset-select","change","settings:summaryPresetChanged"),t("save-summary-preset-btn","click","settings:saveSummaryPreset",()=>{}),console.log("Settings UI Initialized and Listeners Attached.")}async function an(){try{marked.setOptions({highlight:function(e,t){const n=hljs.getLanguage(t)?t:"plaintext";return hljs.highlight(e,{language:n}).value},gfm:!0,breaks:!0}),ln(),We(),Qe(),vt(),Et(),Ct(),kt(),Qt(),sn(),on(),cn(),rn()}catch(e){console.error("Critical initialization failed:",e),y(`An unexpected error occurred during startup: ${e.message}. Please try clearing website data and reloading.`,"Fatal Error")}}function rn(){const e=document.querySelector(".app-wrapper"),t=40,n=80;let s=0,a=0,r=!1;document.body.addEventListener("touchstart",i=>{e.classList.contains("sidebar-collapsed")&&i.touches[0].clientX<t&&(s=i.touches[0].clientX,a=i.touches[0].clientY,r=!0)},{passive:!0}),document.body.addEventListener("touchmove",i=>{r&&Math.abs(i.touches[0].clientY-a)>Math.abs(i.touches[0].clientX-s)&&(r=!1)},{passive:!0}),document.body.addEventListener("touchend",i=>{if(r&&(r=!1,i.changedTouches[0].clientX-s>n)){const c=document.getElementById("hamburger-btn");c&&c.click()}})}function cn(){const e=o.bus;let t;e.subscribe("autosave:required",()=>{clearTimeout(t),t=setTimeout(async()=>{o.isAutoSaveDirty()&&(console.log("[AutoSave] Debounced save triggered."),await oe()&&o.setAutoSaveDirty(!1))},1500)}),e.subscribe("project:new",it),e.subscribe("project:open",()=>document.getElementById("load-project-input").click()),e.subscribe("project:fileSelectedForOpen",n=>ct(n)),e.subscribe("project:save",n=>Ae(n)),e.subscribe("project:saveConfirm",({projectName:n})=>Le(n)),e.subscribe("project:unsavedChangesChoice",n=>lt(n)),e.subscribe("project:exportChat",({sessionId:n})=>at(n)),e.subscribe("api:loadModels",Ee),e.subscribe("settings:fontChanged",gt),e.subscribe("settings:apiKeyChanged",yt),e.subscribe("settings:ollamaUrlChanged",ht),e.subscribe("settings:systemAgentChanged",ft),e.subscribe("settings:summaryPresetChanged",$t),e.subscribe("settings:saveSummaryPreset",Ot),e.subscribe("entity:select",({type:n,name:s})=>bt(n,s)),e.subscribe("session:new",_),e.subscribe("session:load",({sessionId:n})=>$(n)),e.subscribe("session:rename",({sessionId:n,event:s,newName:a})=>le(n,s,a)),e.subscribe("session:clone",({sessionId:n,event:s})=>st(n,s)),e.subscribe("session:archive",({sessionId:n,event:s})=>ot(n,s)),e.subscribe("session:pin",({sessionId:n,event:s})=>nt(n,s)),e.subscribe("session:delete",({sessionId:n,event:s})=>tt(n,s)),e.subscribe("session:autoRename",({sessionId:n,newName:s})=>le(n,null,s)),e.subscribe("agent:create",()=>de(!1)),e.subscribe("agent:edit",({agentName:n})=>de(!0,n)),e.subscribe("agent:save",Pt),e.subscribe("agent:delete",({agentName:n})=>jt(n)),e.subscribe("agent:generateProfile",wt),e.subscribe("group:create",()=>me(!1)),e.subscribe("group:edit",({groupName:n})=>me(!0,n)),e.subscribe("group:save",At),e.subscribe("group:delete",({groupName:n})=>Lt(n)),e.subscribe("memory:create",()=>he(null)),e.subscribe("memory:edit",({index:n,event:s})=>he(n,s)),e.subscribe("memory:save",Mt),e.subscribe("memory:delete",({index:n,event:s})=>Bt(n,s)),e.subscribe("memory:toggle",({name:n,event:s})=>xt(n,s)),e.subscribe("memory:exportPackage",Tt),e.subscribe("memory:importPackage",()=>document.getElementById("load-memory-package-input").click()),e.subscribe("memory:fileSelectedForImport",Dt),e.subscribe("chat:sendMessage",()=>re(!1)),e.subscribe("chat:stopGeneration",L),e.subscribe("chat:fileUpload",n=>Rt(n)),e.subscribe("chat:summarize",zt),e.subscribe("chat:removeFile",({index:n})=>{C&&C[n]&&(C.splice(n,1),Oe(C))}),e.subscribe("chat:clearSummary",Gt),e.subscribe("chat:copyMessage",({index:n,event:s})=>Yt(n,s)),e.subscribe("chat:editMessage",({index:n})=>Jt(n)),e.subscribe("chat:regenerate",({index:n})=>Kt(n)),e.subscribe("chat:deleteMessage",({index:n})=>Wt(n)),e.subscribe("summary:view",({logId:n})=>tn(n)),e.subscribe("summary:load",({logId:n})=>_t(n)),e.subscribe("summary:delete",({logId:n})=>Ht(n)),console.log("Event bus subscriptions are set up.")}function ln(){const e=document.getElementById("theme-switcher");if(!e)return;const t=e.querySelectorAll('input[type="radio"]'),n=localStorage.getItem("theme")||"system",s=a=>{if(a==="system"){const r=window.matchMedia("(prefers-color-scheme: dark)").matches;document.body.classList.toggle("dark-mode",r)}else document.body.classList.toggle("dark-mode",a==="dark")};t.forEach(a=>{a.value===n&&(a.checked=!0),a.addEventListener("change",r=>{const i=r.target.value;localStorage.setItem("theme",i),s(i)})}),s(n),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",()=>{(localStorage.getItem("theme")||"system")==="system"&&s("system")})}document.addEventListener("DOMContentLoaded",async()=>{await an();try{const e=localStorage.getItem("lastActiveProjectId");e?await ut(e):await F()}catch(e){console.error("[Startup Error] Failed to load project, creating a new one.",e),localStorage.removeItem("lastActiveProjectId"),await F()}});
