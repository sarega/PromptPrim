(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=n(a);fetch(a.href,r)}})();const oe="AIChatbotDB_Project_",w="chatSessions",B="projectMetadata",ye="projectInfo",M={"agent-name-input":"name","agent-icon-input":"icon","agent-model-select":"model","agent-system-prompt":"systemPrompt","agent-use-markdown":"useMarkdown","agent-temperature":"temperature","agent-topP":"topP","agent-topK":"topK","agent-presence-penalty":"presence_penalty","agent-frequency-penalty":"frequency_penalty","agent-max-tokens":"max_tokens","agent-seed":"seed","agent-stop-sequences":"stop_sequences"},he={Standard:`You are a professional summarizer. Your task is to create a dense, context-rich summary of a conversation. Include all key entities, character names, locations, critical events, and important emotional states. The summary should be detailed enough for another AI to pick up the conversation and understand all necessary context.

Here is the summary of the conversation so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new messages that have occurred since that summary:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive summary that integrates the key points from the new messages into the previous one. Respond with ONLY the new, complete summary text.`,"Literary Analyst":`You are a meticulous literary analyst tasked with creating a detailed narrative digest. Your primary goal is to preserve the story's integrity, character development, and emotional nuances. Do NOT sacrifice important details for the sake of brevity.

Your digest must include:
- Plot Progression: Every significant event and the causal links between them.
- Character Arcs: Any changes in a character's state of mind, motivation, decisions, or relationships.
- Key Dialogue: Capture the essence and subtext of crucial conversations.
- Atmosphere & Setting: Mention key descriptions of the environment if they contribute to the mood or plot.
- New Elements: Note the introduction of any new characters, significant objects, or unresolved questions (foreshadowing).

Here is the narrative digest so far:
--- PREVIOUS DIGEST ---
\${previousSummary}
--- END PREVIOUS DIGEST ---

Now, here are the new scenes and dialogues that have occurred:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive narrative digest that seamlessly integrates the key points from the new messages into the previous one. Write in a third-person, past-tense narrative style. Respond with ONLY the new, complete digest text.`,"Continuity Editor":`You are a continuity editor for a novel series. Your job is to create a 'Previously On...' document that ensures no plot points are ever lost. The output must be extremely detailed, acting as a perfect memory for another AI to continue the story without missing a single beat.

The document must retain:
- All character actions and their immediate consequences.
- The full names of any character or location mentioned.
- The specifics of any plans made or secrets revealed.
- Emotional state of each character at the end of the scene.
- Any objects that were acquired, lost, or noted as important.

The goal is maximum information retention, not summarization. Think of this as expanding upon the previous summary with new, detailed information.

Here is the continuity document so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new events to be added:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide the updated, complete continuity document, integrating the new events chronologically. Your response should be a single block of text containing only the updated document.`},Q={model:"openai/gpt-4o-mini",systemPrompt:"You are a highly efficient assistant that processes user requests and responds in a structured JSON format when required. You are objective and precise.",summarizationPrompt:he.Standard,temperature:.2,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:2048,seed:-1,stop_sequences:""},Oe=[{name:"Code Assistant",content:"You are an expert programmer."},{name:"Creative Writer",content:"You are a creative writing assistant."}],fe={icon:"🤖",model:"",systemPrompt:"You are a helpful assistant.",useMarkdown:!0,temperature:1,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:4096,seed:-1,stop_sequences:""},f={currentProject:{},allProviderModels:[],isLoading:!1,isDirtyForAutoSave:!1,abortController:null,editingAgentName:null,editingGroupName:null,pendingFileToOpen:null,pendingActionAfterSave:null},x={events:{},subscribe(e,t){return this.events[e]=this.events[e]||[],this.events[e].push(t),()=>{this.events[e]=this.events[e].filter(n=>t!==n)}},publish(e,t){this.events[e]&&this.events[e].forEach(n=>n(t))}},o={getState:()=>f,getProject:()=>f.currentProject,isLoading:()=>f.isLoading,isUserDirty:()=>f.currentProject?.isDirtyForUser||!1,isAutoSaveDirty:()=>f.isDirtyForAutoSave,setState:(e,t)=>{f[e]=t},setProject:e=>{f.currentProject=e,x.publish("project:stateChanged",f.currentProject)},setLoading:e=>{f.isLoading!==e&&(f.isLoading=e,x.publish("loading:changed",e))},setUserDirty:e=>{f.currentProject&&f.currentProject.isDirtyForUser!==e&&(f.currentProject.isDirtyForUser=e,x.publish("userDirty:changed",e))},setAutoSaveDirty:e=>{f.isDirtyForAutoSave!==e&&(f.isDirtyForAutoSave=e,e&&x.publish("autosave:required"))},updateAndPersistState:()=>{o.setUserDirty(!0),o.setAutoSaveDirty(!0)},setAllModels:e=>{f.allProviderModels=e.sort((t,n)=>t.name.localeCompare(n.name)),f.currentProject&&f.currentProject.globalSettings&&(f.currentProject.globalSettings.allModels=f.allProviderModels),x.publish("models:loaded",f.allProviderModels)},newAbortController:()=>(f.abortController=new AbortController,f.abortController),abort:()=>{f.abortController&&(f.abortController.abort(),f.abortController=null)},bus:x};async function Ne(e){const t=await fetch("https://openrouter.ai/api/v1/models",{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error("Could not fetch models from OpenRouter");return(await t.json()).data.map(s=>({id:s.id,name:s.name||s.id,provider:"openrouter"}))}async function Ue(e){try{const t=await fetch(`${e}/api/tags`);if(!t.ok)throw new Error(`Could not connect to Ollama (HTTP ${t.status})`);return(await t.json()).models.map(s=>({id:s.name,name:s.name,provider:"ollama"}))}catch(t){throw t instanceof TypeError?new Error("Could not connect to Ollama. Check URL, server status, and CORS settings."):t}}async function be(){o.bus.publish("status:update",{message:"Loading models...",state:"loading"});let e=o.getProject();if(!e||!e.globalSettings){o.bus.publish("status:update",{message:"Project not loaded",state:"error"});return}const t=e.globalSettings.apiKey?.trim()||"",n=e.globalSettings.ollamaBaseUrl?.trim()||"";let s={message:"No models found. Please check API settings.",state:"warning"};const a=[];t&&a.push(Ne(t).catch(r=>(console.error("OpenRouter fetch failed:",r),[]))),n&&a.push(Ue(n).catch(r=>(console.error("Ollama fetch failed:",r),[])));try{if(a.length===0){o.setAllModels([]),s={message:"Ready",state:"connected"},o.bus.publish("status:update",s);return}const i=(await Promise.all(a)).flat();if(i.length>0){const l="google/gemma-3-27b-it",d=i.some(u=>u.id===l);let c=!1;if(d){const u=["openai/gpt-4o-mini","google/gemma-2-27b-it"];(!e.globalSettings.systemUtilityAgent.model||u.includes(e.globalSettings.systemUtilityAgent.model))&&(e.globalSettings.systemUtilityAgent.model=l,c=!0);const m=e.agentPresets["Default Agent"];m&&!m.model&&(m.model=l,c=!0)}c&&o.setProject(e),o.setAllModels(i),c&&await o.updateAndPersistState(),s={message:`Loaded ${i.length} models successfully.`,state:"connected"}}}catch(r){s={message:`Error loading models: ${r.message}`,state:"error"}}o.bus.publish("status:update",s),o.bus.publish("project:loaded",{projectData:o.getProject()})}async function q(e,t){const s=o.getState().allProviderModels.find(p=>p.id===e.model);if(!s)throw new Error("Model data not found for the agent.");const a=o.getProject(),r=s.provider,i={model:e.model,messages:t,stream:!1},l={temperature:parseFloat(e.temperature),top_p:parseFloat(e.topP),top_k:parseInt(e.topK,10),presence_penalty:parseFloat(e.presence_penalty),frequency_penalty:parseFloat(e.frequency_penalty),max_tokens:parseInt(e.max_tokens,10),seed:parseInt(e.seed,10)};e.stop_sequences&&(l.stop=e.stop_sequences.split(",").map(p=>p.trim()));let d,c;r==="openrouter"?(d="https://openrouter.ai/api/v1/chat/completions",c={Authorization:`Bearer ${a.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(i,l)):(d=`${a.globalSettings.ollamaBaseUrl}/api/chat`,c={"Content-Type":"application/json"},i.options=l);const u=await fetch(d,{method:"POST",headers:c,body:JSON.stringify(i),signal:o.getState().abortController?.signal});if(!u.ok){const p=await u.text();throw new Error(`API Error: ${p}`)}const m=await u.json();if(r==="openrouter"&&m.choices&&m.choices.length>0)return m.choices[0].message.content;if(r==="ollama"&&m.message)return m.message.content;throw new Error("Invalid API response structure.")}async function $e(e,t,n,s=null){const r=o.getState().allProviderModels.find(P=>P.id===t.model);if(!r)throw new Error("Model data not found for active agent.");const i=o.getProject(),l=r.provider,d={model:t.model,messages:n,stream:!0},c={temperature:parseFloat(t.temperature),top_p:parseFloat(t.topP),top_k:parseInt(t.topK,10),presence_penalty:parseFloat(t.presence_penalty),frequency_penalty:parseFloat(t.frequency_penalty),max_tokens:parseInt(t.max_tokens,10),seed:parseInt(t.seed,10)};t.stop_sequences&&(c.stop=t.stop_sequences.split(",").map(P=>P.trim()));let u,m;l==="openrouter"?(u="https://openrouter.ai/api/v1/chat/completions",m={Authorization:`Bearer ${i.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(d,c)):(u=`${i.globalSettings.ollamaBaseUrl}/api/chat`,m={"Content-Type":"application/json"},d.options=c);const p=await fetch(u,{method:"POST",headers:m,body:JSON.stringify(d),signal:o.getState().abortController?.signal});if(!p.ok){const P=await p.text();throw new Error(`API Error: ${P}`)}const g=p.body.getReader(),v=new TextDecoder;let h="",S="";const b=e.querySelector(".streaming-content");if(!b){e.innerHTML+=" Error: UI render target not found.";return}for(b.innerHTML="";!o.getState().abortController?.signal.aborted;){const{done:P,value:L}=await g.read();if(P)break;S+=v.decode(L,{stream:!0});const A=S.split(`
`);S=A.pop();for(const k of A){if(k.trim()==="")continue;let O="";try{if(l==="openrouter"){if(k.startsWith("data: ")){const C=k.substring(6);if(C.trim()==="[DONE]")break;O=JSON.parse(C).choices[0]?.delta?.content||""}}else{const C=JSON.parse(k);if(O=C.message?.content||"",C.done)break}}catch(C){console.warn("Error parsing stream chunk:",C)}O&&(h+=O,t.useMarkdown?b.innerHTML=marked.parse(h):b.textContent=h)}}return o.bus.publish("ui:enhanceCodeBlocks",e),h}async function qe(e){try{const t=o.getProject();if(t.activeEntity.type!=="agent")return;const n=t.activeEntity.name,s=t.agentPresets[n];if(!s||!s.model)return;const r=[{role:"user",content:'Based on the conversation, generate a concise title (3-5 words) and a single relevant emoji. Respond with a JSON object like {"title": "your title", "emoji": "👍"}.'}],i=await q({...s,temperature:.2},r);let l={};try{l=JSON.parse(i.match(/{.*}/s)[0])}catch{console.error("Failed to parse title JSON:",i),l={title:i.replace(/"/g,"").substring(0,30),emoji:"💬"}}const d=`${l.emoji||"💬"} ${l.title||"Untitled"}`;d&&o.bus.publish("session:autoRename",{sessionId:t.activeSessionId,newName:d})}catch(t){console.error("Auto-rename failed:",t)}}function ae(){document.getElementById("settings-panel").classList.toggle("open")}function Fe(){const e=o.getProject();document.getElementById("project-name-input").value=e.name==="Untitled Project"?"":e.name,document.getElementById("save-project-modal").style.display="flex"}function ze(){document.getElementById("save-project-modal").style.display="none"}function ve(){document.getElementById("unsaved-changes-modal").style.display="flex"}function _e(){document.getElementById("unsaved-changes-modal").style.display="none"}function y(e,t="Notification"){document.getElementById("alert-modal-title").textContent=t,document.getElementById("alert-modal-message").textContent=e,document.getElementById("alert-modal").style.display="flex"}function Re(){document.getElementById("alert-modal").style.display="none"}function Z(){document.querySelector(".sidebar").classList.toggle("open"),document.getElementById("mobile-overlay").classList.toggle("active")}function Ge(){document.querySelector(".app-wrapper").classList.toggle("sidebar-collapsed")}function T(e){e.stopPropagation();const t=e.currentTarget.closest(".dropdown"),n=e.currentTarget.closest(".item"),s=t.classList.contains("open");document.querySelectorAll(".dropdown.open").forEach(a=>{a.classList.remove("open");const r=a.closest(".item");r&&r.classList.remove("z-index-front")}),s||(t.classList.add("open"),n&&n.classList.add("z-index-front"))}function He(){const e=o.getProject();e?.globalSettings?.fontFamilySelect&&document.documentElement.style.setProperty("--main-font-family",e.globalSettings.fontFamilySelect)}function Ye({message:e,state:t}){document.getElementById("statusText").textContent=e||"Ready";const n=document.getElementById("statusDot");n.className="status-dot",t==="connected"?n.classList.add("connected"):t==="error"&&n.classList.add("error")}function Ke(){const e=document.querySelector(".sidebar-resizer"),t=document.querySelector(".sidebar-horizontal-resizer"),n=document.querySelector(".sidebar"),s=document.querySelector(".sessions-frame"),a=document.querySelector(".memories-frame");if(!e||!t||!n||!s||!a){console.warn("Resizable sidebar elements not found. Resizing will be disabled.");return}let r=!1,i=!1;const l=h=>{if(!r)return;const S=h.touches?h.touches[0].clientY:h.clientY,b=document.querySelector(".sidebar-content");if(!b)return;const P=b.getBoundingClientRect();let L=S-P.top;const A=b.offsetHeight;L<100&&(L=100),L>A-100&&(L=A-100);const k=e.offsetHeight;s.style.flex=`0 1 ${L}px`,a.style.flex=`1 1 ${A-L-k}px`},d=h=>{h.preventDefault(),r=!0,document.body.style.cursor="ns-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",l),window.addEventListener("touchmove",l,{passive:!1}),window.addEventListener("mouseup",c),window.addEventListener("touchend",c)},c=()=>{r=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",l),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",c),window.removeEventListener("touchend",c),localStorage.setItem("sidebarSplitHeight",s.style.flex)};e.addEventListener("mousedown",d),e.addEventListener("touchstart",d,{passive:!1});const u=h=>{if(!i)return;let b=h.touches?h.touches[0].clientX:h.clientX;b<250&&(b=250),b>600&&(b=600),n.style.flexBasis=`${b}px`},m=h=>{h.preventDefault(),i=!0,document.body.style.cursor="ew-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",u),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("mouseup",p),window.addEventListener("touchend",p)},p=()=>{i=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",u),window.removeEventListener("touchmove",u),window.removeEventListener("mouseup",p),window.removeEventListener("touchend",p),localStorage.setItem("sidebarWidth",n.style.flexBasis)};t.addEventListener("mousedown",m),t.addEventListener("touchstart",m,{passive:!1});const g=localStorage.getItem("sidebarSplitHeight");g&&(s.style.flex=g);const v=localStorage.getItem("sidebarWidth");v&&(n.style.flexBasis=v)}function Je(){o.bus.subscribe("ui:applyFontSettings",He),o.bus.subscribe("status:update",Ye),document.querySelector("#settings-btn").addEventListener("click",ae),document.querySelector(".close-settings-btn").addEventListener("click",ae),document.getElementById("collapse-sidebar-btn").addEventListener("click",Ge);const e=document.getElementById("hamburger-btn");e&&e.addEventListener("click",Z);const t=document.getElementById("mobile-overlay");t&&t.addEventListener("click",Z);const n=document.querySelector("#alert-modal .btn");n&&n.addEventListener("click",Re);const s=document.getElementById("unsaved-changes-modal");if(s){const a=s.querySelector(".btn:not(.btn-secondary):not(.btn-danger)");a&&a.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","save"));const r=s.querySelector(".btn-danger");r&&r.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","discard"));const i=s.querySelector(".btn-secondary");i&&i.addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","cancel"))}Ke(),console.log("Core UI Initialized and Listeners Attached.")}function G(e){const t=document.getElementById("project-title");if(t){const n=o.isUserDirty(),s=e||o.getProject()?.name||"Untitled";t.textContent=n?`${s} *`:s}}function We(e){e&&e.stopPropagation(),document.getElementById("custom-entity-selector-wrapper").classList.toggle("open")}function Se(e,t){let n;e==="agent"?n=document.querySelector(`.item[data-agent-name="${t}"]`):e==="group"&&(n=document.querySelector(`.item[data-group-name="${t}"]`)),n&&n.scrollIntoView({behavior:"smooth",block:"center"})}function Ve(e){const t=e.indexOf("_"),n=e.substring(0,t),s=e.substring(t+1);o.bus.publish("entity:select",{type:n,name:s}),document.getElementById("custom-entity-selector-wrapper").classList.remove("open")}function N(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=document.getElementById("entitySelector"),n=document.getElementById("custom-entity-selector-options"),s=document.getElementById("custom-entity-selector-icon"),a=document.getElementById("custom-entity-selector-text");t.innerHTML="",n.innerHTML="";const r=(d,c,u,m)=>{const p=`${d}_${c}`,g=document.createElement("div");g.className="custom-select-option",g.innerHTML=`<span class="item-icon">${u}</span> <span>${c}</span>`,g.addEventListener("click",()=>Ve(p)),m.appendChild(new Option(`${u} ${c}`,p)),n.appendChild(g)},i=e.agentPresets||{};if(Object.keys(i).length>0){const d=document.createElement("optgroup");d.label="Agent Presets",t.appendChild(d);const c=document.createElement("div");c.className="custom-select-group",c.textContent="Agent Presets",n.appendChild(c),Object.keys(i).forEach(u=>{r("agent",u,i[u].icon||"🤖",d)})}const l=e.agentGroups||{};if(Object.keys(l).length>0){const d=document.createElement("optgroup");d.label="Agent Groups",t.appendChild(d);const c=document.createElement("div");c.className="custom-select-group",c.textContent="Agent Groups",n.appendChild(c),Object.keys(l).forEach(u=>{r("group",u,"🤝",d)})}if(e.activeEntity){const{type:d,name:c}=e.activeEntity;t.value=`${d}_${c}`,d==="agent"&&i[c]?(s.textContent=i[c].icon||"🤖",a.textContent=c):d==="group"?(s.textContent="🤝",a.textContent=c):(s.textContent="❔",a.textContent="Select...")}}function Xe(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=document.getElementById("system-utility-summary-preset-select"),n=e.globalSettings.summarizationPromptPresets||{},s=document.getElementById("system-utility-summary-prompt").value;let a=null;t.innerHTML="";for(const r in n)t.add(new Option(r,r)),n[r].trim()===s.trim()&&(a=r);if(a)t.value=a;else{const r=new Option("--- Custom ---","custom",!0,!0);r.disabled=!0,t.add(r),t.value="custom"}}function Ze(){o.bus.subscribe("project:loaded",t=>{G(t.projectData.name),N()}),o.bus.subscribe("project:nameChanged",t=>G(t)),o.bus.subscribe("userDirty:changed",()=>{G()}),o.bus.subscribe("entity:selected",N),o.bus.subscribe("agent:listChanged",N),o.bus.subscribe("group:listChanged",N),o.bus.subscribe("ui:renderSummarizationSelector",Xe);const e=document.querySelector(".sidebar-bottom-row .dropdown");if(e){const t=e.querySelector("button");t&&t.addEventListener("click",T);const n=e.querySelector(".dropdown-content");if(n){const s=(a,r,i={})=>{const l=n.querySelector(a);l&&l.addEventListener("click",d=>{d.preventDefault(),o.bus.publish(r,i),e.classList.remove("open")})};s('a[data-action="newProject"]',"project:new"),s('a[data-action="openProject"]',"project:open"),s('a[data-action="saveProject"]',"project:save",!1),s('a[data-action="saveProjectAs"]',"project:save",!0),s('a[data-action="exportChat"]',"project:exportChat")}}document.getElementById("load-project-input").addEventListener("change",t=>o.bus.publish("project:fileSelectedForOpen",t)),document.getElementById("custom-entity-selector-trigger").addEventListener("click",We),console.log("Project UI Initialized.")}let E;function Qe(){return E}async function ee(e){return E&&E.name===`${oe}${e}`?Promise.resolve(E):(E&&(E.close(),E=null),new Promise((t,n)=>{const s=indexedDB.open(`${oe}${e}`,5);s.onupgradeneeded=a=>{const r=a.target.result;r.objectStoreNames.contains(w)||r.createObjectStore(w,{keyPath:"id"}),r.objectStoreNames.contains(B)||r.createObjectStore(B,{keyPath:"id"})},s.onsuccess=a=>{E=a.target.result,console.log(`IndexedDB '${E.name}' opened successfully.`),t(E)},s.onerror=a=>{console.error("IndexedDB error:",a.target.error),n(a.target.error)}}))}async function I(e,t,n,s){return new Promise((a,r)=>{if(!E)return console.error("dbRequest called before DB was opened."),r("Database is not open.");try{const d=E.transaction(e,t).objectStore(e)[n](s);d.onsuccess=c=>a(c.target.result||(n==="getAll"?[]:null)),d.onerror=c=>r(c.target.error)}catch(i){console.error(`Error performing dbRequest (${n} on ${e}):`,i),r(i)}})}async function Ee(e){return new Promise((t,n)=>{if(!E)return n("Database is not open.");try{const s=E.transaction(e,"readwrite");s.oncomplete=()=>{console.log(`Stores cleared: ${e.join(", ")}`),t()},s.onerror=a=>n(s.error),e.forEach(a=>{E.objectStoreNames.contains(a)&&s.objectStore(a).clear()})}catch(s){n(s)}})}async function _(){const e=o.getProject();if(!e||!e.activeEntity){y("Please create or select an agent first.","Error");return}const t={id:`sid_${Date.now()}_${Math.random().toString(36).substring(2,9)}`,name:"New Chat",history:[],createdAt:Date.now(),updatedAt:Date.now(),pinned:!1,archived:!1,linkedEntity:{...e.activeEntity},groupChatState:{isRunning:!1},summaryState:{activeSummaryId:null,summarizedUntilIndex:0}};try{await I(w,"readwrite","add",t),e.chatSessions||(e.chatSessions=[]),e.chatSessions.unshift(t),o.setProject(e),o.updateAndPersistState(),await D(t.id)}catch(n){console.error("Failed to create new session in DB:",n),y("Error creating new chat.","Error")}}async function D(e){if(o.isLoading())return;const t=o.getProject(),n=t.chatSessions.find(s=>s.id===e);if(n){if(t.activeSessionId=e,n.linkedEntity?.type==="agent"&&t.agentPresets[n.linkedEntity.name])t.activeEntity={...n.linkedEntity};else if(n.linkedEntity?.type==="group"&&t.agentGroups[n.linkedEntity.name])t.activeEntity={...n.linkedEntity};else if(Object.keys(t.agentPresets).length>0){const s=Object.keys(t.agentPresets)[0];t.activeEntity={type:"agent",name:s},n.linkedEntity={...t.activeEntity},o.updateAndPersistState()}else t.activeEntity=null;o.setProject(t),o.bus.publish("session:loaded",n),t.activeEntity&&(o.bus.publish("entity:selected",t.activeEntity),requestAnimationFrame(()=>{Se(t.activeEntity.type,t.activeEntity.name)}))}}async function re(e,t,n=null){t&&t.stopPropagation();const s=o.getProject(),a=s.chatSessions.find(i=>i.id===e);if(!a)return;const r=n||prompt("Enter new name:",a.name);r&&r.trim()&&(a.name=r.trim(),a.updatedAt=Date.now(),o.setProject(s),o.updateAndPersistState(),o.bus.publish("session:changed"),e===s.activeSessionId&&o.bus.publish("session:titleChanged",r))}async function et(e,t){if(t&&t.stopPropagation(),!confirm("Are you sure you want to delete this chat session?"))return;const n=o.getProject(),s=n.chatSessions.findIndex(a=>a.id===e);if(s!==-1)if(n.chatSessions.splice(s,1),await I(w,"readwrite","delete",e),o.updateAndPersistState(),n.activeSessionId===e){n.activeSessionId=null;const a=[...n.chatSessions].filter(r=>!r.archived).sort((r,i)=>i.updatedAt-r.updatedAt)[0];o.setProject(n),a?await D(a.id):await _()}else o.setProject(n),o.bus.publish("session:changed")}async function tt(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===e);s&&(s.pinned=!s.pinned,s.updatedAt=Date.now(),o.setProject(n),o.updateAndPersistState(),o.bus.publish("session:changed"))}async function nt(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(r=>r.id===e);if(!s){y("Error: Could not find session to clone.","Error");return}const a=JSON.parse(JSON.stringify(s));a.id=`sid_${Date.now()}`,a.name=`${s.name} (Copy)`,a.createdAt=Date.now(),a.updatedAt=Date.now(),a.pinned=!1,a.archived=!1,n.chatSessions.unshift(a),await I(w,"readwrite","add",a),o.setProject(n),o.updateAndPersistState(),await D(a.id)}async function st(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===e);if(s)if(s.archived=!s.archived,s.archived&&(s.pinned=!1),s.updatedAt=Date.now(),o.updateAndPersistState(),n.activeSessionId===e&&s.archived){n.activeSessionId=null;const a=n.chatSessions.find(r=>!r.archived);o.setProject(n),a?await D(a.id):await _()}else o.setProject(n),o.bus.publish("session:changed")}function ot(e){const t=o.getProject(),n=e||t.activeSessionId;if(!n){y("No active chat session to export.");return}const s=t.chatSessions.find(c=>c.id===n);if(!s){y("Could not find session data to export.");return}const a=s.name||"Untitled_Chat";let r=`Chat Export - Session: ${a}
================

`;s.history.forEach(c=>{const u=c.speaker||c.role.charAt(0).toUpperCase()+c.role.slice(1);let m="";typeof c.content=="string"?m=c.content:Array.isArray(c.content)&&(m=c.content.find(p=>p.type==="text")?.text||"[Image]"),r+=`${u}: ${m}

`});const i=new Blob([r],{type:"text/plain;charset=utf-8"}),l=URL.createObjectURL(i),d=document.createElement("a");d.href=l,d.download=`chat-export-${a.replace(/\s+/g,"_")}_${new Date().toISOString().slice(0,10)}.txt`,d.click(),URL.revokeObjectURL(l)}async function we(e){const t=e||o.getProject()?.chatSessions;if(!t)return;const n=Qe();if(!n){console.error("[AutoSave] Cannot save sessions, DB not available.");return}const s=n.transaction(w,"readwrite"),a=s.objectStore(w);for(const r of t)a.put(r);return new Promise((r,i)=>{s.oncomplete=()=>{console.log(`[AutoSave] ${t.length} sessions saved to DB.`),r()},s.onerror=()=>{console.error("[AutoSave] Error saving sessions:",s.error),i(s.error)}})}function at(){const e=`proj_${Date.now()}`,t="Default Agent";return{id:e,name:"Untitled Project",isDirtyForUser:!1,activeEntity:{type:"agent",name:t},agentPresets:{[t]:{...fe,model:"",activeMemories:[]}},agentGroups:{},memories:JSON.parse(JSON.stringify(Oe)),chatSessions:[],activeSessionId:null,summaryLogs:[],globalSettings:{fontFamilySelect:"'Sarabun', sans-serif",apiKey:"",ollamaBaseUrl:"http://localhost:11434",systemUtilityAgent:{...Q},summarizationPromptPresets:JSON.parse(JSON.stringify(he))}}}async function F(){try{const e=at();await ee(e.id),await Ee([w,B]),await te(e,!0)}catch(e){console.error("Failed to proceed with creating new project:",e),y("Could not create a new project. Please check console for errors.","Error")}}function rt(){o.isUserDirty()?(o.setState("pendingActionAfterSave","new"),ve()):F()}function it(e){const t=e.target.files[0];t&&(o.setState("pendingFileToOpen",t),e.target.value="",o.isUserDirty()?(o.setState("pendingActionAfterSave","open"),ve()):Pe())}function Pe(){try{const e=o.getState().pendingFileToOpen;if(!e)return;lt(e),o.setState("pendingFileToOpen",null)}catch(e){console.error("Failed to proceed with opening project:",e),y("Could not open the project file.","Error")}}async function je(e=!1){const t=o.getProject();e||t.name==="Untitled Project"?Fe():await Ie(t.name)}async function Ie(e){const t=e?.trim();if(!t)return y("Please enter a project name."),!1;const n=o.getProject();n.name=t,o.bus.publish("project:nameChanged",t),o.setUserDirty(!1);let s=JSON.parse(JSON.stringify(o.getProject()));s=Ae(s);try{const a=JSON.stringify(s,null,2),r=new Blob([a],{type:"application/json"}),i=URL.createObjectURL(r),l=document.createElement("a");return l.href=i,l.download=`${t.replace(/\s+/g,"_")}.json`,document.body.appendChild(l),l.click(),URL.revokeObjectURL(i),document.body.removeChild(l),ze(),o.setAutoSaveDirty(!1),await ne(),o.getState().pendingActionAfterSave&&await Le(),!0}catch(a){return console.error("Failed to save project:",a),y("Failed to save project file.","Error"),o.setUserDirty(!0),!1}}async function ct(e){_e();try{switch(e){case"save":await je(!1);break;case"discard":o.setUserDirty(!1),await ne(),await Le();break;case"cancel":default:o.setState("pendingFileToOpen",null),o.setState("pendingActionAfterSave",null);break}}catch(t){console.error("Error handling unsaved changes choice:",t),y(`An error occurred while performing the action: ${t.message}`,"Error"),o.setState("pendingFileToOpen",null),o.setState("pendingActionAfterSave",null)}}async function Le(){const e=o.getState().pendingActionAfterSave;o.setState("pendingActionAfterSave",null),e==="open"?await Pe():e==="new"&&await F()}async function lt(e){const t=new FileReader;t.onload=async n=>{try{const s=JSON.parse(n.target.result);if(s&&s.id&&s.name&&s.agentPresets)await te(s,!0),y(`Project '${s.name}' loaded successfully!`,"Project Loaded");else throw new Error("Invalid project file format.")}catch(s){y(`Error loading project: ${s.message}`,"Error"),console.error(s)}},t.readAsText(e)}async function dt(e){if(!e)throw new Error("Cannot load last project: Project ID is missing.");await ee(e);const t=await I(B,"readonly","get",ye);if(t&&t.data&&t.data.id===e){const n=t.data,s=await I(w,"readonly","getAll"),a={...n,chatSessions:s||[]};await te(a,!1),console.log("Successfully loaded the last active project from IndexedDB.")}else throw new Error("Project data in DB is invalid or mismatched with last known ID.")}async function te(e,t=!1){const n=Ae(e);await ee(n.id),t&&(n.isDirtyForUser=!1,await ut(n)),o.setProject(n),await mt(),o.bus.publish("userDirty:changed",o.isUserDirty()),o.setAutoSaveDirty(!1),(n.globalSettings.apiKey||n.globalSettings.ollamaBaseUrl)&&await be();const s=(n.chatSessions||[]).filter(a=>!a.archived);if(s.length===0)await _();else{const a=n.activeSessionId,r=s.find(i=>i.id===a)||s.sort((i,l)=>l.updatedAt-i.updatedAt)[0];await D(r.id)}o.bus.publish("project:loaded",{projectData:n}),localStorage.setItem("lastActiveProjectId",n.id)}async function ut(e){await Ee([w,B]),await Ce(e),await we(e.chatSessions),console.log("Database has been rewritten with new project data.")}async function Ce(e){const t=e||o.getProject();if(!t||!t.id){console.warn("Cannot persist metadata: project or project ID is missing.");return}const n={...t};delete n.chatSessions,await I(B,"readwrite","put",{id:ye,data:n})}async function ne(){const e=o.getProject();if(!e||!e.id)return!1;console.log("[AutoSave] Persisting project to IndexedDB...");try{return await Ce(),await we(),console.log("[AutoSave] Project state successfully persisted."),!0}catch(t){return console.error("[AutoSave] Failed to persist project state:",t),!1}}async function mt(){const e=o.getProject();if(!e||!e.globalSettings)return;const t=e.globalSettings;document.getElementById("apiKey").value=t.apiKey||"",document.getElementById("ollamaBaseUrl").value=t.ollamaBaseUrl||"",o.bus.publish("ui:applyFontSettings");const n=t.systemUtilityAgent||Q;document.getElementById("system-utility-model-select").value=n.model||"",document.getElementById("system-utility-prompt").value=n.systemPrompt||"",document.getElementById("system-utility-summary-prompt").value=n.summarizationPrompt||"",document.getElementById("system-utility-temperature").value=n.temperature??1,document.getElementById("system-utility-topP").value=n.topP??1,o.bus.publish("ui:renderSummarizationSelector")}function pt(e){const t=o.getProject();t.globalSettings.fontFamilySelect=e,o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:applyFontSettings")}function gt(e){const t=o.getProject();t.globalSettings.apiKey=e,o.setProject(t),o.updateAndPersistState()}function yt(e){const t=o.getProject();t.globalSettings.ollamaBaseUrl=e,o.setProject(t),o.updateAndPersistState()}function ht(){const e=o.getProject();if(!e.globalSettings)return;const t=e.globalSettings.systemUtilityAgent;t.model=document.getElementById("system-utility-model-select").value,t.systemPrompt=document.getElementById("system-utility-prompt").value,t.summarizationPrompt=document.getElementById("system-utility-summary-prompt").value,t.temperature=parseFloat(document.getElementById("system-utility-temperature").value),t.topP=parseFloat(document.getElementById("system-utility-topP").value),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderSummarizationSelector")}function Ae(e){return typeof e.isDirtyForUser>"u"&&(e.isDirtyForUser=!0),e}async function ft(e,t){const n=o.getProject();n.activeEntity={type:e,name:t};const s=n.chatSessions.find(a=>a.id===n.activeSessionId);s&&(s.groupChatState&&(s.groupChatState.isRunning=!1),s.linkedEntity={...n.activeEntity},s.updatedAt=Date.now()),o.setProject(n),o.updateAndPersistState(),o.bus.publish("entity:selected",{type:e,name:t}),requestAnimationFrame(()=>{Se(e,t)})}function H(e){const t=o.getProject(),n=document.createElement("div");n.className="item session-item",e.id===t.activeSessionId&&n.classList.add("active"),e.pinned&&n.classList.add("pinned"),e.archived&&n.classList.add("archived"),n.dataset.sessionId=e.id,n.addEventListener("click",()=>{t.activeSessionId!==e.id&&o.bus.publish("session:load",{sessionId:e.id}),window.innerWidth<=1024&&Z()});const s=t.agentPresets||{};let a="❔";if(e.linkedEntity){const i=s[e.linkedEntity.name];a=e.linkedEntity?.type==="group"?"🤝":i?.icon||"🤖"}n.innerHTML=`
        <div class="item-header">
            <span class="item-name"><span class="item-icon">${a}</span>${e.pinned?"📌 ":""}${e.name}</span>
            <div class="item-actions dropdown align-right">
                <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                <div class="dropdown-content">
                    <a href="#" data-action="pin">${e.pinned?"Unpin":"Pin"}</a>
                    <a href="#" data-action="rename">Rename</a>
                    <a href="#" data-action="clone">Clone</a>
                    <a href="#" data-action="archive">${e.archived?"Unarchive":"Archive"}</a>
                    <a href="#" data-action="export">Download</a>
                    <hr>
                    <a href="#" data-action="delete">Delete</a>
                </div>
            </div>
        </div>
    `;const r=n.querySelector(".dropdown-content");return n.querySelector('[data-action="toggle-menu"]').addEventListener("click",T),r.querySelector('[data-action="pin"]').addEventListener("click",i=>o.bus.publish("session:pin",{sessionId:e.id,event:i})),r.querySelector('[data-action="rename"]').addEventListener("click",i=>o.bus.publish("session:rename",{sessionId:e.id,event:i})),r.querySelector('[data-action="clone"]').addEventListener("click",i=>o.bus.publish("session:clone",{sessionId:e.id,event:i})),r.querySelector('[data-action="archive"]').addEventListener("click",i=>o.bus.publish("session:archive",{sessionId:e.id,event:i})),r.querySelector('[data-action="export"]').addEventListener("click",i=>{i.preventDefault(),o.bus.publish("project:exportChat",{sessionId:e.id})}),r.querySelector('[data-action="delete"]').addEventListener("click",i=>o.bus.publish("session:delete",{sessionId:e.id,event:i})),n}function Y(){const e=o.getProject();if(!e)return;const t=e.chatSessions||[],n=document.getElementById("pinnedSessionList"),s=document.getElementById("sessionListContainer"),a=document.getElementById("archivedSessionList"),r=document.getElementById("archivedSessionsSection");n.innerHTML="",s.innerHTML="",a.innerHTML="";const i=t.filter(c=>c.pinned&&!c.archived).sort((c,u)=>u.updatedAt-c.updatedAt),l=t.filter(c=>c.archived).sort((c,u)=>u.updatedAt-c.updatedAt),d=t.filter(c=>!c.pinned&&!c.archived).sort((c,u)=>u.updatedAt-c.updatedAt);i.forEach(c=>n.appendChild(H(c))),d.forEach(c=>s.appendChild(H(c))),l.forEach(c=>a.appendChild(H(c))),r.classList.toggle("hidden",l.length===0)}function bt(){o.bus.subscribe("project:loaded",Y),o.bus.subscribe("session:loaded",Y),o.bus.subscribe("session:changed",Y),document.getElementById("new-chat-btn").addEventListener("click",()=>{o.bus.publish("session:new")}),console.log("Session UI Initialized.")}function vt(e,t){const s=o.getProject().activeEntity,a=document.createElement("div");return a.className="item",a.dataset.agentName=e,s&&s.type==="agent"&&s.name===e&&a.classList.add("active"),a.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">${t.icon||"🤖"}</span> ${e}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Agent">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Agent">&#128465;</button>
        </div>
    </div>`,a.addEventListener("click",r=>{r.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"agent",name:e})}),a.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("agent:edit",{agentName:e})),a.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("agent:delete",{agentName:e})),a}function K(){const e=o.getProject();if(!e||!e.agentPresets)return;const t=document.getElementById("agentPresetList");t.innerHTML="";const n=e.agentPresets;for(const s in n)t.appendChild(vt(s,n[s]))}function ke(){const e=o.getState().allProviderModels||[],t=o.getProject(),n=[document.getElementById("agent-model-select"),document.getElementById("system-utility-model-select")];if(n.some(r=>!r)||!t.globalSettings)return;const s=document.createElement("optgroup");s.label="OpenRouter";const a=document.createElement("optgroup");a.label="Ollama",e.forEach(r=>{const i=new Option(r.name,r.id);(r.provider==="openrouter"?s:a).appendChild(i)}),n.forEach(r=>{const i=r.value;if(r.innerHTML='<option value="">-- Select a Model --</option>',s.childElementCount>0&&r.appendChild(s.cloneNode(!0)),a.childElementCount>0&&r.appendChild(a.cloneNode(!0)),r.id==="system-utility-model-select")r.value=t.globalSettings.systemUtilityAgent?.model||"";else if(r.id==="agent-model-select"){const l=o.getState().editingAgentName;l&&t.agentPresets[l]?r.value=t.agentPresets[l].model:r.value=i}})}function ie(e=!1,t=null){o.setState("editingAgentName",e?t:null);const n=o.getProject(),s=o.getState().allProviderModels,a=n.globalSettings.systemUtilityAgent,r=s.find(i=>i.id===a.model);if(document.getElementById("agent-modal-title").textContent=e?`Edit Agent: ${t}`:"Create New Agent",document.getElementById("enhancer-model-name").textContent=r?.name||a.model||"Not Configured",e&&t){const i=n.agentPresets[t];if(!i){y("Agent not found.");return}document.getElementById("agent-name-input").value=t,Object.keys(M).forEach(l=>{const d=document.getElementById(l);if(d&&l!=="agent-name-input"){const c=i[M[l]];d[d.type==="checkbox"?"checked":"value"]=c!==void 0?c:""}})}else document.getElementById("agent-name-input").value="",Object.keys(M).forEach(i=>{const l=document.getElementById(i);if(l&&i!=="agent-name-input"){const d=fe[M[i]];l[l.type==="checkbox"?"checked":"value"]=d!==void 0?d:""}}),document.getElementById("enhancer-prompt-input").value="";ke(),document.getElementById("agent-editor-modal").style.display="flex"}function ce(){document.getElementById("agent-editor-modal").style.display="none",o.setState("editingAgentName",null)}function St(){o.bus.subscribe("project:loaded",K),o.bus.subscribe("agent:listChanged",K),o.bus.subscribe("models:loaded",ke),o.bus.subscribe("agent:editorShouldClose",ce),o.bus.subscribe("entity:selected",K),o.bus.subscribe("agent:profileGenerated",t=>{document.getElementById("agent-name-input").value=t.agent_name||"",document.getElementById("agent-icon-input").value=t.agent_icon||"🤖",document.getElementById("agent-system-prompt").value=t.system_prompt||"",document.getElementById("agent-temperature").value=t.temperature??1,document.getElementById("agent-topP").value=t.top_p??1}),o.bus.subscribe("agent:enhancerStatus",({text:t,color:n})=>{const s=document.getElementById("enhancer-status");s.textContent=t,s.style.color=n||"var(--text-dark)"});const e=document.querySelector("#agentPresetList")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",T);const n=e.querySelector('a[data-action="createAgent"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("agent:create")})}document.getElementById("generate-agent-profile-btn").addEventListener("click",()=>o.bus.publish("agent:generateProfile")),document.querySelector("#agent-editor-modal .modal-actions .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("agent:save")),document.querySelector("#agent-editor-modal .btn-secondary").addEventListener("click",ce),console.log("Agent UI Initialized.")}async function Et(){const e=document.getElementById("enhancer-prompt-input").value.trim();if(!e){y("Please describe the agent you want to create.","Error");return}o.bus.publish("agent:enhancerStatus",{text:"Generating profile...",color:"var(--text-dark)"});const t=o.getProject().globalSettings.systemUtilityAgent;if(!t||!t.model){o.bus.publish("agent:enhancerStatus",{text:"Error: System Utility Model not configured.",color:"var(--error-color)"});return}const n=`You are an expert in designing LLM agent profiles. Based on the user's request, create a complete agent profile. Your response MUST be a single, valid JSON object with the following keys: "agent_name" (a creative and fitting name for the agent), "agent_icon" (a single, relevant emoji for the agent), "system_prompt" (string), "temperature" (number), "top_p" (number), "top_k" (number), "presence_penalty" (number), "frequency_penalty" (number). For the parameters, choose values that are optimal for the requested task (e.g., creative tasks need higher temperature). User's Request: "${e}"`;try{const a=(await q(t,[{role:"user",content:n}])).match(/{.*}/s);if(!a)throw new Error("LLM did not return a valid JSON object.");const r=JSON.parse(a[0]);o.bus.publish("agent:profileGenerated",r),o.bus.publish("agent:enhancerStatus",{text:"Profile generated successfully!",color:"var(--success-color)"})}catch(s){console.error("Agent Profile Generation Error:",s),o.bus.publish("agent:enhancerStatus",{text:`Error: ${s.message}`,color:"var(--error-color)"})}finally{setTimeout(()=>o.bus.publish("agent:enhancerStatus",{text:""}),5e3)}}function wt(){const t=document.getElementById("agent-name-input").value.trim();if(!t){y("Please enter a name for the agent.","Error");return}const n=o.getProject(),s=o.getState().editingAgentName;if(s!==t&&n.agentPresets[t]){y(`An agent named '${t}' already exists.`,"Error");return}const a={};if(Object.keys(M).forEach(r=>{const i=M[r];if(i==="name")return;const l=document.getElementById(r);l&&(a[i]=l.type==="checkbox"?l.checked:l.type==="number"?parseFloat(l.value):l.value)}),a.icon||(a.icon="🤖"),s&&s!==t){const r=n.agentPresets[s];delete n.agentPresets[s],n.agentPresets[t]={...r,...a},n.chatSessions.forEach(i=>{i.linkedEntity?.type==="agent"&&i.linkedEntity.name===s&&(i.linkedEntity.name=t)}),Object.values(n.agentGroups).forEach(i=>{const l=i.members.indexOf(s);l>-1&&(i.members[l]=t),i.moderatorAgent===s&&(i.moderatorAgent=t)}),n.activeEntity.type==="agent"&&n.activeEntity.name===s&&(n.activeEntity.name=t)}else s?n.agentPresets[s]={...n.agentPresets[s],...a}:(a.activeMemories=[],n.agentPresets[t]=a,n.activeEntity={type:"agent",name:t});o.setProject(n),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("agent:editorShouldClose")}function Pt(e){const t=o.getProject();if(!e||Object.keys(t.agentPresets).length<=1){y("Cannot delete the last agent.","Error");return}confirm(`Are you sure you want to delete the agent '${e}'? This action cannot be undone.`)&&(delete t.agentPresets[e],Object.values(t.agentGroups).forEach(n=>{n.members=n.members.filter(s=>s!==e),n.moderatorAgent===e&&(n.moderatorAgent=n.members[0]||"")}),t.chatSessions.forEach(n=>{n.linkedEntity?.type==="agent"&&n.linkedEntity.name===e&&(n.linkedEntity={type:"agent",name:Object.keys(t.agentPresets)[0]})}),t.activeEntity.type==="agent"&&t.activeEntity.name===e&&(t.activeEntity={type:"agent",name:Object.keys(t.agentPresets)[0]}),o.setProject(t),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",t.activeEntity))}function jt(e){const n=o.getProject().activeEntity,s=document.createElement("div");return s.className="item group-item",s.dataset.groupName=e,n&&n.type==="group"&&n.name===e&&s.classList.add("active"),s.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">🤝</span> ${e}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Group">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Group">&#128465;</button>
        </div>
    </div>`,s.addEventListener("click",a=>{a.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"group",name:e})}),s.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("group:edit",{groupName:e})),s.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("group:delete",{groupName:e})),s}function U(){const e=o.getProject();if(!e||!e.agentGroups)return;const t=document.getElementById("agentGroupList");t.innerHTML="";const n=e.agentGroups;for(const s in n)t.appendChild(jt(s))}function le(e=!1,t=null){o.setState("editingGroupName",e?t:null);const n=o.getProject(),s=e?n.agentGroups[t]:null;document.getElementById("agent-group-modal-title").textContent=e?`Edit Group: ${t}`:"Create New Agent Group",document.getElementById("group-name-input").value=e?t:"";const a=document.getElementById("group-member-list");a.innerHTML="";const r=s?s.members:[],i=Object.keys(n.agentPresets),l=s?[...s.members]:[];i.forEach(d=>{l.includes(d)||l.push(d)}),l.forEach(d=>{const c=r.includes(d),u=document.createElement("div");u.className="agent-sortable-item",u.dataset.agentName=d;const m=`agent-cb-${d.replace(/\s+/g,"-")}`;u.innerHTML=`
            <input type="checkbox" id="${m}" ${c?"checked":""}>
            <label for="${m}">${d}</label>
            <span class="drag-handle">&#x2630;</span>
        `,u.querySelector('input[type="checkbox"]').addEventListener("change",()=>ue(null)),a.appendChild(u)}),window.groupSortable&&window.groupSortable.destroy(),window.groupSortable=new Sortable(a,{animation:150,handle:".drag-handle"}),ue(s?.moderatorAgent),document.getElementById("group-flow-select").value=s?.flowType||"auto-moderator",document.getElementById("group-max-turns-input").value=s?.maxTurns||4,document.getElementById("group-summarization-threshold-input").value=s?.summarizationTokenThreshold??3e3,xe(),document.getElementById("agent-group-editor-modal").style.display="flex"}function de(){window.groupSortable&&(window.groupSortable.destroy(),window.groupSortable=null),document.getElementById("agent-group-editor-modal").style.display="none",o.setState("editingGroupName",null)}function ue(e=null){const t=document.getElementById("group-moderator-select"),n=document.querySelectorAll("#group-member-list .agent-sortable-item"),s=Array.from(n).filter(r=>r.querySelector('input[type="checkbox"]').checked).map(r=>r.dataset.agentName),a=t.value;t.innerHTML='<option value="">-- Select Moderator --</option>',s.forEach(r=>{t.add(new Option(r,r))}),e&&s.includes(e)?t.value=e:s.includes(a)&&(t.value=a)}function xe(){const e=document.getElementById("group-flow-select"),t=document.getElementById("max-turns-group");t.style.display=e.value==="auto-moderator"?"none":"block"}function It(){o.bus.subscribe("project:loaded",U),o.bus.subscribe("group:listChanged",U),o.bus.subscribe("agent:listChanged",U),o.bus.subscribe("entity:selected",U),o.bus.subscribe("group:editorShouldClose",de);const e=document.querySelector("#agentGroupList")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",T);const n=e.querySelector('a[data-action="createGroup"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("group:create")})}document.querySelector("#agent-group-editor-modal .btn-secondary").addEventListener("click",de),document.querySelector("#agent-group-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("group:save")),document.getElementById("group-flow-select").addEventListener("change",xe),console.log("Group UI Initialized.")}function Lt(){const e=document.getElementById("group-name-input").value.trim(),t=o.getState().editingGroupName;if(!e){y("Please enter a name for the group.","Error");return}const n=o.getProject();if(e!==t&&n.agentGroups[e]){y("A group with this name already exists.","Error");return}const s=window.groupSortable,a=s?s.toArray():[],r=new Set(Array.from(document.querySelectorAll('#group-member-list input[type="checkbox"]:checked')).map(c=>c.closest(".agent-sortable-item").dataset.agentName)),i=a.filter(c=>r.has(c));if(i.length===0){y("A group must have at least one member.","Error");return}const l=document.getElementById("group-moderator-select").value;if(!l||!i.includes(l)){y("Please select a valid moderator from the group members.","Error");return}const d={members:i,moderatorAgent:l,flowType:document.getElementById("group-flow-select").value,maxTurns:parseInt(document.getElementById("group-max-turns-input").value,10)||4,summarizationTokenThreshold:parseInt(document.getElementById("group-summarization-threshold-input").value,10)??3e3};t&&t!==e&&(delete n.agentGroups[t],n.chatSessions.forEach(c=>{c.linkedEntity?.type==="group"&&c.linkedEntity.name===t&&(c.linkedEntity.name=e)}),n.activeEntity.type==="group"&&n.activeEntity.name===t&&(n.activeEntity.name=e)),n.agentGroups[e]=d,o.setProject(n),o.updateAndPersistState(),o.bus.publish("group:listChanged"),n.activeEntity.type==="group"&&o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("group:editorShouldClose")}function Ct(e){if(e&&confirm(`Are you sure you want to delete the group '${e}'?`)){const t=o.getProject();delete t.agentGroups[e],t.chatSessions.forEach(n=>{n.linkedEntity?.type==="group"&&n.linkedEntity.name===e&&(n.linkedEntity={type:"agent",name:Object.keys(t.agentPresets)[0]})}),t.activeEntity.type==="group"&&t.activeEntity.name===e&&(t.activeEntity={type:"agent",name:Object.keys(t.agentPresets)[0]}),o.setProject(t),o.updateAndPersistState(),o.bus.publish("group:listChanged"),o.bus.publish("entity:selected",t.activeEntity)}}let J=null;function me(e,t){const n=o.getProject(),s=document.createElement("div");s.className="item memory-item",t||s.classList.add("inactive"),s.dataset.name=e.name;const a=n.memories.findIndex(r=>r.name===e.name);return s.innerHTML=`
        <div class="item-header">
            <div class="memory-toggle ${t?"active":""}"></div>
            <span class="item-name">${e.name}</span>
            <div class="item-actions">
                <div class="dropdown align-right">
                    <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                    <div class="dropdown-content">
                        <a href="#" data-action="edit">&#9998; Edit</a>
                        <a href="#" data-action="delete">&#128465; Delete</a>
                    </div>
                </div>
            </div>
        </div>`,s.querySelector(".memory-toggle").addEventListener("click",r=>o.bus.publish("memory:toggle",{name:e.name,event:r})),s.querySelector('[data-action="toggle-menu"]').addEventListener("click",T),s.querySelector('[data-action="edit"]').addEventListener("click",r=>o.bus.publish("memory:edit",{index:a,event:r})),s.querySelector('[data-action="delete"]').addEventListener("click",r=>o.bus.publish("memory:delete",{index:a,event:r})),s}function $(){const e=o.getProject();if(!e)return;const t=document.getElementById("memories-container"),n=document.getElementById("activeMemoriesList"),s=document.getElementById("inactiveMemoriesList"),a=document.getElementById("inactiveMemoriesSection");n.innerHTML="",s.innerHTML="";let r=null;if(e.activeEntity?.type==="agent"&&e.agentPresets&&e.agentPresets[e.activeEntity.name])t.style.display="block",r=e.agentPresets[e.activeEntity.name];else{t.style.display="none";return}if(!r||!e.memories){t.style.display="none";return}const i=r.activeMemories||[],l=e.memories.map(u=>u.name),d=i.filter(u=>l.includes(u));d.length!==i.length&&(r.activeMemories=d);const c=l.filter(u=>!d.includes(u));d.forEach(u=>{const m=e.memories.find(p=>p.name===u);m&&n.appendChild(me(m,!0))}),c.forEach(u=>{const m=e.memories.find(p=>p.name===u);m&&s.appendChild(me(m,!1))}),a.classList.toggle("hidden",c.length===0),J&&J.destroy(),J=new Sortable(n,{animation:150,onEnd:u=>{const m=o.getProject().agentPresets[o.getProject().activeEntity.name];if(!m)return;const p=u.item.dataset.name;m.activeMemories.splice(u.oldDraggableIndex,1),m.activeMemories.splice(u.newDraggableIndex,0,p),o.updateAndPersistState(),$()}})}function pe(e=null,t){t&&t.stopPropagation();const n=o.getProject(),s=document.getElementById("memory-editor-modal");if(e!==null&&n.memories[e]){const a=n.memories[e];document.getElementById("memory-modal-title").textContent="Edit Memory",document.getElementById("memory-name-input").value=a.name,document.getElementById("memory-content-input").value=a.content,document.getElementById("memory-edit-index").value=e}else document.getElementById("memory-modal-title").textContent="Create New Memory",document.getElementById("memory-name-input").value="",document.getElementById("memory-content-input").value="",document.getElementById("memory-edit-index").value="";s.style.display="flex"}function ge(){document.getElementById("memory-editor-modal").style.display="none"}function At(){o.bus.subscribe("project:loaded",$),o.bus.subscribe("memory:listChanged",$),o.bus.subscribe("entity:selected",$),o.bus.subscribe("memory:editorShouldClose",ge);const e=document.querySelector("#memories-container")?.closest("details.collapsible-section");if(e){const t=e.querySelector(".section-header .dropdown button");t&&t.addEventListener("click",T);const n=e.querySelector(".dropdown-content");n&&(n.querySelector('a[data-action="createMemory"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:create")}),n.querySelector('a[data-action="exportMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:exportPackage")}),n.querySelector('a[data-action="importMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:importPackage")}))}document.getElementById("load-memory-package-input").addEventListener("change",t=>{o.bus.publish("memory:fileSelectedForImport",t)}),document.querySelector("#memory-editor-modal .btn-secondary").addEventListener("click",ge),document.querySelector("#memory-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>{o.bus.publish("memory:save")}),console.log("Memory UI Initialized.")}function kt(e,t){t&&t.stopPropagation();const n=o.getProject();if(n.activeEntity.type!=="agent")return;const s=n.agentPresets[n.activeEntity.name];if(!s)return;s.activeMemories=s.activeMemories||[];const a=s.activeMemories.indexOf(e);a>-1?s.activeMemories.splice(a,1):s.activeMemories.push(e),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}function xt(){const e=document.getElementById("memory-name-input").value.trim(),t=document.getElementById("memory-content-input").value.trim(),n=document.getElementById("memory-edit-index").value;if(!e||!t){y("Please fill in all fields.");return}const s=o.getProject(),a=n!==""?parseInt(n,10):-1;if(s.memories.some((i,l)=>i.name===e&&l!==a)){y("A memory with this name already exists.");return}a!==-1?s.memories[a]={...s.memories[a],name:e,content:t}:s.memories.push({name:e,content:t}),o.setProject(s),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("memory:editorShouldClose")}function Mt(e,t){t&&t.stopPropagation();const n=o.getProject();if(n.memories[e]&&confirm(`Are you sure you want to delete the memory '${n.memories[e].name}'?`)){const s=n.memories[e].name;n.memories.splice(e,1),Object.values(n.agentPresets).forEach(a=>{if(a.activeMemories){const r=a.activeMemories.indexOf(s);r>-1&&a.activeMemories.splice(r,1)}}),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}}function Bt(){try{const e=o.getProject(),t={memories:e.memories,agentPresets:e.agentPresets},n=JSON.stringify(t,null,2),s=new Blob([n],{type:"application/json"}),a=URL.createObjectURL(s),r=document.createElement("a");r.style.display="none",r.href=a,r.download=`promptprim_agent_package_${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(a)}catch(e){y("Error saving agent package."),console.error(e)}}function Tt(e){const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=s=>{try{const a=JSON.parse(s.target.result);if(a&&Array.isArray(a.memories)&&typeof a.agentPresets=="object"){const r=o.getProject(),i=new Set(r.memories.map(d=>d.name)),l=a.memories.filter(d=>!i.has(d.name));r.memories.push(...l),Object.assign(r.agentPresets,a.agentPresets),o.setProject(r),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("agent:listChanged"),y("Agent package loaded successfully!")}else throw new Error("Invalid JSON format for agent package.")}catch(a){y(`Error loading agent package: ${a.message}`),console.error(a)}},n.readAsText(t),e.target.value=""}function Dt(){const t=document.getElementById("system-utility-summary-preset-select").value;if(t==="custom")return;const s=o.getProject().globalSettings.summarizationPromptPresets;if(s&&s[t]){const a=s[t];document.getElementById("system-utility-summary-prompt").value=a,o.bus.publish("settings:systemAgentChanged")}}function Ot(){const e=document.getElementById("system-utility-summary-prompt").value.trim();if(!e){y("Prompt template cannot be empty.","Error");return}const t=prompt("Enter a name for this new preset:","");if(!t||!t.trim())return;const n=o.getProject(),s=t.trim();n.globalSettings.summarizationPromptPresets[s]&&!confirm(`A preset named '${s}' already exists. Do you want to overwrite it?`)||(n.globalSettings.summarizationPromptPresets[s]=e,o.setProject(n),o.updateAndPersistState().then(()=>{o.bus.publish("ui:renderSummarizationSelector"),document.getElementById("system-utility-summary-preset-select").value=s,y(`Preset '${s}' saved successfully!`,"Success")}))}let j=[];function W(e){return Math.ceil((e||"").length/3)}function Me(e){const t=o.getProject();if(!t.agentPresets||!e)return"";const n=t.agentPresets[e];if(!n)return"";const s=n.systemPrompt||"",a=n.activeMemories||[],r=t.memories.filter(l=>a.includes(l.name)).map(l=>l.content).join(`
`);let i=s;return r&&(i+=`

--- Active Memories ---
`+r),i.trim()}function Nt(e,t,n){const s=[],a=o.getProject(),r=o.getState().allProviderModels,i=Me(t);i&&s.push({role:"system",content:i});let l=[...e];if(n?.summaryState?.activeSummaryId){const m=a.summaryLogs.find(p=>p.id===n.summaryState.activeSummaryId);if(m){const p=`[This is a loaded summary to provide context for the following conversation. SUMMARY CONTENT: ${m.content}]`;s.push({role:"system",content:p}),l=e.slice(n.summaryState.summarizedUntilIndex)}}const d=a.agentPresets[t];if(!d)return s;const c=r.find(m=>m.id===d.model),u=c?c.provider:null;return l.forEach(m=>{if(m.role==="system")return;let p={role:m.role};if(m.speaker&&m.role==="assistant"&&(p.name=m.speaker.replace(/\s+/g,"_")),typeof m.content=="string")p.content=m.content;else if(Array.isArray(m.content))if(u==="ollama"){const g=m.content.find(h=>h.type==="text"),v=m.content.find(h=>h.type==="image_url");g&&(p.content=g.text),v&&v.url&&(p.images=[v.url.split(",")[1]])}else p.content=m.content.map(g=>g.type==="image_url"?{type:"image_url",image_url:{url:g.url}}:g);s.push(p)}),s}async function se(e=!1){const t=o.getProject();if(!t.activeEntity){y("Please select an agent or group first.","Error");return}const{type:n}=t.activeEntity,s=t.chatSessions.find(a=>a.id===t.activeSessionId);if(s){if(s.groupChatState?.isRunning){R();return}n==="group"?y("Group chat functionality is being refactored.","Info"):await Ut(e)}}async function Ut(e=!1){const t=o.getProject(),n=t.chatSessions.find(d=>d.id===t.activeSessionId);if(!n)return;const s=document.getElementById("chatInput"),a=s.value.trim();if(!e){if(!a&&j.length===0)return;let d=[];a&&d.push({type:"text",text:a}),j.forEach(c=>d.push({type:"image_url",url:c.data})),n.history.push({role:"user",content:d.length===1&&d[0].type==="text"?d[0].text:d}),s.value="",s.style.height="auto",j=[],o.bus.publish("ui:renderFilePreviews",j)}o.bus.publish("ui:renderChatMessages");const r=t.activeEntity.name,i=t.agentPresets[r];if(!i||!i.model){y("Please select an agent with a configured model.","Error");return}o.setLoading(!0),o.bus.publish("ui:showLoadingIndicator"),o.newAbortController();const l=n.history.length;n.history.push({role:"assistant",content:"...",speaker:r}),o.bus.publish("ui:addMessage",{role:"assistant",content:"",index:l,speakerName:r,isLoading:!0});try{const d=Nt(n.history.slice(0,-1),r,n),c=document.querySelector(`.message[data-index='${l}'] .message-content`),u=await $e(c,i,d,r);n.history[l]={role:"assistant",content:u,speaker:r},n.name==="New Chat"&&n.history.length<=2&&!e&&await qe(n.history)}catch(d){if(d.name!=="AbortError"){const c=`Error: ${d.message}`;n.history[l].content=c,y(c,"API Error")}else n.history.splice(l,1)}finally{R(),await I(w,"readwrite","put",n),o.bus.publish("ui:renderChatMessages"),o.bus.publish("project:persistRequired")}}function R(){const e=o.getProject(),t=e.chatSessions.find(n=>n.id===e.activeSessionId);t?.groupChatState&&(t.groupChatState.isRunning=!1),o.abort(),o.setLoading(!1),o.bus.publish("ui:hideLoadingIndicator"),o.bus.publish("status:update",{message:"Ready",state:"connected"})}function $t(e){const t=e.target.files;if(t){for(const n of t){const s=`file_${Date.now()}_${Math.random()}`,a={id:s,name:n.name,type:n.type,data:null};j.push(a);const r=new FileReader;r.onload=i=>{const l=j.findIndex(d=>d.id===s);l!==-1&&(j[l].data=i.target.result,o.bus.publish("ui:renderFilePreviews",j))},r.readAsDataURL(n)}e.target.value=""}}async function qt(e){o.bus.publish("status:update",{message:"Summarizing...",state:"loading"});const t=o.getProject(),n=t.globalSettings.systemUtilityAgent;if(!n||!n.model){y("System Utility Model for summarization is not configured in settings.","Error"),o.bus.publish("status:update",{message:"Summarization failed",state:"error"});return}const s=e.summaryState?.summarizedUntilIndex||0,a=e.history.slice(s);if(a.length<2){y("Not enough new messages to create a meaningful summary.","Info"),o.bus.publish("status:update",{message:"Ready",state:"connected"});return}try{o.bus.publish("status:update",{message:"Generating summary title...",state:"loading"});const r=`Based on the following conversation, create a very short, descriptive title (5-7 words). Respond with ONLY the title text, nothing else.

CONVERSATION:
${a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`)}`,i=await q(n,[{role:"user",content:r}]);o.bus.publish("status:update",{message:"Generating summary content...",state:"loading"});const l=e.summaryState?.activeSummaryId&&t.summaryLogs.find(g=>g.id===e.summaryState.activeSummaryId)?.content||"This is the beginning of the conversation.",d=n.summarizationPrompt||Q.summarizationPrompt,c=a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`),u=d.replace(/\$\{previousSummary\}/g,l).replace(/\$\{newMessages\}/g,c),m=await q(n,[{role:"user",content:u}]),p={id:`sum_${Date.now()}`,summary:i.trim().replace(/"/g,""),content:m,timestamp:Date.now(),sourceSessionId:e.id,summarizedUntilIndex:e.history.length};t.summaryLogs||(t.summaryLogs=[]),t.summaryLogs.push(p),e.summaryState={activeSummaryId:p.id,summarizedUntilIndex:p.summarizedUntilIndex},e.history.push({role:"system",content:`[ System: Conversation summarized under the title: "${p.summary}" ]`}),await I(w,"readwrite","put",e),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged"),y("Conversation summarized successfully!","Success")}catch(r){console.error("Failed to summarize history:",r),y(`Summarization Failed: ${r.message}`,"Error")}finally{o.bus.publish("status:update",{message:"Ready",state:"connected"})}}async function Ft(){const e=o.getProject(),t=e.chatSessions.find(n=>n.id===e.activeSessionId);if(!t){y("No active session found.","Error");return}confirm("Do you want to use the System Utility Agent to summarize this conversation?")&&await qt(t)}async function zt(e){const t=o.getProject(),n=t.chatSessions.find(r=>r.id===t.activeSessionId),s=t.summaryLogs.find(r=>r.id===e);if(!n||!s)return;n.summaryState.activeSummaryId=s.id,n.summaryState.summarizedUntilIndex=n.history.length;const a={role:"system",content:`[ System: Context loaded from summary: "${s.summary}" ]`};n.history.push(a),await I(w,"readwrite","put",n),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function _t(){const e=o.getProject(),t=e.chatSessions.find(s=>s.id===e.activeSessionId);if(!t||!t.summaryState?.activeSummaryId)return;t.summaryState.activeSummaryId=null;const n={role:"system",content:"[ System: Summary context cleared. Conversation will now proceed using full history. ]"};t.history.push(n),await I(w,"readwrite","put",t),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function Rt(e){if(!confirm("Are you sure you want to permanently delete this summary log? This cannot be undone."))return;const t=o.getProject(),n=t.summaryLogs.findIndex(s=>s.id===e);n>-1&&(t.summaryLogs.splice(n,1),t.chatSessions.forEach(s=>{if(s.summaryState?.activeSummaryId===e&&(s.summaryState.activeSummaryId=null,s.id===t.activeSessionId)){const a={role:"system",content:"[ System: The active summary was deleted. Context has been cleared. ]"};s.history.push(a),o.bus.publish("ui:renderChatMessages")}}),o.setProject(t),await o.updateAndPersistState(),o.bus.publish("summary:listChanged"))}async function Gt(e,t){t&&t.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);if(!s)return;const a=s.history[e];if(!a)return;let r="";typeof a.content=="string"?r=a.content:Array.isArray(a.content)&&(r=a.content.find(i=>i.type==="text")?.text||"");try{await navigator.clipboard.writeText(r),y("Copied to clipboard!")}catch(i){console.error("Failed to copy message:",i),y("Failed to copy message.","Error")}}async function Ht(e){const t=o.getProject(),n=t.chatSessions.find(d=>d.id===t.activeSessionId);if(!n)return;const s=n.history[e],a=document.querySelector(`.message[data-index='${e}']`);if(!a||s.role==="user"&&a.classList.contains("is-editing"))return;const r=a.querySelector(".message-content"),i=a.querySelector(".message-actions"),l=i?i.querySelector('button[title="Edit"], button[title="Save Changes"]'):null;if(s.role==="user"){r.style.display="none",a.classList.add("is-editing");const d=document.createElement("div");d.className="inline-edit-container";const c=document.createElement("textarea");c.className="inline-edit-textarea",c.value=typeof s.content=="string"?s.content:s.content.find(h=>h.type==="text")?.text||"";const u=document.createElement("div");u.className="inline-edit-actions";const m=document.createElement("button");m.textContent="Save & Submit",m.className="btn btn-small";const p=document.createElement("button");p.textContent="Cancel",p.className="btn btn-small btn-secondary",u.appendChild(p),u.appendChild(m),d.appendChild(c),d.appendChild(u),a.appendChild(d),c.focus(),c.style.height="auto",c.style.height=c.scrollHeight+"px";const g=()=>{d.remove(),r.style.display="block",a.classList.remove("is-editing")},v=()=>{const h=c.value.trim();n.history.splice(e),document.getElementById("chatInput").value=h,o.bus.publish("ui:renderChatMessages"),se()};m.onclick=v,p.onclick=g,c.onkeydown=h=>{h.key==="Enter"&&!h.shiftKey?(h.preventDefault(),v()):h.key==="Escape"&&g()}}else if(s.role==="assistant")if(r.isContentEditable){r.contentEditable=!1;const c=r.innerHTML;n.history[e].content=c;try{await I(w,"readwrite","put",n),o.bus.publish("ui:renderChatMessages")}catch(u){console.error("Failed to save assistant message:",u),y("Error saving changes. Please try again.","Save Failed"),r.contentEditable=!0}}else a.classList.add("is-editing"),r.contentEditable=!0,r.style.border="1px solid var(--primary-color)",r.style.padding="5px",r.style.borderRadius="5px",r.focus(),l&&(l.innerHTML="&#10003;",l.title="Save Changes"),r.onkeydown=async c=>{c.key==="Escape"&&(c.preventDefault(),r.contentEditable=!1,o.bus.publish("ui:renderChatMessages"))}}function Yt(e){const t=o.getProject(),n=t.chatSessions.find(a=>a.id===t.activeSessionId);if(!n||e>=n.history.length)return;R();let s=-1;for(let a=e;a>=0;a--)if(n.history[a].role==="user"){s=a;break}s!==-1&&(n.history.splice(s+1),o.bus.publish("ui:renderChatMessages"),se(!0))}function Kt(e){if(!confirm("Are you sure? This will delete this message and all subsequent messages in this chat."))return;const t=o.getProject(),n=t.chatSessions.find(s=>s.id===t.activeSessionId);n&&(n.history.splice(e),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"))}function Be(e){e.querySelectorAll("pre").forEach(n=>{if(n.parentNode.classList.contains("code-block-wrapper"))return;const s=document.createElement("div");s.className="code-block-wrapper",n.parentNode.insertBefore(s,n),s.appendChild(n);const a=document.createElement("button");a.className="copy-code-btn",a.textContent="Copy",s.appendChild(a),a.addEventListener("click",r=>{r.stopPropagation();const i=n.querySelector("code");i&&navigator.clipboard.writeText(i.textContent).then(()=>{a.textContent="Copied!",setTimeout(()=>{a.textContent="Copy"},2e3)})})})}function Jt(){const e=document.querySelector(".main-chat-area"),t=document.getElementById("chatMessages"),n=document.getElementById("status-panel");if(!e||!t||!n){console.warn("Mobile scroll behavior cannot be initialized: Elements not found.");return}let s=0;const a=10,r=40;t.dataset.scrollListenerAttached||(t.dataset.scrollListenerAttached="true",t.addEventListener("scroll",()=>{if(e.classList.contains("no-autohide"))return;if(window.innerWidth>768){e.classList.add("header-visible"),n.classList.remove("is-collapsed");return}let i=t.scrollTop;if(t.scrollHeight-i-t.clientHeight<r){e.classList.contains("header-visible")&&(e.classList.remove("header-visible"),n.classList.add("is-collapsed")),s=i;return}Math.abs(i-s)<=a||(i>s?(e.classList.remove("header-visible"),n.classList.add("is-collapsed")):(e.classList.add("header-visible"),n.classList.remove("is-collapsed")),s=i<=0?0:i)},{passive:!0}))}function V(){const e=o.getProject();if(!e||!e.chatSessions)return;const t=document.getElementById("chatMessages");t.innerHTML="";const n=e.chatSessions.find(a=>a.id===e.activeSessionId);n&&n.history.forEach((a,r)=>Te(a.role,a.content,r,a.speaker)),z();const s=document.getElementById("clear-summary-btn");if(s){const a=n?.summaryState?.activeSummaryId;s.style.display=a?"block":"none"}setTimeout(()=>{const a=document.querySelector(".main-chat-area"),r=document.getElementById("status-panel");if(!a||!r)return;t.scrollHeight>t.clientHeight?(a.classList.remove("no-autohide"),t.scrollTop<10?(a.classList.add("header-visible"),r.classList.remove("is-collapsed")):(a.classList.remove("header-visible"),r.classList.add("is-collapsed"))):(a.classList.add("no-autohide"),a.classList.add("header-visible"),r.classList.remove("is-collapsed"))},0)}function Te(e,t,n,s=null,a=!1){const r=o.getProject(),i=document.getElementById("chatMessages"),l=document.createElement("div");l.className=`message-turn-wrapper ${e}-turn`;const d=document.createElement("div");d.className=`message ${e}`,d.dataset.index=n;const c=document.createElement("div");c.className="message-content";const u=r.agentPresets?.[s],m=u?u.icon:e==="user"?"🧑":"🤖";if(e==="assistant"||e==="user"&&s){const g=document.createElement("div");g.className="speaker-label-wrapper",g.innerHTML=`<span class="speaker-label">${m} ${s||"User"}</span>`,l.appendChild(g)}const p=document.createElement("span");if(p.className="streaming-content",a)p.innerHTML='<div class="loading"><div class="loading-dot"></div><div class="loading-dot"></div><div class="loading-dot"></div></div>';else{const v=(r.activeEntity.type==="agent"?r.agentPresets[r.activeEntity.name]:r.agentPresets[s]||{})?.useMarkdown!==!1;(Array.isArray(t)?t:[{type:"text",text:t}]).forEach(S=>{if(S.type==="text")if(e==="assistant"&&v&&window.marked)p.innerHTML+=marked.parse(S.text||"");else{const b=document.createTextNode(S.text||"");p.appendChild(b)}else if(S.type==="image_url"&&S.url){const b=document.createElement("img");b.src=S.url,b.className="multimodal-image",p.appendChild(b)}})}if(c.appendChild(p),a||(c.querySelectorAll("pre code").forEach(g=>hljs.highlightElement(g)),Be(c)),d.appendChild(c),!a&&e!=="system"){const g=document.createElement("div");g.className="message-actions";const v=(h,S,b)=>{const P=document.createElement("button");return P.innerHTML=h,P.title=S,P.addEventListener("click",L=>{o.bus.publish(b,{index:n,event:L})}),P};g.appendChild(v("&#9998;","Edit","chat:editMessage")),g.appendChild(v("&#128203;","Copy","chat:copyMessage")),e==="assistant"&&g.appendChild(v("&#x21bb;","Regenerate","chat:regenerate")),g.appendChild(v("&#128465;","Delete","chat:deleteMessage")),d.appendChild(g)}return l.appendChild(d),i.appendChild(l),i.scrollTop=i.scrollHeight,d}function De(e){const t=document.getElementById("file-preview-container");if(t.innerHTML="",!e||e.length===0){t.style.display="none";return}t.style.display="grid",e.forEach((n,s)=>{const a=document.createElement("div");a.className="file-preview-item";let r="";n.type.startsWith("image/")?r=`<img src="${n.data||""}" class="file-preview-thumbnail" alt="${n.name}">`:r='<div class="file-preview-thumbnail file-icon">📄</div>',a.innerHTML=`${r}<span class="file-preview-name">${n.name}</span><button class="remove-file-btn">&times;</button>`,a.querySelector(".remove-file-btn").addEventListener("click",()=>{o.bus.publish("chat:removeFile",{index:s})}),t.appendChild(a)})}function z(e=!1){const t=o.getProject();if(!t||!t.activeEntity)return;const{type:n,name:s}=t.activeEntity;let a,r;if(n==="agent")r=s,a=t.agentPresets[s];else if(n==="group"){r=s+" (Group)";const p=t.agentGroups[s];a=t.agentPresets[p?.moderatorAgent]||{}}if(!a)return;const i=Me(n==="agent"?s:t.agentGroups[s]?.moderatorAgent),l=W(i),d=t.chatSessions?.find(p=>p.id===t.activeSessionId);let c=0;d&&(c=W(JSON.stringify(d.history)));const u=W(document.getElementById("chatInput").value),m=l+c+u;document.getElementById("active-agent-status").textContent=`Active: ${a.icon||""} ${r}`,document.getElementById("token-count-status").textContent=`~${m.toLocaleString()} Tokens`,e&&(document.getElementById("inspector-agent-name").textContent=r,document.getElementById("inspector-agent-model").textContent=a.model||"N/A",document.getElementById("inspector-token-count").textContent=`~${m.toLocaleString()}`,document.getElementById("inspector-system-prompt").textContent=i||"(No system prompt or memories active)")}function Wt(){z(!0),document.getElementById("context-inspector-modal").style.display="flex"}function Vt(){document.getElementById("context-inspector-modal").style.display="none"}function Xt(){o.bus.subscribe("session:loaded",V),o.bus.subscribe("session:titleChanged",a=>{document.getElementById("chat-title").textContent=a}),o.bus.subscribe("ui:renderChatMessages",V),o.bus.subscribe("ui:addMessage",a=>{Te(a.role,a.content,a.index,a.speakerName,a.isLoading),V()}),o.bus.subscribe("ui:renderFilePreviews",De),o.bus.subscribe("ui:showLoadingIndicator",()=>{document.getElementById("sendBtn").classList.add("hidden"),document.getElementById("stopBtn").classList.remove("hidden")}),o.bus.subscribe("ui:hideLoadingIndicator",()=>{document.getElementById("sendBtn").classList.remove("hidden"),document.getElementById("stopBtn").classList.add("hidden")}),o.bus.subscribe("entity:selected",z),o.bus.subscribe("ui:enhanceCodeBlocks",Be);const e=document.getElementById("chatInput");e.addEventListener("keydown",a=>{a.key==="Enter"&&!a.shiftKey&&!(a.metaKey||a.ctrlKey)&&(a.preventDefault(),o.bus.publish("chat:sendMessage"))}),e.addEventListener("input",()=>{e.style.height="auto",e.style.height=e.scrollHeight+"px",z()}),document.getElementById("sendBtn").addEventListener("click",()=>o.bus.publish("chat:sendMessage")),document.getElementById("stopBtn").addEventListener("click",()=>o.bus.publish("chat:stopGeneration")),document.getElementById("context-inspector-trigger-btn").addEventListener("click",Wt),document.querySelector("#context-inspector-modal .btn-secondary").addEventListener("click",Vt);const t=document.getElementById("chat-actions-container");document.getElementById("chat-actions-btn").addEventListener("click",a=>{a.stopPropagation(),t.classList.toggle("open")});const s=(a,r)=>{const i=document.getElementById(a);i&&i.addEventListener("click",l=>{l.preventDefault(),l.stopPropagation(),r(l),t.classList.remove("open")})};s("manual-summarize-btn",()=>o.bus.publish("chat:summarize")),s("clear-summary-btn",()=>o.bus.publish("chat:clearSummary")),s("menu-upload-file-btn",()=>document.getElementById("file-input").click()),document.getElementById("file-input").addEventListener("change",a=>o.bus.publish("chat:fileUpload",a)),Jt(),console.log("Chat UI Initialized.")}function Zt(e){const t=document.createElement("div");t.className="summary-log-item",t.dataset.logId=e.id;const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);s&&s.summaryState?.activeSummaryId===e.id&&t.classList.add("active");const r=new Date(e.timestamp).toLocaleTimeString("th-TH",{hour:"2-digit",minute:"2-digit"});return t.innerHTML=`
        <div class="summary-log-item-header">
            <span class="summary-log-item-title" title="${e.summary}">${e.summary}</span>
            <div class="summary-log-item-actions">
                <button class="btn-icon btn-small" data-action="load" title="Load as context">&#11139;</button>
                <button class="btn-icon btn-small" data-action="view" title="View content">&#128269;</button>
                <button class="btn-icon btn-small danger" data-action="delete" title="Delete summary">&#128465;</button>
            </div>
        </div>
        <div class="summary-log-item-meta">
            <span>${r}</span>
        </div>
    `,t.querySelector('[data-action="load"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:load",{logId:e.id})}),t.querySelector('[data-action="view"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:view",{logId:e.id})}),t.querySelector('[data-action="delete"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:delete",{logId:e.id})}),t}function X(){const e=o.getProject();if(!e||!e.summaryLogs)return;const t=document.getElementById("summaryLogList");t.innerHTML="";const n=e.summaryLogs.reduce((a,r)=>{const i=r.sourceSessionId,l=e.chatSessions.find(d=>d.id===i);return a[i]||(a[i]={name:l?l.name:"Unknown Session",logs:[]}),a[i].logs.push(r),a},{}),s=e.activeSessionId;if(Object.keys(n).length===0){t.innerHTML='<p class="no-logs-message">No summaries yet.</p>';return}for(const a in n){const r=n[a],i=r.logs.sort((c,u)=>u.timestamp-c.timestamp),l=document.createElement("details");l.className="summary-group";const d=document.createElement("summary");d.textContent=`For: ${r.name}`,l.appendChild(d),i.forEach(c=>{l.appendChild(Zt(c))}),a===s&&i.length>0&&(l.open=!0),t.appendChild(l)}}function Qt(e){const n=o.getProject().summaryLogs.find(s=>s.id===e);n&&(document.getElementById("view-summary-title").textContent=n.summary,document.getElementById("view-summary-content").textContent=n.content,document.getElementById("view-summary-modal").style.display="flex")}function en(){document.getElementById("view-summary-modal").style.display="none"}function tn(){o.bus.subscribe("project:loaded",X),o.bus.subscribe("session:loaded",X),o.bus.subscribe("summary:listChanged",X),document.querySelector("#view-summary-modal .btn-secondary").addEventListener("click",en),console.log("Summary UI Initialized.")}function nn(){const e=o.bus,t=(a,r,i,l=d=>d.target.value)=>{const d=document.getElementById(a);d?d.addEventListener(r,c=>{e.publish(i,l(c))}):console.warn(`Settings element not found: #${a}`)};t("fontFamilySelect","change","settings:fontChanged");const n=document.getElementById("theme-switcher");n&&n.addEventListener("change",a=>{a.target.name}),t("apiKey","change","settings:apiKeyChanged"),t("ollamaBaseUrl","change","settings:ollamaUrlChanged"),t("load-models-btn","click","api:loadModels",()=>{}),["system-utility-model-select","system-utility-prompt","system-utility-summary-prompt","system-utility-temperature","system-utility-topP"].forEach(a=>{const r=document.getElementById(a);r&&r.addEventListener("change",()=>e.publish("settings:systemAgentChanged"))}),t("system-utility-summary-preset-select","change","settings:summaryPresetChanged"),t("save-summary-preset-btn","click","settings:saveSummaryPreset",()=>{}),console.log("Settings UI Initialized and Listeners Attached.")}function sn(e,t){let n;return function(...a){const r=()=>{clearTimeout(n),e(...a)};clearTimeout(n),n=setTimeout(r,t)}}async function on(){try{marked.setOptions({highlight:function(e,t){const n=hljs.getLanguage(t)?t:"plaintext";return hljs.highlight(e,{language:n}).value},gfm:!0,breaks:!0}),cn(),Je(),Ze(),bt(),St(),It(),At(),Xt(),tn(),nn(),rn(),an()}catch(e){console.error("Critical initialization failed:",e),y(`An unexpected error occurred during startup: ${e.message}. Please try clearing website data and reloading.`,"Fatal Error")}}function an(){document.addEventListener("click",e=>{document.querySelectorAll(".dropdown.open").forEach(a=>{if(!a.contains(e.target)){a.classList.remove("open");const r=a.closest(".item");r&&r.classList.remove("z-index-front")}});const n=document.getElementById("custom-entity-selector-wrapper");n&&n.classList.contains("open")&&!n.contains(e.target)&&n.classList.remove("open");const s=document.getElementById("chat-actions-container");s&&s.classList.contains("open")&&!s.contains(e.target)&&s.classList.remove("open")})}function rn(){const e=o.bus,t=sn(async()=>{o.isAutoSaveDirty()&&(console.log("[AutoSave] Debounced save triggered."),await ne()&&o.setAutoSaveDirty(!1))},1500);e.subscribe("autosave:required",t),e.subscribe("project:new",rt),e.subscribe("project:open",()=>document.getElementById("load-project-input").click()),e.subscribe("project:fileSelectedForOpen",n=>it(n)),e.subscribe("project:save",n=>je(n)),e.subscribe("project:saveConfirm",({projectName:n})=>Ie(n)),e.subscribe("project:unsavedChangesChoice",n=>ct(n)),e.subscribe("project:exportChat",({sessionId:n})=>ot(n)),e.subscribe("api:loadModels",be),e.subscribe("settings:fontChanged",pt),e.subscribe("settings:apiKeyChanged",gt),e.subscribe("settings:ollamaUrlChanged",yt),e.subscribe("settings:systemAgentChanged",ht),e.subscribe("settings:summaryPresetChanged",Dt),e.subscribe("settings:saveSummaryPreset",Ot),e.subscribe("entity:select",({type:n,name:s})=>ft(n,s)),e.subscribe("session:new",_),e.subscribe("session:load",({sessionId:n})=>D(n)),e.subscribe("session:rename",({sessionId:n,event:s,newName:a})=>re(n,s,a)),e.subscribe("session:clone",({sessionId:n,event:s})=>nt(n,s)),e.subscribe("session:archive",({sessionId:n,event:s})=>st(n,s)),e.subscribe("session:pin",({sessionId:n,event:s})=>tt(n,s)),e.subscribe("session:delete",({sessionId:n,event:s})=>et(n,s)),e.subscribe("session:autoRename",({sessionId:n,newName:s})=>re(n,null,s)),e.subscribe("agent:create",()=>ie(!1)),e.subscribe("agent:edit",({agentName:n})=>ie(!0,n)),e.subscribe("agent:save",wt),e.subscribe("agent:delete",({agentName:n})=>Pt(n)),e.subscribe("agent:generateProfile",Et),e.subscribe("group:create",()=>le(!1)),e.subscribe("group:edit",({groupName:n})=>le(!0,n)),e.subscribe("group:save",Lt),e.subscribe("group:delete",({groupName:n})=>Ct(n)),e.subscribe("memory:create",()=>pe(null)),e.subscribe("memory:edit",({index:n,event:s})=>pe(n,s)),e.subscribe("memory:save",xt),e.subscribe("memory:delete",({index:n,event:s})=>Mt(n,s)),e.subscribe("memory:toggle",({name:n,event:s})=>kt(n,s)),e.subscribe("memory:exportPackage",Bt),e.subscribe("memory:importPackage",()=>document.getElementById("load-memory-package-input").click()),e.subscribe("memory:fileSelectedForImport",Tt),e.subscribe("chat:sendMessage",()=>se(!1)),e.subscribe("chat:stopGeneration",R),e.subscribe("chat:fileUpload",n=>$t(n)),e.subscribe("chat:summarize",Ft),e.subscribe("chat:removeFile",({index:n})=>{j&&j[n]&&(j.splice(n,1),De(j))}),e.subscribe("chat:clearSummary",_t),e.subscribe("chat:copyMessage",({index:n,event:s})=>Gt(n,s)),e.subscribe("chat:editMessage",({index:n})=>Ht(n)),e.subscribe("chat:regenerate",({index:n})=>Yt(n)),e.subscribe("chat:deleteMessage",({index:n})=>Kt(n)),e.subscribe("summary:view",({logId:n})=>Qt(n)),e.subscribe("summary:load",({logId:n})=>zt(n)),e.subscribe("summary:delete",({logId:n})=>Rt(n)),console.log("Event bus subscriptions are set up.")}function cn(){const e=document.getElementById("theme-switcher");if(!e)return;const t=e.querySelectorAll('input[type="radio"]'),n=localStorage.getItem("theme")||"system",s=a=>{if(a==="system"){const r=window.matchMedia("(prefers-color-scheme: dark)").matches;document.body.classList.toggle("dark-mode",r)}else document.body.classList.toggle("dark-mode",a==="dark")};t.forEach(a=>{a.value===n&&(a.checked=!0),a.addEventListener("change",r=>{const i=r.target.value;localStorage.setItem("theme",i),s(i)})}),s(n),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",()=>{(localStorage.getItem("theme")||"system")==="system"&&s("system")})}document.addEventListener("DOMContentLoaded",async()=>{await on();try{const e=localStorage.getItem("lastActiveProjectId");e?await dt(e):await F()}catch(e){console.error("[Startup Error] Failed to load project, creating a new one.",e),localStorage.removeItem("lastActiveProjectId"),await F()}});
