(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=n(a);fetch(a.href,r)}})();const te="AIChatbotDB_Project_",E="chatSessions",T="projectMetadata",ye="projectInfo",B={"agent-name-input":"name","agent-icon-input":"icon","agent-model-select":"model","agent-system-prompt":"systemPrompt","agent-use-markdown":"useMarkdown","agent-temperature":"temperature","agent-topP":"topP","agent-topK":"topK","agent-presence-penalty":"presence_penalty","agent-frequency-penalty":"frequency_penalty","agent-max-tokens":"max_tokens","agent-seed":"seed","agent-stop-sequences":"stop_sequences"},he={Standard:`You are a professional summarizer. Your task is to create a dense, context-rich summary of a conversation. Include all key entities, character names, locations, critical events, and important emotional states. The summary should be detailed enough for another AI to pick up the conversation and understand all necessary context.

Here is the summary of the conversation so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new messages that have occurred since that summary:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive summary that integrates the key points from the new messages into the previous one. Respond with ONLY the new, complete summary text.`,"Literary Analyst":`You are a meticulous literary analyst tasked with creating a detailed narrative digest. Your primary goal is to preserve the story's integrity, character development, and emotional nuances. Do NOT sacrifice important details for the sake of brevity.

Your digest must include:
- Plot Progression: Every significant event and the causal links between them.
- Character Arcs: Any changes in a character's state of mind, motivation, decisions, or relationships.
- Key Dialogue: Capture the essence and subtext of crucial conversations.
- Atmosphere & Setting: Mention key descriptions of the environment if they contribute to the mood or plot.
- New Elements: Note the introduction of any new characters, significant objects, or unresolved questions (foreshadowing).

Here is the narrative digest so far:
--- PREVIOUS DIGEST ---
\${previousSummary}
--- END PREVIOUS DIGEST ---

Now, here are the new scenes and dialogues that have occurred:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide a new, single, cohesive narrative digest that seamlessly integrates the key points from the new messages into the previous one. Write in a third-person, past-tense narrative style. Respond with ONLY the new, complete digest text.`,"Continuity Editor":`You are a continuity editor for a novel series. Your job is to create a 'Previously On...' document that ensures no plot points are ever lost. The output must be extremely detailed, acting as a perfect memory for another AI to continue the story without missing a single beat.

The document must retain:
- All character actions and their immediate consequences.
- The full names of any character or location mentioned.
- The specifics of any plans made or secrets revealed.
- Emotional state of each character at the end of the scene.
- Any objects that were acquired, lost, or noted as important.

The goal is maximum information retention, not summarization. Think of this as expanding upon the previous summary with new, detailed information.

Here is the continuity document so far:
--- PREVIOUS SUMMARY ---
\${previousSummary}
--- END PREVIOUS SUMMARY ---

Now, here are the new events to be added:
--- NEW MESSAGES ---
\${newMessages}
--- END NEW MESSAGES ---

Please provide the updated, complete continuity document, integrating the new events chronologically. Your response should be a single block of text containing only the updated document.`},X={model:"openai/gpt-4o-mini",systemPrompt:"You are a highly efficient assistant that processes user requests and responds in a structured JSON format when required. You are objective and precise.",summarizationPrompt:he.Standard,temperature:.2,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:2048,seed:-1,stop_sequences:""},Be=[{name:"Code Assistant",content:"You are an expert programmer."},{name:"Creative Writer",content:"You are a creative writing assistant."}],fe={icon:"🤖",model:"",systemPrompt:"You are a helpful assistant.",useMarkdown:!0,temperature:1,topP:1,topK:0,presence_penalty:0,frequency_penalty:0,max_tokens:4096,seed:-1,stop_sequences:""},b={currentProject:{},allProviderModels:[],isLoading:!1,isDirty:!1,abortController:null,editingAgentName:null,editingGroupName:null,pendingFileToOpen:null,pendingActionAfterSave:null},M={events:{},subscribe(t,e){return this.events[t]=this.events[t]||[],this.events[t].push(e),()=>{this.events[t]=this.events[t].filter(n=>e!==n)}},publish(t,e){this.events[t]&&this.events[t].forEach(n=>n(e))}},o={getState:()=>b,getProject:()=>b.currentProject,isLoading:()=>b.isLoading,isDirty:()=>b.isDirty,setState:(t,e)=>{b[t]=e},setProject:t=>{b.currentProject=t,M.publish("project:stateChanged",b.currentProject)},setLoading:t=>{b.isLoading!==t&&(b.isLoading=t,M.publish("loading:changed",t))},setDirty:t=>{b.isDirty!==t&&(b.isDirty=t,M.publish("dirty:changed",t))},setAllModels:t=>{b.allProviderModels=t.sort((e,n)=>e.name.localeCompare(n.name)),b.currentProject&&b.currentProject.globalSettings&&(b.currentProject.globalSettings.allModels=b.allProviderModels),M.publish("models:loaded",b.allProviderModels)},newAbortController:()=>(b.abortController=new AbortController,b.abortController),abort:()=>{b.abortController&&(b.abortController.abort(),b.abortController=null)},updateAndPersistState(){this.setDirty(!0),M.publish("project:persistRequired")},bus:M};function Te(){o&&o.bus&&typeof o.bus.publish=="function"?o.bus.publish("dirty:changed",!0):console.warn("[WARN] EventBus not ready. Dirty state not set.")}async function Ne(t){const e=await fetch("https://openrouter.ai/api/v1/models",{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw new Error("Could not fetch models from OpenRouter");return(await e.json()).data.map(s=>({id:s.id,name:s.name||s.id,provider:"openrouter"}))}async function Oe(t){try{const e=await fetch(`${t}/api/tags`);if(!e.ok)throw new Error(`Could not connect to Ollama (HTTP ${e.status})`);return(await e.json()).models.map(s=>({id:s.name,name:s.name,provider:"ollama"}))}catch(e){throw e instanceof TypeError?new Error("Could not connect to Ollama. Check URL, server status, and CORS settings."):e}}async function be(){o.bus.publish("status:update",{message:"Loading models...",state:"loading"});let t=o.getProject();if(!t||!t.globalSettings){o.bus.publish("status:update",{message:"Project not loaded",state:"error"});return}const e=t.globalSettings.apiKey?.trim()||"",n=t.globalSettings.ollamaBaseUrl?.trim()||"";let s={message:"No models found. Please check API settings.",state:"warning"};const a=[];e&&a.push(Ne(e).catch(r=>(console.error("OpenRouter fetch failed:",r),[]))),n&&a.push(Oe(n).catch(r=>(console.error("Ollama fetch failed:",r),[])));try{if(a.length===0){o.setAllModels([]),s={message:"Ready",state:"connected"},o.bus.publish("status:update",s);return}const i=(await Promise.all(a)).flat();if(i.length>0){const l="google/gemma-3-27b-it",d=i.some(u=>u.id===l);let c=!1;if(d){const u=["openai/gpt-4o-mini","google/gemma-2-27b-it"];(!t.globalSettings.systemUtilityAgent.model||u.includes(t.globalSettings.systemUtilityAgent.model))&&(t.globalSettings.systemUtilityAgent.model=l,c=!0);const m=t.agentPresets["Default Agent"];m&&!m.model&&(m.model=l,c=!0)}c&&o.setProject(t),o.setAllModels(i),c&&await o.updateAndPersistState(),s={message:`Loaded ${i.length} models successfully.`,state:"connected"}}}catch(r){s={message:`Error loading models: ${r.message}`,state:"error"}}o.bus.publish("status:update",s),o.bus.publish("project:loaded",{projectData:o.getProject()})}async function U(t,e){const s=o.getState().allProviderModels.find(p=>p.id===t.model);if(!s)throw new Error("Model data not found for the agent.");const a=o.getProject(),r=s.provider,i={model:t.model,messages:e,stream:!1},l={temperature:parseFloat(t.temperature),top_p:parseFloat(t.topP),top_k:parseInt(t.topK,10),presence_penalty:parseFloat(t.presence_penalty),frequency_penalty:parseFloat(t.frequency_penalty),max_tokens:parseInt(t.max_tokens,10),seed:parseInt(t.seed,10)};t.stop_sequences&&(l.stop=t.stop_sequences.split(",").map(p=>p.trim()));let d,c;r==="openrouter"?(d="https://openrouter.ai/api/v1/chat/completions",c={Authorization:`Bearer ${a.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(i,l)):(d=`${a.globalSettings.ollamaBaseUrl}/api/chat`,c={"Content-Type":"application/json"},i.options=l);const u=await fetch(d,{method:"POST",headers:c,body:JSON.stringify(i),signal:o.getState().abortController?.signal});if(!u.ok){const p=await u.text();throw new Error(`API Error: ${p}`)}const m=await u.json();if(r==="openrouter"&&m.choices&&m.choices.length>0)return m.choices[0].message.content;if(r==="ollama"&&m.message)return m.message.content;throw new Error("Invalid API response structure.")}async function qe(t,e,n,s=null){const r=o.getState().allProviderModels.find(P=>P.id===e.model);if(!r)throw new Error("Model data not found for active agent.");const i=o.getProject(),l=r.provider,d={model:e.model,messages:n,stream:!0},c={temperature:parseFloat(e.temperature),top_p:parseFloat(e.topP),top_k:parseInt(e.topK,10),presence_penalty:parseFloat(e.presence_penalty),frequency_penalty:parseFloat(e.frequency_penalty),max_tokens:parseInt(e.max_tokens,10),seed:parseInt(e.seed,10)};e.stop_sequences&&(c.stop=e.stop_sequences.split(",").map(P=>P.trim()));let u,m;l==="openrouter"?(u="https://openrouter.ai/api/v1/chat/completions",m={Authorization:`Bearer ${i.globalSettings.apiKey}`,"Content-Type":"application/json"},Object.assign(d,c)):(u=`${i.globalSettings.ollamaBaseUrl}/api/chat`,m={"Content-Type":"application/json"},d.options=c);const p=await fetch(u,{method:"POST",headers:m,body:JSON.stringify(d),signal:o.getState().abortController?.signal});if(!p.ok){const P=await p.text();throw new Error(`API Error: ${P}`)}const g=p.body.getReader(),v=new TextDecoder;let h="",S="";const f=t.querySelector(".streaming-content");if(!f){t.innerHTML+=" Error: UI render target not found.";return}for(f.innerHTML="";!o.getState().abortController?.signal.aborted;){const{done:P,value:C}=await g.read();if(P)break;S+=v.decode(C,{stream:!0});const A=S.split(`
`);S=A.pop();for(const x of A){if(x.trim()==="")continue;let O="";try{if(l==="openrouter"){if(x.startsWith("data: ")){const L=x.substring(6);if(L.trim()==="[DONE]")break;O=JSON.parse(L).choices[0]?.delta?.content||""}}else{const L=JSON.parse(x);if(O=L.message?.content||"",L.done)break}}catch(L){console.warn("Error parsing stream chunk:",L)}O&&(h+=O,e.useMarkdown?f.innerHTML=marked.parse(h):f.textContent=h)}}return o.bus.publish("ui:enhanceCodeBlocks",t),h}async function $e(t){try{const e=o.getProject();if(e.activeEntity.type!=="agent")return;const n=e.activeEntity.name,s=e.agentPresets[n];if(!s||!s.model)return;const r=[{role:"user",content:'Based on the conversation, generate a concise title (3-5 words) and a single relevant emoji. Respond with a JSON object like {"title": "your title", "emoji": "👍"}.'}],i=await U({...s,temperature:.2},r);let l={};try{l=JSON.parse(i.match(/{.*}/s)[0])}catch{console.error("Failed to parse title JSON:",i),l={title:i.replace(/"/g,"").substring(0,30),emoji:"💬"}}const d=`${l.emoji||"💬"} ${l.title||"Untitled"}`;d&&o.bus.publish("session:autoRename",{sessionId:e.activeSessionId,newName:d})}catch(e){console.error("Auto-rename failed:",e)}}function ne(){document.getElementById("settings-panel").classList.toggle("open")}function De(){const t=o.getProject();document.getElementById("project-name-input").value=t.name==="Untitled Project"?"":t.name,document.getElementById("save-project-modal").style.display="flex"}function ve(){document.getElementById("save-project-modal").style.display="none"}function Ee(){document.getElementById("unsaved-changes-modal").style.display="flex"}function Ue(){document.getElementById("unsaved-changes-modal").style.display="none"}function y(t,e="Notification"){document.getElementById("alert-modal-title").textContent=e,document.getElementById("alert-modal-message").textContent=t,document.getElementById("alert-modal").style.display="flex"}function ze(){document.getElementById("alert-modal").style.display="none"}function W(){document.querySelector(".sidebar").classList.toggle("open"),document.getElementById("mobile-overlay").classList.toggle("active")}function Re(){document.querySelector(".app-wrapper").classList.toggle("sidebar-collapsed")}function k(t){t.stopPropagation();const e=t.currentTarget.closest(".dropdown"),n=t.currentTarget.closest(".item"),s=e.classList.contains("open");document.querySelectorAll(".dropdown.open").forEach(a=>{a.classList.remove("open");const r=a.closest(".item");r&&r.classList.remove("z-index-front")}),s||(e.classList.add("open"),n&&n.classList.add("z-index-front"))}function _e(){const t=o.getProject();t?.globalSettings?.fontFamilySelect&&document.documentElement.style.setProperty("--main-font-family",t.globalSettings.fontFamilySelect)}function Fe({message:t,state:e}){document.getElementById("statusText").textContent=t||"Ready";const n=document.getElementById("statusDot");n.className="status-dot",e==="connected"?n.classList.add("connected"):e==="error"&&n.classList.add("error")}function Ge(){const t=document.querySelector(".sidebar-resizer"),e=document.querySelector(".sidebar-horizontal-resizer"),n=document.querySelector(".sidebar"),s=document.querySelector(".sessions-frame"),a=document.querySelector(".memories-frame");if(!t||!e||!n||!s||!a){console.warn("Resizable sidebar elements not found. Resizing will be disabled.");return}let r=!1,i=!1;const l=h=>{if(!r)return;const S=h.touches?h.touches[0].clientY:h.clientY,f=document.querySelector(".sidebar-content");if(!f)return;const P=f.getBoundingClientRect();let C=S-P.top;const A=f.offsetHeight;C<100&&(C=100),C>A-100&&(C=A-100);const x=t.offsetHeight;s.style.flex=`0 1 ${C}px`,a.style.flex=`1 1 ${A-C-x}px`},d=h=>{h.preventDefault(),r=!0,document.body.style.cursor="ns-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",l),window.addEventListener("touchmove",l,{passive:!1}),window.addEventListener("mouseup",c),window.addEventListener("touchend",c)},c=()=>{r=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",l),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",c),window.removeEventListener("touchend",c),localStorage.setItem("sidebarSplitHeight",s.style.flex)};t.addEventListener("mousedown",d),t.addEventListener("touchstart",d,{passive:!1});const u=h=>{if(!i)return;let f=h.touches?h.touches[0].clientX:h.clientX;f<250&&(f=250),f>600&&(f=600),n.style.flexBasis=`${f}px`},m=h=>{h.preventDefault(),i=!0,document.body.style.cursor="ew-resize",document.body.style.userSelect="none",window.addEventListener("mousemove",u),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("mouseup",p),window.addEventListener("touchend",p)},p=()=>{i=!1,document.body.style.cursor="",document.body.style.userSelect="",window.removeEventListener("mousemove",u),window.removeEventListener("touchmove",u),window.removeEventListener("mouseup",p),window.removeEventListener("touchend",p),localStorage.setItem("sidebarWidth",n.style.flexBasis)};e.addEventListener("mousedown",m),e.addEventListener("touchstart",m,{passive:!1});const g=localStorage.getItem("sidebarSplitHeight");g&&(s.style.flex=g);const v=localStorage.getItem("sidebarWidth");v&&(n.style.flexBasis=v)}function He(){o.bus.subscribe("ui:applyFontSettings",_e),o.bus.subscribe("status:update",Fe),o.bus.subscribe("dirty:changed",e=>{const n=document.getElementById("project-title");if(n){const s=n.textContent.replace(" *","");n.textContent=e?`${s} *`:s}}),document.querySelector("#settings-btn").addEventListener("click",ne),document.querySelector(".close-settings-btn").addEventListener("click",ne),document.addEventListener("click",e=>{e.target.closest(".dropdown")||document.querySelectorAll(".dropdown.open").forEach(n=>{n.classList.remove("open");const s=n.closest(".item");s&&s.classList.remove("z-index-front")})}),document.querySelector("#save-project-modal .btn-secondary").addEventListener("click",ve),document.getElementById("alert-modal").querySelector(".btn").addEventListener("click",ze),document.querySelector("#save-project-modal .btn:not(.btn-secondary)").addEventListener("click",()=>{const e=document.getElementById("project-name-input").value;o.bus.publish("project:saveConfirm",{projectName:e})}),document.querySelector("#unsaved-changes-modal .btn-secondary").addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","cancel")),document.querySelector("#unsaved-changes-modal .btn-danger").addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","discard")),document.querySelector("#unsaved-changes-modal .btn:not(.btn-secondary):not(.btn-danger)").addEventListener("click",()=>o.bus.publish("project:unsavedChangesChoice","save")),document.getElementById("hamburger-btn").addEventListener("click",W),document.getElementById("mobile-overlay").addEventListener("click",W),document.getElementById("collapse-sidebar-btn").addEventListener("click",Re),document.getElementById("load-models-btn").addEventListener("click",()=>o.bus.publish("api:loadModels")),document.getElementById("fontFamilySelect").addEventListener("change",e=>o.bus.publish("settings:fontChanged",e.target.value)),document.getElementById("apiKey").addEventListener("change",e=>o.bus.publish("settings:apiKeyChanged",e.target.value)),document.getElementById("ollamaBaseUrl").addEventListener("change",e=>o.bus.publish("settings:ollamaUrlChanged",e.target.value)),document.getElementById("system-utility-model-select").addEventListener("change",()=>o.bus.publish("settings:systemAgentChanged")),document.getElementById("system-utility-prompt").addEventListener("change",()=>o.bus.publish("settings:systemAgentChanged")),document.getElementById("system-utility-summary-prompt").addEventListener("change",()=>o.bus.publish("settings:systemAgentChanged")),document.getElementById("system-utility-temperature").addEventListener("change",()=>o.bus.publish("settings:systemAgentChanged")),document.getElementById("system-utility-topP").addEventListener("change",()=>o.bus.publish("settings:systemAgentChanged")),document.getElementById("system-utility-summary-preset-select").addEventListener("change",()=>o.bus.publish("settings:summaryPresetChanged"));const t=document.getElementById("summary-preset-menu-btn");t&&t.addEventListener("click",k),Ge(),console.log("Core UI Initialized and Listeners Attached.")}function se(t){const e=document.getElementById("project-title");e&&(e.textContent=t)}function Ye(t){t&&t.stopPropagation(),document.getElementById("custom-entity-selector-wrapper").classList.toggle("open")}function Q(t,e){let n;t==="agent"?n=document.querySelector(`.item[data-agent-name="${e}"]`):t==="group"&&(n=document.querySelector(`.item[data-group-name="${e}"]`)),n&&n.scrollIntoView({behavior:"smooth",block:"center"})}function Ke(t){const e=t.indexOf("_"),n=t.substring(0,e),s=t.substring(e+1);o.bus.publish("entity:select",{type:n,name:s}),document.getElementById("custom-entity-selector-wrapper").classList.remove("open")}function q(){const t=o.getProject();if(!t||!t.globalSettings)return;const e=document.getElementById("entitySelector"),n=document.getElementById("custom-entity-selector-options"),s=document.getElementById("custom-entity-selector-icon"),a=document.getElementById("custom-entity-selector-text");e.innerHTML="",n.innerHTML="";const r=(d,c,u,m)=>{const p=`${d}_${c}`,g=document.createElement("div");g.className="custom-select-option",g.innerHTML=`<span class="item-icon">${u}</span> <span>${c}</span>`,g.addEventListener("click",()=>Ke(p)),m.appendChild(new Option(`${u} ${c}`,p)),n.appendChild(g)},i=t.agentPresets||{};if(Object.keys(i).length>0){const d=document.createElement("optgroup");d.label="Agent Presets",e.appendChild(d);const c=document.createElement("div");c.className="custom-select-group",c.textContent="Agent Presets",n.appendChild(c),Object.keys(i).forEach(u=>{r("agent",u,i[u].icon||"🤖",d)})}const l=t.agentGroups||{};if(Object.keys(l).length>0){const d=document.createElement("optgroup");d.label="Agent Groups",e.appendChild(d);const c=document.createElement("div");c.className="custom-select-group",c.textContent="Agent Groups",n.appendChild(c),Object.keys(l).forEach(u=>{r("group",u,"🤝",d)})}if(t.activeEntity){const{type:d,name:c}=t.activeEntity;e.value=`${d}_${c}`,d==="agent"&&i[c]?(s.textContent=i[c].icon||"🤖",a.textContent=c):d==="group"?(s.textContent="🤝",a.textContent=c):(s.textContent="❔",a.textContent="Select...")}}function Je(){const t=o.getProject();if(!t||!t.globalSettings)return;const e=document.getElementById("system-utility-summary-preset-select"),n=t.globalSettings.summarizationPromptPresets||{},s=document.getElementById("system-utility-summary-prompt").value;let a=null;e.innerHTML="";for(const r in n)e.add(new Option(r,r)),n[r].trim()===s.trim()&&(a=r);if(a)e.value=a;else{const r=new Option("--- Custom ---","custom",!0,!0);r.disabled=!0,e.add(r),e.value="custom"}}function We(){o.bus.subscribe("project:loaded",e=>{se(e.projectData.name),q()}),o.bus.subscribe("project:nameChanged",e=>se(e)),o.bus.subscribe("entity:selected",q),o.bus.subscribe("agent:listChanged",q),o.bus.subscribe("group:listChanged",q),o.bus.subscribe("ui:renderSummarizationSelector",Je);const t=document.querySelector(".sidebar-bottom-row .dropdown");if(t){const e=t.querySelector("button");e&&e.addEventListener("click",k);const n=t.querySelector(".dropdown-content");n&&(n.querySelector('a[data-action="newProject"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("project:new")}),n.querySelector('a[data-action="openProject"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("project:open")}),n.querySelector('a[data-action="saveProject"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("project:save",!1)}),n.querySelector('a[data-action="saveProjectAs"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("project:save",!0)}),n.querySelector('a[data-action="exportChat"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("project:exportChat")}))}document.getElementById("load-project-input").addEventListener("change",e=>o.bus.publish("project:fileSelectedForOpen",e)),document.getElementById("custom-entity-selector-trigger").addEventListener("click",Ye),console.log("Project UI Initialized.")}let w;function Ve(){return w}async function Xe(t){return w&&w.name===`${te}${t}`?Promise.resolve(w):(w&&(w.close(),w=null),new Promise((e,n)=>{const s=indexedDB.open(`${te}${t}`,5);s.onupgradeneeded=a=>{const r=a.target.result;r.objectStoreNames.contains(E)||r.createObjectStore(E,{keyPath:"id"}),r.objectStoreNames.contains(T)||r.createObjectStore(T,{keyPath:"id"})},s.onsuccess=a=>{w=a.target.result,console.log(`IndexedDB '${w.name}' opened successfully.`),e(w)},s.onerror=a=>{console.error("IndexedDB error:",a.target.error),n(a.target.error)}}))}async function j(t,e,n,s){return new Promise((a,r)=>{if(!w)return console.error("dbRequest called before DB was opened."),r("Database is not open.");try{const d=w.transaction(t,e).objectStore(t)[n](s);d.onsuccess=c=>a(c.target.result||(n==="getAll"?[]:null)),d.onerror=c=>r(c.target.error)}catch(i){console.error(`Error performing dbRequest (${n} on ${t}):`,i),r(i)}})}async function Qe(t){return new Promise((e,n)=>{if(!w)return n("Database is not open.");try{const s=w.transaction(t,"readwrite");s.oncomplete=()=>{console.log(`Stores cleared: ${t.join(", ")}`),e()},s.onerror=a=>n(s.error),t.forEach(a=>{w.objectStoreNames.contains(a)&&s.objectStore(a).clear()})}catch(s){n(s)}})}async function R(){const t=o.getProject();if(!t||!t.activeEntity){y("Please create or select an agent first.","Error");return}const e={id:`sid_${Date.now()}_${Math.random().toString(36).substring(2,9)}`,name:"New Chat",history:[],createdAt:Date.now(),updatedAt:Date.now(),pinned:!1,archived:!1,linkedEntity:{...t.activeEntity},groupChatState:{isRunning:!1},summaryState:{activeSummaryId:null,summarizedUntilIndex:0}};try{await j(E,"readwrite","add",e),t.chatSessions||(t.chatSessions=[]),t.chatSessions.unshift(e),o.setProject(t),await N(e.id)}catch(n){console.error("Failed to create new session in DB:",n),y("Error creating new chat.","Error")}}async function N(t){if(o.isLoading())return;const e=o.getProject(),n=e.chatSessions.find(s=>s.id===t);if(n){if(e.activeSessionId=t,n.linkedEntity?.type==="agent"&&e.agentPresets[n.linkedEntity.name])e.activeEntity={...n.linkedEntity};else if(n.linkedEntity?.type==="group"&&e.agentGroups[n.linkedEntity.name])e.activeEntity={...n.linkedEntity};else if(Object.keys(e.agentPresets).length>0){const s=Object.keys(e.agentPresets)[0];e.activeEntity={type:"agent",name:s},n.linkedEntity={...e.activeEntity}}else e.activeEntity=null;o.setProject(e),o.bus.publish("session:loaded",n),e.activeEntity&&(o.bus.publish("entity:selected",e.activeEntity),requestAnimationFrame(()=>{Q(e.activeEntity.type,e.activeEntity.name)}))}}async function oe(t,e,n=null){e&&e.stopPropagation();const s=o.getProject(),a=s.chatSessions.find(i=>i.id===t);if(!a)return;const r=n||prompt("Enter new name:",a.name);r&&r.trim()&&(a.name=r.trim(),a.updatedAt=Date.now(),await j(E,"readwrite","put",a),o.setProject(s),o.bus.publish("session:changed"),t===s.activeSessionId&&o.bus.publish("session:titleChanged",r))}async function Ze(t,e){if(e&&e.stopPropagation(),!confirm("Are you sure you want to delete this chat session?"))return;const n=o.getProject(),s=n.chatSessions.findIndex(a=>a.id===t);if(s!==-1)if(n.chatSessions.splice(s,1),await j(E,"readwrite","delete",t),n.activeSessionId===t){n.activeSessionId=null;const a=[...n.chatSessions].filter(r=>!r.archived).sort((r,i)=>i.updatedAt-r.updatedAt)[0];o.setProject(n),a?await N(a.id):await R()}else o.setProject(n),o.bus.publish("session:changed")}async function et(t,e){e&&e.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===t);s&&(s.pinned=!s.pinned,s.updatedAt=Date.now(),await j(E,"readwrite","put",s),o.setProject(n),o.bus.publish("session:changed"))}async function tt(t,e){e&&e.stopPropagation();const n=o.getProject(),s=await j(E,"readonly","get",t);if(!s){y("Error: Could not find session to clone.","Error");return}const a=JSON.parse(JSON.stringify(s));a.id=`sid_${Date.now()}`,a.name=`${s.name} (Copy)`,a.createdAt=Date.now(),a.updatedAt=Date.now(),a.pinned=!1,a.archived=!1,await j(E,"readwrite","add",a),n.chatSessions.unshift(a),o.setProject(n),await N(a.id)}async function nt(t,e){e&&e.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(a=>a.id===t);if(s)if(s.archived=!s.archived,s.archived&&(s.pinned=!1),s.updatedAt=Date.now(),await j(E,"readwrite","put",s),n.activeSessionId===t&&s.archived){n.activeSessionId=null;const a=n.chatSessions.find(r=>!r.archived);o.setProject(n),a?await N(a.id):await R()}else o.setProject(n),o.bus.publish("session:changed")}function st(t){const e=o.getProject(),n=t||e.activeSessionId;if(!n){y("No active chat session to export.");return}const s=e.chatSessions.find(c=>c.id===n);if(!s){y("Could not find session data to export.");return}const a=s.name||"Untitled_Chat";let r=`Chat Export - Session: ${a}
================

`;s.history.forEach(c=>{const u=c.speaker||c.role.charAt(0).toUpperCase()+c.role.slice(1);let m="";typeof c.content=="string"?m=c.content:Array.isArray(c.content)&&(m=c.content.find(p=>p.type==="text")?.text||"[Image]"),r+=`${u}: ${m}

`});const i=new Blob([r],{type:"text/plain;charset=utf-8"}),l=URL.createObjectURL(i),d=document.createElement("a");d.href=l,d.download=`chat-export-${a.replace(/\s+/g,"_")}_${new Date().toISOString().slice(0,10)}.txt`,d.click(),URL.revokeObjectURL(l)}function ot(){const t=`proj_${Date.now()}`,e="Default Agent";return{id:t,name:"Untitled Project",activeEntity:{type:"agent",name:e},agentPresets:{[e]:{...fe,model:"",activeMemories:[]}},agentGroups:{},memories:JSON.parse(JSON.stringify(Be)),chatSessions:[],summaryLogs:[],globalSettings:{fontFamilySelect:"'Sarabun', sans-serif",apiKey:"",ollamaBaseUrl:"http://localhost:11434",allModels:[],systemUtilityAgent:{...X},summarizationPromptPresets:JSON.parse(JSON.stringify(he))}}}async function Z(){const t=ot();await je(t,!0)}function at(){Te(),o.isDirty()?(o.setState("pendingActionAfterSave","new"),Ee()):Z()}function rt(t){const e=t.target.files[0];e&&(o.setState("pendingFileToOpen",e),t.target.value="",o.isDirty()?(o.setState("pendingActionAfterSave","open"),Ee()):Se())}function Se(){const t=o.getState().pendingFileToOpen;t&&(ct(t),o.setState("pendingFileToOpen",null))}async function we(t=!1){const e=o.getProject();t||e.name==="Untitled Project"?De():await Pe(e.name)}async function Pe(t){const e=t?.trim();if(!e)return y("Please enter a project name."),!1;const n=o.getProject();n.name=e,o.bus.publish("project:nameChanged",e);let s=JSON.parse(JSON.stringify(n));s=s;try{const a=JSON.stringify(s,null,2),r=new Blob([a],{type:"application/json"}),i=URL.createObjectURL(r),l=document.createElement("a");return l.href=i,l.download=`${e.replace(/\s+/g,"_")}.json`,document.body.appendChild(l),l.click(),URL.revokeObjectURL(i),document.body.removeChild(l),await Ie(),ve(),o.setDirty(!1),!0}catch(a){return console.error("Failed to save project:",a),y("Failed to save project file.","Error"),!1}}async function it(t){switch(Ue(),t){case"save":await we(!1)&&ae();break;case"discard":o.setDirty(!1),ae();break;case"cancel":default:o.setState("pendingFileToOpen",null),o.setState("pendingActionAfterSave",null);break}}function ae(){const t=o.getState().pendingActionAfterSave;t==="open"?Se():t==="new"&&Z(),o.setState("pendingActionAfterSave",null)}async function ct(t){const e=new FileReader;e.onload=async n=>{try{const s=JSON.parse(n.target.result);if(s&&s.id&&s.name&&s.agentPresets)await je(s,!0),y(`Project '${s.name}' loaded successfully!`,"Project Loaded");else throw new Error("Invalid project file format.")}catch(s){y(`Error loading project: ${s.message}`,"Error"),console.error(s)}},e.readAsText(t)}async function je(t,e=!1){const n=t;await Xe(n.id),e&&await lt(n),o.setProject(n),await dt();const s=o.getProject();(s.globalSettings.apiKey||s.globalSettings.ollamaBaseUrl)&&await be();const a=s.chatSessions.filter(r=>!r.archived);a.length===0?await R():await N(a.sort((r,i)=>i.updatedAt-r.updatedAt)[0].id),o.bus.publish("project:loaded",{projectData:o.getProject()}),s.activeEntity&&requestAnimationFrame(()=>{Q(s.activeEntity.type,s.activeEntity.name)}),o.setDirty(!1),localStorage.setItem("lastActiveProjectId",t.id)}async function lt(t){await Qe([E,T]);const e=Ve();if(!e){console.error("Database connection not available for rewrite.");return}const n=e.transaction([E,T],"readwrite"),s=n.objectStore(E);t.chatSessions.forEach(r=>s.put(r));const a={...t};return delete a.chatSessions,n.objectStore(T).put({id:ye,data:a}),new Promise((r,i)=>{n.oncomplete=r,n.onerror=()=>i(n.error)})}async function Ie(){try{const t=o.getProject();if(!t||!t.id){console.warn("Cannot persist metadata: project or project ID is missing.");return}const e={...t};delete e.chatSessions,await j(T,"readwrite","put",{id:ye,data:e}),console.log("Project metadata persisted to DB.")}catch(t){console.error("Failed to persist project metadata:",t)}}async function dt(){const t=o.getProject();if(!t||!t.globalSettings)return;const e=t.globalSettings;document.getElementById("apiKey").value=e.apiKey||"",document.getElementById("ollamaBaseUrl").value=e.ollamaBaseUrl||"",o.bus.publish("ui:applyFontSettings");const n=e.systemUtilityAgent||X;document.getElementById("system-utility-model-select").value=n.model||"",document.getElementById("system-utility-prompt").value=n.systemPrompt||"",document.getElementById("system-utility-summary-prompt").value=n.summarizationPrompt||"",document.getElementById("system-utility-temperature").value=n.temperature??1,document.getElementById("system-utility-topP").value=n.topP??1,o.bus.publish("ui:renderSummarizationSelector")}function ut(t){const e=o.getProject();e.globalSettings.fontFamilySelect=t,o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:applyFontSettings")}function mt(t){const e=o.getProject();e.globalSettings.apiKey=t,o.setProject(e),o.updateAndPersistState()}function pt(t){const e=o.getProject();e.globalSettings.ollamaBaseUrl=t,o.setProject(e),o.updateAndPersistState()}function gt(){const t=o.getProject();if(!t.globalSettings)return;const e=t.globalSettings.systemUtilityAgent;e.model=document.getElementById("system-utility-model-select").value,e.systemPrompt=document.getElementById("system-utility-prompt").value,e.summarizationPrompt=document.getElementById("system-utility-summary-prompt").value,e.temperature=parseFloat(document.getElementById("system-utility-temperature").value),e.topP=parseFloat(document.getElementById("system-utility-topP").value),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderSummarizationSelector")}async function yt(t,e){const n=o.getProject();n.activeEntity={type:t,name:e};const s=n.chatSessions.find(a=>a.id===n.activeSessionId);s&&(s.groupChatState&&(s.groupChatState.isRunning=!1),s.linkedEntity={...n.activeEntity},s.updatedAt=Date.now(),await j(E,"readwrite","put",s)),o.setProject(n),o.updateAndPersistState(),o.bus.publish("entity:selected",{type:t,name:e}),requestAnimationFrame(()=>{Q(t,e)})}function F(t){const e=o.getProject(),n=document.createElement("div");n.className=`item session-item ${t.id===e.activeSessionId?"active":""} ${t.pinned?"pinned":""}`,n.dataset.sessionId=t.id,n.addEventListener("click",()=>{e.activeSessionId!==t.id&&o.bus.publish("session:load",{sessionId:t.id}),window.innerWidth<=1024&&W()});const s=e.agentPresets||{};let a="❔";if(t.linkedEntity){const i=s[t.linkedEntity.name];a=t.linkedEntity?.type==="group"?"🤝":i?.icon||"🤖"}n.innerHTML=`
        <div class="item-header">
            <span class="item-name"><span class="item-icon">${a}</span>${t.pinned?"📌 ":""}${t.name}</span>
            <div class="item-actions dropdown align-right">
                <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                <div class="dropdown-content">
                    <a href="#" data-action="pin">${t.pinned?"Unpin":"Pin"}</a>
                    <a href="#" data-action="rename">Rename</a>
                    <a href="#" data-action="clone">Clone</a>
                    <a href="#" data-action="archive">${t.archived?"Unarchive":"Archive"}</a>
                    <a href="#" data-action="export">Download</a>
                    <hr>
                    <a href="#" data-action="delete">Delete</a>
                </div>
            </div>
        </div>
    `;const r=n.querySelector(".dropdown-content");return n.querySelector('[data-action="toggle-menu"]').addEventListener("click",k),r.querySelector('[data-action="pin"]').addEventListener("click",i=>o.bus.publish("session:pin",{sessionId:t.id,event:i})),r.querySelector('[data-action="rename"]').addEventListener("click",i=>o.bus.publish("session:rename",{sessionId:t.id,event:i})),r.querySelector('[data-action="clone"]').addEventListener("click",i=>o.bus.publish("session:clone",{sessionId:t.id,event:i})),r.querySelector('[data-action="archive"]').addEventListener("click",i=>o.bus.publish("session:archive",{sessionId:t.id,event:i})),r.querySelector('[data-action="export"]').addEventListener("click",i=>{i.preventDefault(),o.bus.publish("project:exportChat",{sessionId:t.id})}),r.querySelector('[data-action="delete"]').addEventListener("click",i=>o.bus.publish("session:delete",{sessionId:t.id,event:i})),n}function G(){const t=o.getProject();if(!t)return;const e=t.chatSessions||[],n=document.getElementById("pinnedSessionList"),s=document.getElementById("sessionListContainer"),a=document.getElementById("archivedSessionList"),r=document.getElementById("archivedSessionsSection");n.innerHTML="",s.innerHTML="",a.innerHTML="";const i=e.filter(c=>c.pinned&&!c.archived).sort((c,u)=>u.updatedAt-c.updatedAt),l=e.filter(c=>c.archived).sort((c,u)=>u.updatedAt-c.updatedAt),d=e.filter(c=>!c.pinned&&!c.archived).sort((c,u)=>u.updatedAt-c.updatedAt);i.forEach(c=>n.appendChild(F(c))),d.forEach(c=>s.appendChild(F(c))),l.forEach(c=>a.appendChild(F(c))),r.classList.toggle("hidden",l.length===0)}function ht(){o.bus.subscribe("project:loaded",G),o.bus.subscribe("session:loaded",G),o.bus.subscribe("session:changed",G),document.getElementById("new-chat-btn").addEventListener("click",()=>{o.bus.publish("session:new")}),console.log("Session UI Initialized.")}function ft(t,e){const s=o.getProject().activeEntity,a=document.createElement("div");return a.className="item",a.dataset.agentName=t,s&&s.type==="agent"&&s.name===t&&a.classList.add("active"),a.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">${e.icon||"🤖"}</span> ${t}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Agent">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Agent">&#128465;</button>
        </div>
    </div>`,a.addEventListener("click",r=>{r.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"agent",name:t})}),a.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("agent:edit",{agentName:t})),a.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("agent:delete",{agentName:t})),a}function H(){const t=o.getProject();if(!t||!t.agentPresets)return;const e=document.getElementById("agentPresetList");e.innerHTML="";const n=t.agentPresets;for(const s in n)e.appendChild(ft(s,n[s]))}function Ce(){const t=o.getState().allProviderModels||[],e=o.getProject(),n=[document.getElementById("agent-model-select"),document.getElementById("system-utility-model-select")];if(n.some(r=>!r)||!e.globalSettings)return;const s=document.createElement("optgroup");s.label="OpenRouter";const a=document.createElement("optgroup");a.label="Ollama",t.forEach(r=>{const i=new Option(r.name,r.id);(r.provider==="openrouter"?s:a).appendChild(i)}),n.forEach(r=>{const i=r.value;if(r.innerHTML='<option value="">-- Select a Model --</option>',s.childElementCount>0&&r.appendChild(s.cloneNode(!0)),a.childElementCount>0&&r.appendChild(a.cloneNode(!0)),r.id==="system-utility-model-select")r.value=e.globalSettings.systemUtilityAgent?.model||"";else if(r.id==="agent-model-select"){const l=o.getState().editingAgentName;l&&e.agentPresets[l]?r.value=e.agentPresets[l].model:r.value=i}})}function re(t=!1,e=null){o.setState("editingAgentName",t?e:null);const n=o.getProject(),s=o.getState().allProviderModels,a=n.globalSettings.systemUtilityAgent,r=s.find(i=>i.id===a.model);if(document.getElementById("agent-modal-title").textContent=t?`Edit Agent: ${e}`:"Create New Agent",document.getElementById("enhancer-model-name").textContent=r?.name||a.model||"Not Configured",t&&e){const i=n.agentPresets[e];if(!i){y("Agent not found.");return}document.getElementById("agent-name-input").value=e,Object.keys(B).forEach(l=>{const d=document.getElementById(l);if(d&&l!=="agent-name-input"){const c=i[B[l]];d[d.type==="checkbox"?"checked":"value"]=c!==void 0?c:""}})}else document.getElementById("agent-name-input").value="",Object.keys(B).forEach(i=>{const l=document.getElementById(i);if(l&&i!=="agent-name-input"){const d=fe[B[i]];l[l.type==="checkbox"?"checked":"value"]=d!==void 0?d:""}}),document.getElementById("enhancer-prompt-input").value="";Ce(),document.getElementById("agent-editor-modal").style.display="flex"}function ie(){document.getElementById("agent-editor-modal").style.display="none",o.setState("editingAgentName",null)}function bt(){o.bus.subscribe("project:loaded",H),o.bus.subscribe("agent:listChanged",H),o.bus.subscribe("models:loaded",Ce),o.bus.subscribe("agent:editorShouldClose",ie),o.bus.subscribe("entity:selected",H),o.bus.subscribe("agent:profileGenerated",e=>{document.getElementById("agent-name-input").value=e.agent_name||"",document.getElementById("agent-icon-input").value=e.agent_icon||"🤖",document.getElementById("agent-system-prompt").value=e.system_prompt||"",document.getElementById("agent-temperature").value=e.temperature??1,document.getElementById("agent-topP").value=e.top_p??1}),o.bus.subscribe("agent:enhancerStatus",({text:e,color:n})=>{const s=document.getElementById("enhancer-status");s.textContent=e,s.style.color=n||"var(--text-dark)"});const t=document.querySelector("#agentPresetList")?.closest("details.collapsible-section");if(t){const e=t.querySelector(".section-header .dropdown button");e&&e.addEventListener("click",k);const n=t.querySelector('a[data-action="createAgent"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("agent:create")})}document.getElementById("generate-agent-profile-btn").addEventListener("click",()=>o.bus.publish("agent:generateProfile")),document.querySelector("#agent-editor-modal .modal-actions .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("agent:save")),document.querySelector("#agent-editor-modal .btn-secondary").addEventListener("click",ie),console.log("Agent UI Initialized.")}async function vt(){const t=document.getElementById("enhancer-prompt-input").value.trim();if(!t){y("Please describe the agent you want to create.","Error");return}o.bus.publish("agent:enhancerStatus",{text:"Generating profile...",color:"var(--text-dark)"});const e=o.getProject().globalSettings.systemUtilityAgent;if(!e||!e.model){o.bus.publish("agent:enhancerStatus",{text:"Error: System Utility Model not configured.",color:"var(--error-color)"});return}const n=`You are an expert in designing LLM agent profiles. Based on the user's request, create a complete agent profile. Your response MUST be a single, valid JSON object with the following keys: "agent_name" (a creative and fitting name for the agent), "agent_icon" (a single, relevant emoji for the agent), "system_prompt" (string), "temperature" (number), "top_p" (number), "top_k" (number), "presence_penalty" (number), "frequency_penalty" (number). For the parameters, choose values that are optimal for the requested task (e.g., creative tasks need higher temperature). User's Request: "${t}"`;try{const a=(await U(e,[{role:"user",content:n}])).match(/{.*}/s);if(!a)throw new Error("LLM did not return a valid JSON object.");const r=JSON.parse(a[0]);o.bus.publish("agent:profileGenerated",r),o.bus.publish("agent:enhancerStatus",{text:"Profile generated successfully!",color:"var(--success-color)"})}catch(s){console.error("Agent Profile Generation Error:",s),o.bus.publish("agent:enhancerStatus",{text:`Error: ${s.message}`,color:"var(--error-color)"})}finally{setTimeout(()=>o.bus.publish("agent:enhancerStatus",{text:""}),5e3)}}function Et(){const e=document.getElementById("agent-name-input").value.trim();if(!e){y("Please enter a name for the agent.","Error");return}const n=o.getProject(),s=o.getState().editingAgentName;if(s!==e&&n.agentPresets[e]){y(`An agent named '${e}' already exists.`,"Error");return}const a={};if(Object.keys(B).forEach(r=>{const i=B[r];if(i==="name")return;const l=document.getElementById(r);l&&(a[i]=l.type==="checkbox"?l.checked:l.type==="number"?parseFloat(l.value):l.value)}),a.icon||(a.icon="🤖"),s&&s!==e){const r=n.agentPresets[s];delete n.agentPresets[s],n.agentPresets[e]={...r,...a},n.chatSessions.forEach(i=>{i.linkedEntity?.type==="agent"&&i.linkedEntity.name===s&&(i.linkedEntity.name=e)}),Object.values(n.agentGroups).forEach(i=>{const l=i.members.indexOf(s);l>-1&&(i.members[l]=e),i.moderatorAgent===s&&(i.moderatorAgent=e)}),n.activeEntity.type==="agent"&&n.activeEntity.name===s&&(n.activeEntity.name=e)}else s?n.agentPresets[s]={...n.agentPresets[s],...a}:(a.activeMemories=[],n.agentPresets[e]=a,n.activeEntity={type:"agent",name:e});o.setProject(n),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("agent:editorShouldClose")}function St(t){const e=o.getProject();if(!t||Object.keys(e.agentPresets).length<=1){y("Cannot delete the last agent.","Error");return}confirm(`Are you sure you want to delete the agent '${t}'? This action cannot be undone.`)&&(delete e.agentPresets[t],Object.values(e.agentGroups).forEach(n=>{n.members=n.members.filter(s=>s!==t),n.moderatorAgent===t&&(n.moderatorAgent=n.members[0]||"")}),e.chatSessions.forEach(n=>{n.linkedEntity?.type==="agent"&&n.linkedEntity.name===t&&(n.linkedEntity={type:"agent",name:Object.keys(e.agentPresets)[0]})}),e.activeEntity.type==="agent"&&e.activeEntity.name===t&&(e.activeEntity={type:"agent",name:Object.keys(e.agentPresets)[0]}),o.setProject(e),o.updateAndPersistState(),o.bus.publish("agent:listChanged"),o.bus.publish("entity:selected",e.activeEntity))}function wt(t){const n=o.getProject().activeEntity,s=document.createElement("div");return s.className="item",s.dataset.groupName=t,n&&n.type==="group"&&n.name===t&&s.classList.add("active"),s.innerHTML=`
    <div class="item-header">
        <span class="item-name"><span class="item-icon">🤝</span> ${t}</span>
        <div class="item-actions">
             <button class="btn-icon" data-action="edit" title="Edit Group">&#9998;</button>
             <button class="btn-icon danger" data-action="delete" title="Delete Group">&#128465;</button>
        </div>
    </div>`,s.addEventListener("click",a=>{a.target.closest(".item-actions")||o.bus.publish("entity:select",{type:"group",name:t})}),s.querySelector('[data-action="edit"]').addEventListener("click",()=>o.bus.publish("group:edit",{groupName:t})),s.querySelector('[data-action="delete"]').addEventListener("click",()=>o.bus.publish("group:delete",{groupName:t})),s}function $(){const t=o.getProject();if(!t||!t.agentGroups)return;const e=document.getElementById("agentGroupList");e.innerHTML="";const n=t.agentGroups;for(const s in n)e.appendChild(wt(s))}function ce(t=!1,e=null){o.setState("editingGroupName",t?e:null);const n=o.getProject(),s=t?n.agentGroups[e]:null;document.getElementById("agent-group-modal-title").textContent=t?`Edit Group: ${e}`:"Create New Agent Group",document.getElementById("group-name-input").value=t?e:"";const a=document.getElementById("group-member-list");a.innerHTML="";const r=s?s.members:[],i=Object.keys(n.agentPresets),l=s?[...s.members]:[];i.forEach(d=>{l.includes(d)||l.push(d)}),l.forEach(d=>{const c=r.includes(d),u=document.createElement("div");u.className="agent-sortable-item",u.dataset.agentName=d;const m=`agent-cb-${d.replace(/\s+/g,"-")}`;u.innerHTML=`
            <input type="checkbox" id="${m}" ${c?"checked":""}>
            <label for="${m}">${d}</label>
            <span class="drag-handle">&#x2630;</span>
        `,u.querySelector('input[type="checkbox"]').addEventListener("change",()=>de(null)),a.appendChild(u)}),window.groupSortable&&window.groupSortable.destroy(),window.groupSortable=new Sortable(a,{animation:150,handle:".drag-handle"}),de(s?.moderatorAgent),document.getElementById("group-flow-select").value=s?.flowType||"auto-moderator",document.getElementById("group-max-turns-input").value=s?.maxTurns||4,document.getElementById("group-summarization-threshold-input").value=s?.summarizationTokenThreshold??3e3,Le(),document.getElementById("agent-group-editor-modal").style.display="flex"}function le(){window.groupSortable&&(window.groupSortable.destroy(),window.groupSortable=null),document.getElementById("agent-group-editor-modal").style.display="none",o.setState("editingGroupName",null)}function de(t=null){const e=document.getElementById("group-moderator-select"),n=document.querySelectorAll("#group-member-list .agent-sortable-item"),s=Array.from(n).filter(r=>r.querySelector('input[type="checkbox"]').checked).map(r=>r.dataset.agentName),a=e.value;e.innerHTML='<option value="">-- Select Moderator --</option>',s.forEach(r=>{e.add(new Option(r,r))}),t&&s.includes(t)?e.value=t:s.includes(a)&&(e.value=a)}function Le(){const t=document.getElementById("group-flow-select"),e=document.getElementById("max-turns-group");e.style.display=t.value==="auto-moderator"?"none":"block"}function Pt(){o.bus.subscribe("project:loaded",$),o.bus.subscribe("group:listChanged",$),o.bus.subscribe("agent:listChanged",$),o.bus.subscribe("entity:selected",$),o.bus.subscribe("group:editorShouldClose",le);const t=document.querySelector("#agentGroupList")?.closest("details.collapsible-section");if(t){const e=t.querySelector(".section-header .dropdown button");e&&e.addEventListener("click",k);const n=t.querySelector('a[data-action="createGroup"]');n&&n.addEventListener("click",s=>{s.preventDefault(),o.bus.publish("group:create")})}document.querySelector("#agent-group-editor-modal .btn-secondary").addEventListener("click",le),document.querySelector("#agent-group-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>o.bus.publish("group:save")),document.getElementById("group-flow-select").addEventListener("change",Le),console.log("Group UI Initialized.")}function jt(){const t=document.getElementById("group-name-input").value.trim(),e=o.getState().editingGroupName;if(!t){y("Please enter a name for the group.","Error");return}const n=o.getProject();if(t!==e&&n.agentGroups[t]){y("A group with this name already exists.","Error");return}const s=window.groupSortable,a=s?s.toArray():[],r=new Set(Array.from(document.querySelectorAll('#group-member-list input[type="checkbox"]:checked')).map(c=>c.closest(".agent-sortable-item").dataset.agentName)),i=a.filter(c=>r.has(c));if(i.length===0){y("A group must have at least one member.","Error");return}const l=document.getElementById("group-moderator-select").value;if(!l||!i.includes(l)){y("Please select a valid moderator from the group members.","Error");return}const d={members:i,moderatorAgent:l,flowType:document.getElementById("group-flow-select").value,maxTurns:parseInt(document.getElementById("group-max-turns-input").value,10)||4,summarizationTokenThreshold:parseInt(document.getElementById("group-summarization-threshold-input").value,10)??3e3};e&&e!==t&&(delete n.agentGroups[e],n.chatSessions.forEach(c=>{c.linkedEntity?.type==="group"&&c.linkedEntity.name===e&&(c.linkedEntity.name=t)}),n.activeEntity.type==="group"&&n.activeEntity.name===e&&(n.activeEntity.name=t)),n.agentGroups[t]=d,o.setProject(n),o.updateAndPersistState(),o.bus.publish("group:listChanged"),n.activeEntity.type==="group"&&o.bus.publish("entity:selected",n.activeEntity),o.bus.publish("group:editorShouldClose")}function It(t){if(t&&confirm(`Are you sure you want to delete the group '${t}'?`)){const e=o.getProject();delete e.agentGroups[t],e.chatSessions.forEach(n=>{n.linkedEntity?.type==="group"&&n.linkedEntity.name===t&&(n.linkedEntity={type:"agent",name:Object.keys(e.agentPresets)[0]})}),e.activeEntity.type==="group"&&e.activeEntity.name===t&&(e.activeEntity={type:"agent",name:Object.keys(e.agentPresets)[0]}),o.setProject(e),o.updateAndPersistState(),o.bus.publish("group:listChanged"),o.bus.publish("entity:selected",e.activeEntity)}}let Y=null;function ue(t,e){const n=o.getProject(),s=document.createElement("div");s.className="item memory-item",s.dataset.name=t.name;const a=n.memories.findIndex(r=>r.name===t.name);return s.innerHTML=`
        <div class="item-header">
            <div class="memory-toggle ${e?"active":""}"></div>
            <span class="item-name">${t.name}</span>
            <div class="item-actions">
                <div class="dropdown align-right">
                    <button class="btn-icon" data-action="toggle-menu">&#8942;</button>
                    <div class="dropdown-content">
                        <a href="#" data-action="edit">&#9998; Edit</a>
                        <a href="#" data-action="delete">&#128465; Delete</a>
                    </div>
                </div>
            </div>
        </div>`,s.querySelector(".memory-toggle").addEventListener("click",r=>o.bus.publish("memory:toggle",{name:t.name,event:r})),s.querySelector('[data-action="toggle-menu"]').addEventListener("click",k),s.querySelector('[data-action="edit"]').addEventListener("click",r=>o.bus.publish("memory:edit",{index:a,event:r})),s.querySelector('[data-action="delete"]').addEventListener("click",r=>o.bus.publish("memory:delete",{index:a,event:r})),s}function D(){const t=o.getProject();if(!t)return;const e=document.getElementById("memories-container"),n=document.getElementById("activeMemoriesList"),s=document.getElementById("inactiveMemoriesList"),a=document.getElementById("inactiveMemoriesSection");n.innerHTML="",s.innerHTML="";let r=null;if(t.activeEntity?.type==="agent"&&t.agentPresets&&t.agentPresets[t.activeEntity.name])e.style.display="block",r=t.agentPresets[t.activeEntity.name];else{e.style.display="none";return}if(!r||!t.memories){e.style.display="none";return}const i=r.activeMemories||[],l=t.memories.map(u=>u.name),d=i.filter(u=>l.includes(u));d.length!==i.length&&(r.activeMemories=d);const c=l.filter(u=>!d.includes(u));d.forEach(u=>{const m=t.memories.find(p=>p.name===u);m&&n.appendChild(ue(m,!0))}),c.forEach(u=>{const m=t.memories.find(p=>p.name===u);m&&s.appendChild(ue(m,!1))}),c.length>0?a.classList.remove("hidden"):a.classList.add("hidden"),Y&&Y.destroy(),Y=new Sortable(n,{animation:150,onEnd:u=>{const m=o.getProject().agentPresets[o.getProject().activeEntity.name];if(!m)return;const p=u.item.dataset.name;m.activeMemories.splice(u.oldDraggableIndex,1),m.activeMemories.splice(u.newDraggableIndex,0,p),o.updateAndPersistState(),D()}})}function me(t=null,e){e&&e.stopPropagation();const n=o.getProject(),s=document.getElementById("memory-editor-modal");if(t!==null&&n.memories[t]){const a=n.memories[t];document.getElementById("memory-modal-title").textContent="Edit Memory",document.getElementById("memory-name-input").value=a.name,document.getElementById("memory-content-input").value=a.content,document.getElementById("memory-edit-index").value=t}else document.getElementById("memory-modal-title").textContent="Create New Memory",document.getElementById("memory-name-input").value="",document.getElementById("memory-content-input").value="",document.getElementById("memory-edit-index").value="";s.style.display="flex"}function pe(){document.getElementById("memory-editor-modal").style.display="none"}function Ct(){o.bus.subscribe("project:loaded",D),o.bus.subscribe("memory:listChanged",D),o.bus.subscribe("entity:selected",D),o.bus.subscribe("memory:editorShouldClose",pe);const t=document.querySelector("#memories-container")?.closest("details.collapsible-section");if(t){const e=t.querySelector(".section-header .dropdown button");e&&e.addEventListener("click",k);const n=t.querySelector(".dropdown-content");n&&(n.querySelector('a[data-action="createMemory"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:create")}),n.querySelector('a[data-action="exportMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:exportPackage")}),n.querySelector('a[data-action="importMemories"]').addEventListener("click",s=>{s.preventDefault(),o.bus.publish("memory:importPackage")}))}document.getElementById("load-memory-package-input").addEventListener("change",e=>{o.bus.publish("memory:fileSelectedForImport",e)}),document.querySelector("#memory-editor-modal .btn-secondary").addEventListener("click",pe),document.querySelector("#memory-editor-modal .btn:not(.btn-secondary)").addEventListener("click",()=>{o.bus.publish("memory:save")}),console.log("Memory UI Initialized.")}function Lt(t,e){e&&e.stopPropagation();const n=o.getProject();if(n.activeEntity.type!=="agent")return;const s=n.agentPresets[n.activeEntity.name];if(!s)return;s.activeMemories=s.activeMemories||[];const a=s.activeMemories.indexOf(t);a>-1?s.activeMemories.splice(a,1):s.activeMemories.push(t),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}function kt(){const t=document.getElementById("memory-name-input").value.trim(),e=document.getElementById("memory-content-input").value.trim(),n=document.getElementById("memory-edit-index").value;if(!t||!e){y("Please fill in all fields.");return}const s=o.getProject(),a=n!==""?parseInt(n,10):-1;if(s.memories.some((i,l)=>i.name===t&&l!==a)){y("A memory with this name already exists.");return}a!==-1?s.memories[a]={...s.memories[a],name:t,content:e}:s.memories.push({name:t,content:e}),o.setProject(s),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("memory:editorShouldClose")}function At(t,e){e&&e.stopPropagation();const n=o.getProject();if(n.memories[t]&&confirm(`Are you sure you want to delete the memory '${n.memories[t].name}'?`)){const s=n.memories[t].name;n.memories.splice(t,1),Object.values(n.agentPresets).forEach(a=>{if(a.activeMemories){const r=a.activeMemories.indexOf(s);r>-1&&a.activeMemories.splice(r,1)}}),o.setProject(n),o.updateAndPersistState(),o.bus.publish("memory:listChanged")}}function xt(){try{const t=o.getProject(),e={memories:t.memories,agentPresets:t.agentPresets},n=JSON.stringify(e,null,2),s=new Blob([n],{type:"application/json"}),a=URL.createObjectURL(s),r=document.createElement("a");r.style.display="none",r.href=a,r.download=`promptprim_agent_package_${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(a)}catch(t){y("Error saving agent package."),console.error(t)}}function Mt(t){const e=t.target.files[0];if(!e)return;const n=new FileReader;n.onload=s=>{try{const a=JSON.parse(s.target.result);if(a&&Array.isArray(a.memories)&&typeof a.agentPresets=="object"){const r=o.getProject(),i=new Set(r.memories.map(d=>d.name)),l=a.memories.filter(d=>!i.has(d.name));r.memories.push(...l),Object.assign(r.agentPresets,a.agentPresets),o.setProject(r),o.updateAndPersistState(),o.bus.publish("memory:listChanged"),o.bus.publish("agent:listChanged"),y("Agent package loaded successfully!")}else throw new Error("Invalid JSON format for agent package.")}catch(a){y(`Error loading agent package: ${a.message}`),console.error(a)}},n.readAsText(e),t.target.value=""}function Bt(){const e=document.getElementById("system-utility-summary-preset-select").value;if(e==="custom")return;const s=o.getProject().globalSettings.summarizationPromptPresets;if(s&&s[e]){const a=s[e];document.getElementById("system-utility-summary-prompt").value=a,o.bus.publish("settings:systemAgentChanged")}}function Tt(){const t=document.getElementById("system-utility-summary-prompt").value.trim();if(!t){y("Prompt template cannot be empty.","Error");return}const e=prompt("Enter a name for this new preset:","");if(!e||!e.trim())return;const n=o.getProject(),s=e.trim();n.globalSettings.summarizationPromptPresets[s]&&!confirm(`A preset named '${s}' already exists. Do you want to overwrite it?`)||(n.globalSettings.summarizationPromptPresets[s]=t,o.setProject(n),o.updateAndPersistState().then(()=>{o.bus.publish("ui:renderSummarizationSelector"),document.getElementById("system-utility-summary-preset-select").value=s,y(`Preset '${s}' saved successfully!`,"Success")}))}let I=[];function K(t){return Math.ceil((t||"").length/3)}function ke(t){const e=o.getProject();if(!e.agentPresets||!t)return"";const n=e.agentPresets[t];if(!n)return"";const s=n.systemPrompt||"",a=n.activeMemories||[],r=e.memories.filter(l=>a.includes(l.name)).map(l=>l.content).join(`
`);let i=s;return r&&(i+=`

--- Active Memories ---
`+r),i.trim()}function Nt(t,e,n){const s=[],a=o.getProject(),r=o.getState().allProviderModels,i=ke(e);i&&s.push({role:"system",content:i});let l=[...t];if(n?.summaryState?.activeSummaryId){const m=a.summaryLogs.find(p=>p.id===n.summaryState.activeSummaryId);if(m){const p=`[This is a loaded summary to provide context for the following conversation. SUMMARY CONTENT: ${m.content}]`;s.push({role:"system",content:p}),l=t.slice(n.summaryState.summarizedUntilIndex)}}const d=a.agentPresets[e];if(!d)return s;const c=r.find(m=>m.id===d.model),u=c?c.provider:null;return l.forEach(m=>{if(m.role==="system")return;let p={role:m.role};if(m.speaker&&m.role==="assistant"&&(p.name=m.speaker.replace(/\s+/g,"_")),typeof m.content=="string")p.content=m.content;else if(Array.isArray(m.content))if(u==="ollama"){const g=m.content.find(h=>h.type==="text"),v=m.content.find(h=>h.type==="image_url");g&&(p.content=g.text),v&&v.url&&(p.images=[v.url.split(",")[1]])}else p.content=m.content.map(g=>g.type==="image_url"?{type:"image_url",image_url:{url:g.url}}:g);s.push(p)}),s}async function ee(t=!1){const e=o.getProject();if(!e.activeEntity){y("Please select an agent or group first.","Error");return}const{type:n}=e.activeEntity,s=e.chatSessions.find(a=>a.id===e.activeSessionId);if(s){if(s.groupChatState?.isRunning){_();return}n==="group"?y("Group chat functionality is being refactored.","Info"):await Ot(t)}}async function Ot(t=!1){const e=o.getProject(),n=e.chatSessions.find(d=>d.id===e.activeSessionId);if(!n)return;const s=document.getElementById("chatInput"),a=s.value.trim();if(!t){if(!a&&I.length===0)return;let d=[];a&&d.push({type:"text",text:a}),I.forEach(c=>d.push({type:"image_url",url:c.data})),n.history.push({role:"user",content:d.length===1&&d[0].type==="text"?d[0].text:d}),s.value="",s.style.height="auto",I=[],o.bus.publish("ui:renderFilePreviews",I)}o.bus.publish("ui:renderChatMessages");const r=e.activeEntity.name,i=e.agentPresets[r];if(!i||!i.model){y("Please select an agent with a configured model.","Error");return}o.setLoading(!0),o.bus.publish("ui:showLoadingIndicator"),o.newAbortController();const l=n.history.length;n.history.push({role:"assistant",content:"...",speaker:r}),o.bus.publish("ui:addMessage",{role:"assistant",content:"",index:l,speakerName:r,isLoading:!0});try{const d=Nt(n.history.slice(0,-1),r,n),c=document.querySelector(`.message[data-index='${l}'] .message-content`),u=await qe(c,i,d,r);n.history[l]={role:"assistant",content:u,speaker:r},n.name==="New Chat"&&n.history.length<=2&&!t&&await $e(n.history)}catch(d){if(d.name!=="AbortError"){const c=`Error: ${d.message}`;n.history[l].content=c,y(c,"API Error")}else n.history.splice(l,1)}finally{_(),await j(E,"readwrite","put",n),o.bus.publish("ui:renderChatMessages"),o.bus.publish("project:persistRequired")}}function _(){const t=o.getProject(),e=t.chatSessions.find(n=>n.id===t.activeSessionId);e?.groupChatState&&(e.groupChatState.isRunning=!1),o.abort(),o.setLoading(!1),o.bus.publish("ui:hideLoadingIndicator"),o.bus.publish("status:update",{message:"Ready",state:"connected"})}function qt(t){const e=t.target.files;if(e){for(const n of e){const s=`file_${Date.now()}_${Math.random()}`,a={id:s,name:n.name,type:n.type,data:null};I.push(a);const r=new FileReader;r.onload=i=>{const l=I.findIndex(d=>d.id===s);l!==-1&&(I[l].data=i.target.result,o.bus.publish("ui:renderFilePreviews",I))},r.readAsDataURL(n)}t.target.value=""}}async function $t(t){o.bus.publish("status:update",{message:"Summarizing...",state:"loading"});const e=o.getProject(),n=e.globalSettings.systemUtilityAgent;if(!n||!n.model){y("System Utility Model for summarization is not configured in settings.","Error"),o.bus.publish("status:update",{message:"Summarization failed",state:"error"});return}const s=t.summaryState?.summarizedUntilIndex||0,a=t.history.slice(s);if(a.length<2){y("Not enough new messages to create a meaningful summary.","Info"),o.bus.publish("status:update",{message:"Ready",state:"connected"});return}try{o.bus.publish("status:update",{message:"Generating summary title...",state:"loading"});const r=`Based on the following conversation, create a very short, descriptive title (5-7 words). Respond with ONLY the title text, nothing else.

CONVERSATION:
${a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`)}`,i=await U(n,[{role:"user",content:r}]);o.bus.publish("status:update",{message:"Generating summary content...",state:"loading"});const l=t.summaryState?.activeSummaryId&&e.summaryLogs.find(g=>g.id===t.summaryState.activeSummaryId)?.content||"This is the beginning of the conversation.",d=n.summarizationPrompt||X.summarizationPrompt,c=a.map(g=>`${g.speaker||g.role}: ${typeof g.content=="string"?g.content:"[multimodal content]"}`).join(`
`),u=d.replace(/\$\{previousSummary\}/g,l).replace(/\$\{newMessages\}/g,c),m=await U(n,[{role:"user",content:u}]),p={id:`sum_${Date.now()}`,summary:i.trim().replace(/"/g,""),content:m,timestamp:Date.now(),sourceSessionId:t.id,summarizedUntilIndex:t.history.length};e.summaryLogs||(e.summaryLogs=[]),e.summaryLogs.push(p),t.summaryState={activeSummaryId:p.id,summarizedUntilIndex:p.summarizedUntilIndex},t.history.push({role:"system",content:`[ System: Conversation summarized under the title: "${p.summary}" ]`}),await j(E,"readwrite","put",t),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged"),y("Conversation summarized successfully!","Success")}catch(r){console.error("Failed to summarize history:",r),y(`Summarization Failed: ${r.message}`,"Error")}finally{o.bus.publish("status:update",{message:"Ready",state:"connected"})}}async function Dt(){const t=o.getProject(),e=t.chatSessions.find(n=>n.id===t.activeSessionId);if(!e){y("No active session found.","Error");return}confirm("Do you want to use the System Utility Agent to summarize this conversation?")&&await $t(e)}async function Ut(t){const e=o.getProject(),n=e.chatSessions.find(r=>r.id===e.activeSessionId),s=e.summaryLogs.find(r=>r.id===t);if(!n||!s)return;n.summaryState.activeSummaryId=s.id,n.summaryState.summarizedUntilIndex=n.history.length;const a={role:"system",content:`[ System: Context loaded from summary: "${s.summary}" ]`};n.history.push(a),await j(E,"readwrite","put",n),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function zt(){const t=o.getProject(),e=t.chatSessions.find(s=>s.id===t.activeSessionId);if(!e||!e.summaryState?.activeSummaryId)return;e.summaryState.activeSummaryId=null;const n={role:"system",content:"[ System: Summary context cleared. Conversation will now proceed using full history. ]"};e.history.push(n),await j(E,"readwrite","put",e),o.setProject(t),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"),o.bus.publish("summary:listChanged")}async function Rt(t){if(!confirm("Are you sure you want to permanently delete this summary log? This cannot be undone."))return;const e=o.getProject(),n=e.summaryLogs.findIndex(s=>s.id===t);n>-1&&(e.summaryLogs.splice(n,1),e.chatSessions.forEach(s=>{if(s.summaryState?.activeSummaryId===t&&(s.summaryState.activeSummaryId=null,s.id===e.activeSessionId)){const a={role:"system",content:"[ System: The active summary was deleted. Context has been cleared. ]"};s.history.push(a),o.bus.publish("ui:renderChatMessages")}}),o.setProject(e),await o.updateAndPersistState(),o.bus.publish("summary:listChanged"))}async function _t(t,e){e&&e.stopPropagation();const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);if(!s)return;const a=s.history[t];if(!a)return;let r="";typeof a.content=="string"?r=a.content:Array.isArray(a.content)&&(r=a.content.find(i=>i.type==="text")?.text||"");try{await navigator.clipboard.writeText(r),y("Copied to clipboard!")}catch(i){console.error("Failed to copy message:",i),y("Failed to copy message.","Error")}}async function Ft(t){const e=o.getProject(),n=e.chatSessions.find(d=>d.id===e.activeSessionId);if(!n)return;const s=n.history[t],a=document.querySelector(`.message[data-index='${t}']`);if(!a||s.role==="user"&&a.classList.contains("is-editing"))return;const r=a.querySelector(".message-content"),i=a.querySelector(".message-actions"),l=i?i.querySelector('button[title="Edit"], button[title="Save Changes"]'):null;if(s.role==="user"){r.style.display="none",a.classList.add("is-editing");const d=document.createElement("div");d.className="inline-edit-container";const c=document.createElement("textarea");c.className="inline-edit-textarea",c.value=typeof s.content=="string"?s.content:s.content.find(h=>h.type==="text")?.text||"";const u=document.createElement("div");u.className="inline-edit-actions";const m=document.createElement("button");m.textContent="Save & Submit",m.className="btn btn-small";const p=document.createElement("button");p.textContent="Cancel",p.className="btn btn-small btn-secondary",u.appendChild(p),u.appendChild(m),d.appendChild(c),d.appendChild(u),a.appendChild(d),c.focus(),c.style.height="auto",c.style.height=c.scrollHeight+"px";const g=()=>{d.remove(),r.style.display="block",a.classList.remove("is-editing")},v=()=>{const h=c.value.trim();n.history.splice(t),document.getElementById("chatInput").value=h,o.bus.publish("ui:renderChatMessages"),ee()};m.onclick=v,p.onclick=g,c.onkeydown=h=>{h.key==="Enter"&&!h.shiftKey?(h.preventDefault(),v()):h.key==="Escape"&&g()}}else if(s.role==="assistant")if(r.isContentEditable){r.contentEditable=!1;const c=r.innerHTML;n.history[t].content=c;try{await j(E,"readwrite","put",n),o.bus.publish("ui:renderChatMessages")}catch(u){console.error("Failed to save assistant message:",u),y("Error saving changes. Please try again.","Save Failed"),r.contentEditable=!0}}else a.classList.add("is-editing"),r.contentEditable=!0,r.style.border="1px solid var(--primary-color)",r.style.padding="5px",r.style.borderRadius="5px",r.focus(),l&&(l.innerHTML="&#10003;",l.title="Save Changes"),r.onkeydown=async c=>{c.key==="Escape"&&(c.preventDefault(),r.contentEditable=!1,o.bus.publish("ui:renderChatMessages"))}}function Gt(t){const e=o.getProject(),n=e.chatSessions.find(a=>a.id===e.activeSessionId);if(!n||t>=n.history.length)return;_();let s=-1;for(let a=t;a>=0;a--)if(n.history[a].role==="user"){s=a;break}s!==-1&&(n.history.splice(s+1),o.bus.publish("ui:renderChatMessages"),ee(!0))}function Ht(t){if(!confirm("Are you sure? This will delete this message and all subsequent messages in this chat."))return;const e=o.getProject(),n=e.chatSessions.find(s=>s.id===e.activeSessionId);n&&(n.history.splice(t),o.setProject(e),o.updateAndPersistState(),o.bus.publish("ui:renderChatMessages"))}function Ae(t){t.querySelectorAll("pre").forEach(n=>{if(n.parentNode.classList.contains("code-block-wrapper"))return;const s=document.createElement("div");s.className="code-block-wrapper",n.parentNode.insertBefore(s,n),s.appendChild(n);const a=document.createElement("button");a.className="copy-code-btn",a.textContent="Copy",s.appendChild(a),a.addEventListener("click",r=>{r.stopPropagation();const i=n.querySelector("code");i&&navigator.clipboard.writeText(i.textContent).then(()=>{a.textContent="Copied!",setTimeout(()=>{a.textContent="Copy"},2e3)})})})}function ge(){const t=o.getProject();if(!t||!t.chatSessions)return;const e=document.getElementById("chatMessages");e.innerHTML="";const n=t.chatSessions.find(a=>a.id===t.activeSessionId);n&&n.history.forEach((a,r)=>xe(a.role,a.content,r,a.speaker)),e.scrollTop=e.scrollHeight,z();const s=document.getElementById("clear-summary-btn");if(s){const a=n?.summaryState?.activeSummaryId;s.style.display=a?"block":"none"}}function xe(t,e,n,s=null,a=!1){const r=o.getProject(),i=document.getElementById("chatMessages"),l=document.createElement("div");l.className=`message-turn-wrapper ${t}-turn`;const d=document.createElement("div");d.className=`message ${t}`,d.dataset.index=n;const c=document.createElement("div");c.className="message-content";const u=r.agentPresets?.[s],m=u?u.icon:t==="user"?"🧑":"🤖";if(t==="assistant"||t==="user"&&s){const g=document.createElement("div");g.className="speaker-label-wrapper",g.innerHTML=`<span class="speaker-label">${m} ${s||"User"}</span>`,l.appendChild(g)}const p=document.createElement("span");if(p.className="streaming-content",a)p.innerHTML='<div class="loading"><div class="loading-dot"></div><div class="loading-dot"></div><div class="loading-dot"></div></div>';else{const v=(r.activeEntity.type==="agent"?r.agentPresets[r.activeEntity.name]:r.agentPresets[s]||{})?.useMarkdown!==!1;(Array.isArray(e)?e:[{type:"text",text:e}]).forEach(S=>{if(S.type==="text")if(t==="assistant"&&v&&window.marked)p.innerHTML+=marked.parse(S.text||"");else{const f=document.createTextNode(S.text||"");p.appendChild(f)}else if(S.type==="image_url"&&S.url){const f=document.createElement("img");f.src=S.url,f.className="multimodal-image",p.appendChild(f)}})}if(c.appendChild(p),a||(c.querySelectorAll("pre code").forEach(g=>hljs.highlightElement(g)),Ae(c)),d.appendChild(c),!a&&t!=="system"){const g=document.createElement("div");g.className="message-actions";const v=(h,S,f)=>{const P=document.createElement("button");return P.innerHTML=h,P.title=S,P.addEventListener("click",C=>{o.bus.publish(f,{index:n,event:C})}),P};g.appendChild(v("&#9998;","Edit","chat:editMessage")),g.appendChild(v("&#128203;","Copy","chat:copyMessage")),t==="assistant"&&g.appendChild(v("&#x21bb;","Regenerate","chat:regenerate")),g.appendChild(v("&#128465;","Delete","chat:deleteMessage")),d.appendChild(g)}return l.appendChild(d),i.appendChild(l),i.scrollTop=i.scrollHeight,d}function Me(t){const e=document.getElementById("file-preview-container");if(e.innerHTML="",!t||t.length===0){e.style.display="none";return}e.style.display="grid",t.forEach((n,s)=>{const a=document.createElement("div");a.className="file-preview-item";let r="";n.type.startsWith("image/")?r=`<img src="${n.data||""}" class="file-preview-thumbnail" alt="${n.name}">`:r='<div class="file-preview-thumbnail file-icon">📄</div>',a.innerHTML=`${r}<span class="file-preview-name">${n.name}</span><button class="remove-file-btn">&times;</button>`,a.querySelector(".remove-file-btn").addEventListener("click",()=>{o.bus.publish("chat:removeFile",{index:s})}),e.appendChild(a)})}function z(t=!1){const e=o.getProject();if(!e||!e.activeEntity)return;const{type:n,name:s}=e.activeEntity;let a,r;if(n==="agent")r=s,a=e.agentPresets[s];else if(n==="group"){r=s+" (Group)";const p=e.agentGroups[s];a=e.agentPresets[p?.moderatorAgent]||{}}if(!a)return;const i=ke(n==="agent"?s:e.agentGroups[s]?.moderatorAgent),l=K(i),d=e.chatSessions?.find(p=>p.id===e.activeSessionId);let c=0;d&&(c=K(JSON.stringify(d.history)));const u=K(document.getElementById("chatInput").value),m=l+c+u;document.getElementById("active-agent-status").textContent=`Active: ${a.icon||""} ${r}`,document.getElementById("token-count-status").textContent=`~${m.toLocaleString()} Tokens`,t&&(document.getElementById("inspector-agent-name").textContent=r,document.getElementById("inspector-agent-model").textContent=a.model||"N/A",document.getElementById("inspector-token-count").textContent=`~${m.toLocaleString()}`,document.getElementById("inspector-system-prompt").textContent=i||"(No system prompt or memories active)")}function Yt(){z(!0),document.getElementById("context-inspector-modal").style.display="flex"}function Kt(){document.getElementById("context-inspector-modal").style.display="none"}function Jt(){o.bus.subscribe("session:loaded",a=>{document.getElementById("chat-title").textContent=a.name,ge()}),o.bus.subscribe("session:titleChanged",a=>{document.getElementById("chat-title").textContent=a}),o.bus.subscribe("ui:renderChatMessages",ge),o.bus.subscribe("ui:addMessage",a=>xe(a.role,a.content,a.index,a.speakerName,a.isLoading)),o.bus.subscribe("ui:renderFilePreviews",Me),o.bus.subscribe("ui:showLoadingIndicator",()=>{document.getElementById("sendBtn").classList.add("hidden"),document.getElementById("stopBtn").classList.remove("hidden")}),o.bus.subscribe("ui:hideLoadingIndicator",()=>{document.getElementById("sendBtn").classList.remove("hidden"),document.getElementById("stopBtn").classList.add("hidden")}),o.bus.subscribe("entity:selected",()=>z()),o.bus.subscribe("ui:enhanceCodeBlocks",Ae);const t=document.getElementById("chatInput");t.addEventListener("keydown",a=>{a.key==="Enter"&&!a.shiftKey&&!(a.metaKey||a.ctrlKey)&&(a.preventDefault(),o.bus.publish("chat:sendMessage"))}),t.addEventListener("input",()=>{t.style.height="auto",t.style.height=t.scrollHeight+"px",z()}),document.getElementById("sendBtn").addEventListener("click",()=>o.bus.publish("chat:sendMessage")),document.getElementById("stopBtn").addEventListener("click",()=>o.bus.publish("chat:stopGeneration")),document.getElementById("context-inspector-trigger-btn").addEventListener("click",Yt),document.querySelector("#context-inspector-modal .btn-secondary").addEventListener("click",Kt);const e=document.getElementById("chat-actions-container");document.getElementById("chat-actions-btn").addEventListener("click",a=>{a.stopPropagation(),e.classList.toggle("open")});const s=(a,r)=>{const i=document.getElementById(a);i&&i.addEventListener("click",l=>{l.preventDefault(),l.stopPropagation(),r(l),e.classList.remove("open")})};s("manual-summarize-btn",()=>o.bus.publish("chat:summarize")),s("clear-summary-btn",()=>o.bus.publish("chat:clearSummary")),s("menu-upload-file-btn",()=>document.getElementById("file-input").click()),document.getElementById("file-input").addEventListener("change",a=>o.bus.publish("chat:fileUpload",a)),console.log("Chat UI Initialized.")}function Wt(t){const e=document.createElement("div");e.className="summary-log-item",e.dataset.logId=t.id;const n=o.getProject(),s=n.chatSessions.find(i=>i.id===n.activeSessionId);s&&s.summaryState?.activeSummaryId===t.id&&e.classList.add("active");const r=new Date(t.timestamp).toLocaleTimeString("th-TH",{hour:"2-digit",minute:"2-digit"});return e.innerHTML=`
        <div class="summary-log-item-header">
            <span class="summary-log-item-title" title="${t.summary}">${t.summary}</span>
            <div class="summary-log-item-actions">
                <button class="btn-icon btn-small" data-action="load" title="Load as context">&#11139;</button>
                <button class="btn-icon btn-small" data-action="view" title="View content">&#128269;</button>
                <button class="btn-icon btn-small danger" data-action="delete" title="Delete summary">&#128465;</button>
            </div>
        </div>
        <div class="summary-log-item-meta">
            <span>${r}</span>
        </div>
    `,e.querySelector('[data-action="load"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:load",{logId:t.id})}),e.querySelector('[data-action="view"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:view",{logId:t.id})}),e.querySelector('[data-action="delete"]').addEventListener("click",i=>{i.stopPropagation(),o.bus.publish("summary:delete",{logId:t.id})}),e}function J(){const t=o.getProject();if(!t||!t.summaryLogs)return;const e=document.getElementById("summaryLogList");e.innerHTML="";const n=t.summaryLogs.reduce((a,r)=>{const i=r.sourceSessionId,l=t.chatSessions.find(d=>d.id===i);return a[i]||(a[i]={name:l?l.name:"Unknown Session",logs:[]}),a[i].logs.push(r),a},{}),s=t.activeSessionId;if(Object.keys(n).length===0){e.innerHTML='<p class="no-logs-message">No summaries yet.</p>';return}for(const a in n){const r=n[a],i=r.logs.sort((c,u)=>u.timestamp-c.timestamp),l=document.createElement("details");l.className="summary-group";const d=document.createElement("summary");d.textContent=`For: ${r.name}`,l.appendChild(d),i.forEach(c=>{l.appendChild(Wt(c))}),a===s&&i.length>0&&(l.open=!0),e.appendChild(l)}}function Vt(t){const n=o.getProject().summaryLogs.find(s=>s.id===t);n&&(document.getElementById("view-summary-title").textContent=n.summary,document.getElementById("view-summary-content").textContent=n.content,document.getElementById("view-summary-modal").style.display="flex")}function Xt(){document.getElementById("view-summary-modal").style.display="none"}function Qt(){o.bus.subscribe("project:loaded",J),o.bus.subscribe("session:loaded",J),o.bus.subscribe("summary:listChanged",J),document.querySelector("#view-summary-modal .btn-secondary").addEventListener("click",Xt),console.log("Summary UI Initialized.")}async function Zt(){try{marked.setOptions({highlight:function(t,e){const n=hljs.getLanguage(e)?e:"plaintext";return hljs.highlight(t,{language:n}).value},gfm:!0,breaks:!0}),nn(),He(),We(),ht(),bt(),Pt(),Ct(),Jt(),Qt(),en(),await Z()}catch(t){console.error("Critical initialization failed:",t),y(`An unexpected error occurred during startup: ${t.message}. Please try clearing website data and reloading.`,"Fatal Error")}}function en(){const t=o.bus;t.subscribe("project:persistRequired",Ie),t.subscribe("project:new",at),t.subscribe("project:open",()=>document.getElementById("load-project-input").click()),t.subscribe("project:fileSelectedForOpen",e=>rt(e)),t.subscribe("project:save",e=>we(e)),t.subscribe("project:saveConfirm",({projectName:e})=>Pe(e)),t.subscribe("project:unsavedChangesChoice",e=>it(e)),t.subscribe("project:exportChat",({sessionId:e})=>st(e)),t.subscribe("api:loadModels",be),t.subscribe("settings:fontChanged",ut),t.subscribe("settings:apiKeyChanged",mt),t.subscribe("settings:ollamaUrlChanged",pt),t.subscribe("settings:systemAgentChanged",gt),t.subscribe("settings:summaryPresetChanged",Bt),t.subscribe("settings:saveSummaryPreset",Tt),t.subscribe("entity:select",({type:e,name:n})=>yt(e,n)),t.subscribe("session:new",R),t.subscribe("session:load",({sessionId:e})=>N(e)),t.subscribe("session:rename",({sessionId:e,event:n})=>oe(e,n)),t.subscribe("session:clone",({sessionId:e,event:n})=>tt(e,n)),t.subscribe("session:archive",({sessionId:e,event:n})=>nt(e,n)),t.subscribe("session:pin",({sessionId:e,event:n})=>et(e,n)),t.subscribe("session:delete",({sessionId:e,event:n})=>Ze(e,n)),t.subscribe("session:autoRename",({sessionId:e,newName:n})=>oe(e,null,n)),t.subscribe("agent:create",()=>re(!1)),t.subscribe("agent:edit",({agentName:e})=>re(!0,e)),t.subscribe("agent:save",Et),t.subscribe("agent:delete",({agentName:e})=>St(e)),t.subscribe("agent:generateProfile",vt),t.subscribe("group:create",()=>ce(!1)),t.subscribe("group:edit",({groupName:e})=>ce(!0,e)),t.subscribe("group:save",jt),t.subscribe("group:delete",({groupName:e})=>It(e)),t.subscribe("memory:create",()=>me(null)),t.subscribe("memory:edit",({index:e,event:n})=>me(e,n)),t.subscribe("memory:save",kt),t.subscribe("memory:delete",({index:e,event:n})=>At(e,n)),t.subscribe("memory:toggle",({name:e,event:n})=>Lt(e,n)),t.subscribe("memory:exportPackage",xt),t.subscribe("memory:importPackage",()=>document.getElementById("load-memory-package-input").click()),t.subscribe("memory:fileSelectedForImport",Mt),t.subscribe("chat:sendMessage",()=>ee(!1)),t.subscribe("chat:stopGeneration",_),t.subscribe("chat:fileUpload",e=>qt(e)),t.subscribe("chat:summarize",Dt),t.subscribe("chat:removeFile",({index:e})=>{I&&I[e]&&(I.splice(e,1),Me(I))}),t.subscribe("chat:clearSummary",zt),t.subscribe("chat:copyMessage",({index:e,event:n})=>_t(e,n)),t.subscribe("chat:editMessage",({index:e})=>Ft(e)),t.subscribe("chat:regenerate",({index:e})=>Gt(e)),t.subscribe("chat:deleteMessage",({index:e})=>Ht(e)),t.subscribe("summary:view",({logId:e})=>Vt(e)),t.subscribe("summary:load",({logId:e})=>Ut(e)),t.subscribe("summary:delete",({logId:e})=>Rt(e)),console.log("Event bus subscriptions are set up.")}function V(t){if(t==="system"){const e=window.matchMedia("(prefers-color-scheme: dark)").matches;document.body.classList.toggle("dark-mode",e)}else document.body.classList.toggle("dark-mode",t==="dark")}function tn(t){const e=t.target.value;localStorage.setItem("theme",e),V(e)}function nn(){const t=document.getElementById("theme-switcher");if(!t)return;const e=t.querySelectorAll('input[type="radio"]'),n=localStorage.getItem("theme")||"system";e.forEach(s=>{s.value===n&&(s.checked=!0),s.addEventListener("change",tn)}),V(n),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",()=>{(localStorage.getItem("theme")||"system")==="system"&&V("system")})}document.addEventListener("DOMContentLoaded",Zt);
